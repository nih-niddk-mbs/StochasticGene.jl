var documenterSearchIndex = {"docs":
[{"location":"api/write_ONOFFhistograms.html#write_ONOFFhistograms-Function","page":"write_ONOFFhistograms Function","title":"write_ONOFFhistograms Function","text":"","category":"section"},{"location":"api/write_ONOFFhistograms.html","page":"write_ONOFFhistograms Function","title":"write_ONOFFhistograms Function","text":"Generate ON/OFF dwell time histograms for GRSM models.","category":"page"},{"location":"api/write_ONOFFhistograms.html#Syntax","page":"write_ONOFFhistograms Function","title":"Syntax","text":"","category":"section"},{"location":"api/write_ONOFFhistograms.html","page":"write_ONOFFhistograms Function","title":"write_ONOFFhistograms Function","text":"write_ONOFFhistograms(; kwargs...)","category":"page"},{"location":"api/write_ONOFFhistograms.html#Arguments","page":"write_ONOFFhistograms Function","title":"Arguments","text":"","category":"section"},{"location":"api/write_ONOFFhistograms.html#Model-Parameters","page":"write_ONOFFhistograms Function","title":"Model Parameters","text":"","category":"section"},{"location":"api/write_ONOFFhistograms.html","page":"write_ONOFFhistograms Function","title":"write_ONOFFhistograms Function","text":"G::Int = 2: Number of gene states\nR::Int = 0: Number of pre-RNA steps\nS::Int = 0: Number of splice sites\ninsertstep::Int = 1: Reporter insertion step\ntransitions::Tuple = (): State transitions\nrates::Vector{Float64}: Model rates\nnalleles::Int = 1: Number of alleles","category":"page"},{"location":"api/write_ONOFFhistograms.html#Histogram-Parameters","page":"write_ONOFFhistograms Function","title":"Histogram Parameters","text":"","category":"section"},{"location":"api/write_ONOFFhistograms.html","page":"write_ONOFFhistograms Function","title":"write_ONOFFhistograms Function","text":"ntraces::Int = 1000: Number of traces for histogram\ntspan::Tuple{Float64, Float64} = (0., 1000.): Time span for traces\ndt::Float64 = 1.0: Time step\nbins::Int = 100: Number of histogram bins\nmaxtime::Float64 = 100.0: Maximum dwell time","category":"page"},{"location":"api/write_ONOFFhistograms.html#Output-Parameters","page":"write_ONOFFhistograms Function","title":"Output Parameters","text":"","category":"section"},{"location":"api/write_ONOFFhistograms.html","page":"write_ONOFFhistograms Function","title":"write_ONOFFhistograms Function","text":"outfolder::String = \"histograms\": Output folder\nlabel::String = \"\": Output file label\nwrite::Bool = true: Write histograms to file\nreturnhist::Bool = false: Return histogram data","category":"page"},{"location":"api/write_ONOFFhistograms.html#Returns","page":"write_ONOFFhistograms Function","title":"Returns","text":"","category":"section"},{"location":"api/write_ONOFFhistograms.html","page":"write_ONOFFhistograms Function","title":"write_ONOFFhistograms Function","text":"hist: Tuple containing:\nON dwell time histogram\nOFF dwell time histogram\nBin edges","category":"page"},{"location":"api/write_ONOFFhistograms.html#Examples","page":"write_ONOFFhistograms Function","title":"Examples","text":"","category":"section"},{"location":"api/write_ONOFFhistograms.html","page":"write_ONOFFhistograms Function","title":"write_ONOFFhistograms Function","text":"# Generate histograms for a simple G model\nwrite_ONOFFhistograms(\n    G = 2,\n    R = 0,\n    rates = [0.1, 0.2],  # G1->G2, G2->G1\n    ntraces = 1000,\n    tspan = (0., 1000.),\n    bins = 100,\n    maxtime = 100.0\n)\n\n# Generate histograms for a GR model\nwrite_ONOFFhistograms(\n    G = 2,\n    R = 3,\n    S = 2,\n    insertstep = 1,\n    rates = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6],\n    ntraces = 5000,\n    tspan = (0., 2000.),\n    bins = 150,\n    maxtime = 200.0\n)","category":"page"},{"location":"api/write_ONOFFhistograms.html#Notes","page":"write_ONOFFhistograms Function","title":"Notes","text":"","category":"section"},{"location":"api/write_ONOFFhistograms.html","page":"write_ONOFFhistograms Function","title":"write_ONOFFhistograms Function","text":"Histogram Generation\nTraces are generated using Gillespie algorithm\nON/OFF states are determined by gene state\nHistograms are normalized to total number of transitions\nRate Order\nG transitions\nR transitions\nS transitions\nDecay","category":"page"},{"location":"api/write_residency_G_folder.html#write*residency*G_folder-Function","page":"writeresidencyG_folder Function","title":"writeresidencyG_folder Function","text":"","category":"section"},{"location":"api/write_residency_G_folder.html","page":"writeresidencyG_folder Function","title":"writeresidencyG_folder Function","text":"Generate G state residency probabilities for GRSM models.","category":"page"},{"location":"api/write_residency_G_folder.html#Syntax","page":"writeresidencyG_folder Function","title":"Syntax","text":"","category":"section"},{"location":"api/write_residency_G_folder.html","page":"writeresidencyG_folder Function","title":"writeresidencyG_folder Function","text":"write_residency_G_folder(; kwargs...)","category":"page"},{"location":"api/write_residency_G_folder.html#Arguments","page":"writeresidencyG_folder Function","title":"Arguments","text":"","category":"section"},{"location":"api/write_residency_G_folder.html#Model-Parameters","page":"writeresidencyG_folder Function","title":"Model Parameters","text":"","category":"section"},{"location":"api/write_residency_G_folder.html","page":"writeresidencyG_folder Function","title":"writeresidencyG_folder Function","text":"G::Int = 2: Number of gene states\nR::Int = 0: Number of pre-RNA steps\nS::Int = 0: Number of splice sites\ninsertstep::Int = 1: Reporter insertion step\ntransitions::Tuple = (): State transitions\nrates::Vector{Float64}: Model rates\nnalleles::Int = 1: Number of alleles","category":"page"},{"location":"api/write_residency_G_folder.html#Simulation-Parameters","page":"writeresidencyG_folder Function","title":"Simulation Parameters","text":"","category":"section"},{"location":"api/write_residency_G_folder.html","page":"writeresidencyG_folder Function","title":"writeresidencyG_folder Function","text":"ntraces::Int = 1000: Number of traces\ntspan::Tuple{Float64, Float64} = (0., 1000.): Time span for traces\ndt::Float64 = 1.0: Time step\nburnin::Float64 = 0.0: Burn-in time\nsampletime::Float64 = 1.0: Sampling interval","category":"page"},{"location":"api/write_residency_G_folder.html#Output-Parameters","page":"writeresidencyG_folder Function","title":"Output Parameters","text":"","category":"section"},{"location":"api/write_residency_G_folder.html","page":"writeresidencyG_folder Function","title":"writeresidencyG_folder Function","text":"outfolder::String = \"residency\": Output folder\nlabel::String = \"\": Output file label\nwrite::Bool = true: Write residency data to file\nreturnresidency::Bool = false: Return residency data","category":"page"},{"location":"api/write_residency_G_folder.html#Returns","page":"writeresidencyG_folder Function","title":"Returns","text":"","category":"section"},{"location":"api/write_residency_G_folder.html","page":"writeresidencyG_folder Function","title":"writeresidencyG_folder Function","text":"residency: Array of residency probabilities for each G state","category":"page"},{"location":"api/write_residency_G_folder.html#Examples","page":"writeresidencyG_folder Function","title":"Examples","text":"","category":"section"},{"location":"api/write_residency_G_folder.html","page":"writeresidencyG_folder Function","title":"writeresidencyG_folder Function","text":"# Generate residency for a simple G model\nwrite_residency_G_folder(\n    G = 2,\n    R = 0,\n    rates = [0.1, 0.2],  # G1->G2, G2->G1\n    ntraces = 1000,\n    tspan = (0., 1000.),\n    dt = 1.0\n)\n\n# Generate residency for a GR model\nwrite_residency_G_folder(\n    G = 2,\n    R = 3,\n    S = 2,\n    insertstep = 1,\n    rates = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6],\n    ntraces = 5000,\n    tspan = (0., 2000.),\n    dt = 0.5,\n    burnin = 100.0,\n    sampletime = 5.0\n)","category":"page"},{"location":"api/write_residency_G_folder.html#Notes","page":"writeresidencyG_folder Function","title":"Notes","text":"","category":"section"},{"location":"api/write_residency_G_folder.html","page":"writeresidencyG_folder Function","title":"writeresidencyG_folder Function","text":"Residency Calculation\nTraces are generated using Gillespie algorithm\nResidency is calculated as fraction of time in each G state\nResults are averaged over all traces\nRate Order\nG transitions\nR transitions\nS transitions\nDecay","category":"page"},{"location":"getting_started.html#Getting-Started","page":"Getting Started","title":"Getting Started","text":"","category":"section"},{"location":"getting_started.html#Basic-Usage","page":"Getting Started","title":"Basic Usage","text":"","category":"section"},{"location":"getting_started.html","page":"Getting Started","title":"Getting Started","text":"To use StochasticGene:","category":"page"},{"location":"getting_started.html","page":"Getting Started","title":"Getting Started","text":"using StochasticGene","category":"page"},{"location":"getting_started.html#Basic-Model-Fitting","page":"Getting Started","title":"Basic Model Fitting","text":"","category":"section"},{"location":"getting_started.html","page":"Getting Started","title":"Getting Started","text":"To fit a basic model:","category":"page"},{"location":"getting_started.html","page":"Getting Started","title":"Getting Started","text":"fits = fit(\n    G = 2,  # Number of gene states\n    R = 0,  # Number of pre-RNA steps\n    transitions = ([1,2], [2,1]),  # Gene state transitions\n    datatype = \"rna\",  # Data type\n    datapath = \"data/HCT116_testdata/\",  # Path to data\n    gene = \"MYC\",  # Gene name\n    datacond = \"MOCK\"  # Data condition\n)","category":"page"},{"location":"getting_started.html#Model-Types","page":"Getting Started","title":"Model Types","text":"","category":"section"},{"location":"getting_started.html","page":"Getting Started","title":"Getting Started","text":"StochasticGene supports several model types:","category":"page"},{"location":"getting_started.html","page":"Getting Started","title":"Getting Started","text":"G models (telegraph models)\nGR models (with pre-RNA steps)\nGRS models (with splicing)\nCoupled models (multiple alleles)","category":"page"},{"location":"getting_started.html#Data-Types","page":"Getting Started","title":"Data Types","text":"","category":"section"},{"location":"getting_started.html","page":"Getting Started","title":"Getting Started","text":"The package can handle:","category":"page"},{"location":"getting_started.html","page":"Getting Started","title":"Getting Started","text":"mRNA count distributions (smFISH, scRNA)\nImage intensity traces (live cell imaging)\nDwell time distributions\nCombined data types","category":"page"},{"location":"api/index.html#API-Reference","page":"API Reference","title":"API Reference","text":"","category":"section"},{"location":"api/index.html","page":"API Reference","title":"API Reference","text":"This section contains the complete API reference for StochasticGene.jl.","category":"page"},{"location":"api/index.html#Main-Functions","page":"API Reference","title":"Main Functions","text":"","category":"section"},{"location":"api/index.html","page":"API Reference","title":"API Reference","text":"fit: Fit GRSM models to RNA data\nwrite_traces: Generate model predicted traces\nwrite_ONOFFhistograms: Generate ON/OFF dwell time histograms\nwriteresidencyG_folder: Generate G state residency probabilities","category":"page"},{"location":"api/index.html#Model-Types","page":"API Reference","title":"Model Types","text":"","category":"section"},{"location":"api/index.html","page":"API Reference","title":"API Reference","text":"G models (telegraph models)\nGR models (with pre-RNA steps)\nGRS models (with splicing)\nCoupled models (multiple alleles)","category":"page"},{"location":"api/index.html#Data-Types","page":"API Reference","title":"Data Types","text":"","category":"section"},{"location":"api/index.html","page":"API Reference","title":"API Reference","text":"RNA count distributions\nImage intensity traces\nDwell time distributions\nCombined data types","category":"page"},{"location":"api/index.html#Documentation","page":"API Reference","title":"Documentation","text":"","category":"section"},{"location":"api/index.html","page":"API Reference","title":"API Reference","text":"The detailed API documentation for each function is automatically generated from the docstrings in the source code. Click on any function name in the main functions list above to view its complete documentation, including:","category":"page"},{"location":"api/index.html","page":"API Reference","title":"API Reference","text":"Arguments\nReturn values\nExamples\nNotes","category":"page"},{"location":"contributing.html#Contributing","page":"Contributing","title":"Contributing","text":"","category":"section"},{"location":"contributing.html#Reporting-Issues","page":"Contributing","title":"Reporting Issues","text":"","category":"section"},{"location":"contributing.html","page":"Contributing","title":"Contributing","text":"Please report any bugs or issues on the GitHub Issues page.","category":"page"},{"location":"contributing.html#Development","page":"Contributing","title":"Development","text":"","category":"section"},{"location":"contributing.html","page":"Contributing","title":"Contributing","text":"Fork the repository\nCreate a feature branch\nMake your changes\nRun tests\nSubmit a pull request","category":"page"},{"location":"contributing.html#Documentation","page":"Contributing","title":"Documentation","text":"","category":"section"},{"location":"contributing.html","page":"Contributing","title":"Contributing","text":"All public functions should have docstrings following the Julia documentation guidelines.","category":"page"},{"location":"contributing.html#Testing","page":"Contributing","title":"Testing","text":"","category":"section"},{"location":"contributing.html","page":"Contributing","title":"Contributing","text":"Run the test suite to ensure your changes don't break existing functionality:","category":"page"},{"location":"contributing.html","page":"Contributing","title":"Contributing","text":"using Pkg\nPkg.test(\"StochasticGene\")","category":"page"},{"location":"contributing.html#Code-Style","page":"Contributing","title":"Code Style","text":"","category":"section"},{"location":"contributing.html","page":"Contributing","title":"Contributing","text":"Follow Julia's style guidelines\nUse descriptive variable names\nAdd comments for complex logic\nKeep functions focused and modular","category":"page"},{"location":"installation.html#Installation","page":"Installation","title":"Installation","text":"","category":"section"},{"location":"installation.html#Local-Installation","page":"Installation","title":"Local Installation","text":"","category":"section"},{"location":"installation.html","page":"Installation","title":"Installation","text":"To install StochasticGene on a local computer:","category":"page"},{"location":"installation.html","page":"Installation","title":"Installation","text":"julia\nusing Pkg\nPkg.add(\"https://github.com/nih-niddk-mbs/StochasticGene.jl\")","category":"page"},{"location":"installation.html#Biowulf-Installation","page":"Installation","title":"Biowulf Installation","text":"","category":"section"},{"location":"installation.html","page":"Installation","title":"Installation","text":"StochasticGene is available on the NIH Biowulf system. To install it:","category":"page"},{"location":"installation.html","page":"Installation","title":"Installation","text":"julia\nusing Pkg\nPkg.add(\"https://github.com/nih-niddk-mbs/StochasticGene.jl\")","category":"page"},{"location":"installation.html#Requirements","page":"Installation","title":"Requirements","text":"","category":"section"},{"location":"installation.html","page":"Installation","title":"Installation","text":"Julia 1.9.3 or higher\nRequired packages will be automatically installed during installation","category":"page"},{"location":"examples/index.html#Examples","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"examples/index.html","page":"Examples","title":"Examples","text":"This section contains example usage of StochasticGene.jl.","category":"page"},{"location":"examples/index.html","page":"Examples","title":"Examples","text":"note: Note\nMore examples will be added in future versions.","category":"page"},{"location":"examples/index.html#Basic-Usage","page":"Examples","title":"Basic Usage","text":"","category":"section"},{"location":"examples/index.html","page":"Examples","title":"Examples","text":"Here's a basic example of how to use StochasticGene.jl:","category":"page"},{"location":"examples/index.html","page":"Examples","title":"Examples","text":"using StochasticGene\n\n# Basic example code will go here\n# This is just a placeholder for now","category":"page"},{"location":"examples/index.html#Fitting-Models","page":"Examples","title":"Fitting Models","text":"","category":"section"},{"location":"examples/index.html","page":"Examples","title":"Examples","text":"Examples of fitting models to data:","category":"page"},{"location":"examples/index.html","page":"Examples","title":"Examples","text":"using StochasticGene\n\n# Fitting example code will go here\n# This is just a placeholder for now","category":"page"},{"location":"index.html#StochasticGene.jl","page":"Home","title":"StochasticGene.jl","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"StochasticGene.jl is a Julia package for simulating and fitting stochastic models of gene transcription to experimental data. It supports a variety of data types and model configurations, making it versatile for different biological applications.","category":"page"},{"location":"index.html#Features","page":"Home","title":"Features","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"Flexible Model Architecture\nArbitrary number of gene states (G)\nPre-RNA steps (R)\nSplice sites (S)\nReporter insertion steps\nMultiple alleles support\nData Types Supported\nmRNA count distributions (smFISH, scRNA)\nImage intensity traces (live cell imaging)\nDwell time distributions\nCombined data types\nAdvanced Fitting\nBayesian parameter estimation\nMCMC sampling\nHierarchical modeling\nParallel processing support\nAnalysis Tools\nTrace simulation\nON/OFF dwell time analysis\nG state residency probabilities\nBurst size analysis","category":"page"},{"location":"index.html#Quick-Start","page":"Home","title":"Quick Start","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"To get started with StochasticGene.jl:","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"using StochasticGene\n\n# Fit a basic model\nfits = fit(\n    G = 2,  # Number of gene states\n    R = 0,  # Number of pre-RNA steps\n    transitions = ([1,2], [2,1]),  # Gene state transitions\n    datatype = \"rna\",  # Data type\n    datapath = \"data/HCT116_testdata/\",  # Path to data\n    gene = \"MYC\",  # Gene name\n    datacond = \"MOCK\"  # Data condition\n)","category":"page"},{"location":"index.html#Documentation-Structure","page":"Home","title":"Documentation Structure","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"Installation: How to install StochasticGene.jl\nGetting Started: Basic usage and examples\nAPI Reference: Complete API documentation\nExamples: Detailed usage examples\nContributing: How to contribute to the project","category":"page"},{"location":"index.html#System-Requirements","page":"Home","title":"System Requirements","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"Julia 1.9.3 or higher\nRequired packages will be automatically installed\nFor large datasets: Multiprocessor system recommended","category":"page"},{"location":"index.html#Support","page":"Home","title":"Support","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"For questions or issues, please:","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"Check the documentation\nOpen an issue on the GitHub repository\nContact the maintainers directly","category":"page"},{"location":"index.html#Citation","page":"Home","title":"Citation","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"If you use StochasticGene.jl in your research, please cite:","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"Rodriguez, J., et al. (2018). Cell\nWan, L., et al. (2021). Cell\nTrzaskoma, M., et al. (2024). Science Advances","category":"page"},{"location":"index.html#License","page":"Home","title":"License","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"StochasticGene.jl is open source software licensed under the MIT License.","category":"page"},{"location":"api/write_traces.html#write_traces-Function","page":"write_traces Function","title":"write_traces Function","text":"","category":"section"},{"location":"api/write_traces.html","page":"write_traces Function","title":"write_traces Function","text":"Generate model-predicted intensity traces for GRSM models.","category":"page"},{"location":"api/write_traces.html#Syntax","page":"write_traces Function","title":"Syntax","text":"","category":"section"},{"location":"api/write_traces.html","page":"write_traces Function","title":"write_traces Function","text":"write_traces(; kwargs...)","category":"page"},{"location":"api/write_traces.html#Arguments","page":"write_traces Function","title":"Arguments","text":"","category":"section"},{"location":"api/write_traces.html#Model-Parameters","page":"write_traces Function","title":"Model Parameters","text":"","category":"section"},{"location":"api/write_traces.html","page":"write_traces Function","title":"write_traces Function","text":"G::Int = 2: Number of gene states\nR::Int = 0: Number of pre-RNA steps\nS::Int = 0: Number of splice sites\ninsertstep::Int = 1: Reporter insertion step\ntransitions::Tuple = (): State transitions\nrates::Vector{Float64}: Model rates\nnalleles::Int = 1: Number of alleles","category":"page"},{"location":"api/write_traces.html#Trace-Parameters","page":"write_traces Function","title":"Trace Parameters","text":"","category":"section"},{"location":"api/write_traces.html","page":"write_traces Function","title":"write_traces Function","text":"ntraces::Int = 100: Number of traces to generate\ntspan::Tuple{Float64, Float64} = (0., 100.): Time span for traces\ndt::Float64 = 1.0: Time step\nnoise::Vector{Float64} = Float64[]: Observation noise parameters\nprobfn::Function = prob_Gaussian: Observation probability function","category":"page"},{"location":"api/write_traces.html#Output-Parameters","page":"write_traces Function","title":"Output Parameters","text":"","category":"section"},{"location":"api/write_traces.html","page":"write_traces Function","title":"write_traces Function","text":"outfolder::String = \"traces\": Output folder\nlabel::String = \"\": Output file label\nwrite::Bool = true: Write traces to file\nreturntraces::Bool = false: Return traces array","category":"page"},{"location":"api/write_traces.html#Returns","page":"write_traces Function","title":"Returns","text":"","category":"section"},{"location":"api/write_traces.html","page":"write_traces Function","title":"write_traces Function","text":"traces: Array of generated traces (if returntraces = true)","category":"page"},{"location":"api/write_traces.html#Examples","page":"write_traces Function","title":"Examples","text":"","category":"section"},{"location":"api/write_traces.html","page":"write_traces Function","title":"write_traces Function","text":"# Generate traces for a simple G model\nwrite_traces(\n    G = 2,\n    R = 0,\n    rates = [0.1, 0.2],  # G1->G2, G2->G1\n    ntraces = 100,\n    tspan = (0., 100.),\n    dt = 1.0\n)\n\n# Generate traces for a GR model\nwrite_traces(\n    G = 2,\n    R = 3,\n    S = 2,\n    insertstep = 1,\n    rates = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6],\n    ntraces = 50,\n    tspan = (0., 200.),\n    dt = 0.5\n)","category":"page"},{"location":"api/write_traces.html#Notes","page":"write_traces Function","title":"Notes","text":"","category":"section"},{"location":"api/write_traces.html","page":"write_traces Function","title":"write_traces Function","text":"Rate Order\nG transitions\nR transitions\nS transitions\nDecay\nNoise parameters\nTrace Generation\nTraces are generated using Gillespie algorithm\nNoise is added according to specified probfn\nOutput format: time, intensity, G state, R state, S state","category":"page"},{"location":"api/fit.html#fit-Function","page":"fit Function","title":"fit Function","text":"","category":"section"},{"location":"api/fit.html","page":"fit Function","title":"fit Function","text":"Fit GRSM models (generalized telegraph models) to RNA abundance and live cell imaging data.","category":"page"},{"location":"api/fit.html#Syntax","page":"fit Function","title":"Syntax","text":"","category":"section"},{"location":"api/fit.html","page":"fit Function","title":"fit Function","text":"fits = fit(; kwargs...)","category":"page"},{"location":"api/fit.html#Arguments","page":"fit Function","title":"Arguments","text":"","category":"section"},{"location":"api/fit.html#Basic-Model-Parameters","page":"fit Function","title":"Basic Model Parameters","text":"","category":"section"},{"location":"api/fit.html","page":"fit Function","title":"fit Function","text":"G::Int = 2: Number of gene states\nR::Int = 0: Number of pre-RNA steps\nS::Int = 0: Number of splice sites\ninsertstep::Int = 1: Reporter insertion step\ntransitions::Tuple: Tuple of vectors specifying state transitions","category":"page"},{"location":"api/fit.html#Data-Parameters","page":"fit Function","title":"Data Parameters","text":"","category":"section"},{"location":"api/fit.html","page":"fit Function","title":"fit Function","text":"datatype::String = \"rna\": Data type:\n\"rna\": mRNA count distributions\n\"trace\": Intensity traces\n\"rnadwelltime\": Combined RNA and dwell time data\n\"tracejoint\": Simultaneous recorded traces\ndatapath::String = \"\": Path to data file or folder\ndatacond::String = \"\": Data condition identifier\ncell::String = \"\": Cell type\ngene::String = \"MYC\": Gene name\nnalleles::Int = 1: Number of alleles","category":"page"},{"location":"api/fit.html#Fitting-Parameters","page":"fit Function","title":"Fitting Parameters","text":"","category":"section"},{"location":"api/fit.html","page":"fit Function","title":"fit Function","text":"nchains::Int = 2: Number of MCMC chains\nmaxtime::Float64 = 60: Maximum wall time (minutes)\nsamplesteps::Int = 1000000: Number of MCMC sampling steps\nwarmupsteps::Int = 0: Number of warmup steps\npropcv::Float64 = 0.01: Proposal distribution coefficient of variation\nannealsteps::Int = 0: Number of annealing steps\ntemp::Float64 = 1.0: MCMC temperature","category":"page"},{"location":"api/fit.html#Prior-Parameters","page":"fit Function","title":"Prior Parameters","text":"","category":"section"},{"location":"api/fit.html","page":"fit Function","title":"fit Function","text":"priormean::Vector{Float64} = Float64[]: Mean rates for prior distribution\npriorcv::Float64 = 10.0: Prior distribution coefficient of variation\nnoisepriors::Vector = []: Observation noise priors\nfittedparams::Vector{Int} = Int[]: Indices of rates to fit\nfixedeffects::Tuple = tuple(): Fixed effects specification\nhierarchical::Tuple = tuple(): Hierarchical model specification","category":"page"},{"location":"api/fit.html#Trace-Parameters-(for-trace-data)","page":"fit Function","title":"Trace Parameters (for trace data)","text":"","category":"section"},{"location":"api/fit.html","page":"fit Function","title":"fit Function","text":"traceinfo::Tuple = (1.0, 1., -1, 1.): Trace parameters:\nFrame interval (minutes)\nStarting frame time (minutes)\nEnding frame time (-1 for last)\nFraction of active traces\ndatacol::Int = 3: Data column index\nprobfn::Function = prob_Gaussian: Observation probability function\nnoiseparams::Int = 4: Number of noise parameters\nzeromedian::Bool = false: Subtract median from traces","category":"page"},{"location":"api/fit.html#Output-Parameters","page":"fit Function","title":"Output Parameters","text":"","category":"section"},{"location":"api/fit.html","page":"fit Function","title":"fit Function","text":"resultfolder::String = \"test\": Results output folder\nlabel::String = \"\": Output file label\ninfolder::String = \"\": Folder for initial parameters\ninlabel::String = \"\": Label of initial parameter files\nwritesamples::Bool = false: Write MCMC samples","category":"page"},{"location":"api/fit.html#Returns","page":"fit Function","title":"Returns","text":"","category":"section"},{"location":"api/fit.html","page":"fit Function","title":"fit Function","text":"fits: MCMC fit results containing:\nPosterior samples\nLog-likelihoods\nAcceptance rates","category":"page"},{"location":"api/fit.html#Examples","page":"fit Function","title":"Examples","text":"","category":"section"},{"location":"api/fit.html#Basic-RNA-Histogram-Fit","page":"fit Function","title":"Basic RNA Histogram Fit","text":"","category":"section"},{"location":"api/fit.html","page":"fit Function","title":"fit Function","text":"fits = fit(\n    G = 2,\n    R = 0,\n    transitions = ([1,2], [2,1]),\n    datatype = \"rna\",\n    datapath = \"data/HCT116_testdata/\",\n    gene = \"MYC\",\n    datacond = \"MOCK\"\n)","category":"page"},{"location":"api/fit.html#Trace-Data-Fit","page":"fit Function","title":"Trace Data Fit","text":"","category":"section"},{"location":"api/fit.html","page":"fit Function","title":"fit Function","text":"fits = fit(\n    G = 3,\n    R = 2,\n    S = 2,\n    insertstep = 1,\n    transitions = ([1,2], [2,1], [2,3], [3,1]),\n    datatype = \"trace\",\n    datapath = \"data/testtraces\",\n    cell = \"TEST\",\n    gene = \"test\",\n    datacond = \"testtrace\",\n    traceinfo = (1.0, 1., -1, 1.),\n    noisepriors = [40., 20., 200., 10.],\n    nchains = 4\n)","category":"page"},{"location":"api/fit.html#Notes","page":"fit Function","title":"Notes","text":"","category":"section"},{"location":"api/fit.html","page":"fit Function","title":"fit Function","text":"Rate Order\nG transitions\nR transitions\nS transitions\nDecay\nNoise parameters\nMCMC Convergence\nR-hat should be close to 1 (ideally < 1.05)\nIncrease maxtime or samplesteps if R-hat is high\nUse warmupsteps to improve proposal distribution","category":"page"}]
}
