var documenterSearchIndex = {"docs":
[{"location":"examples/trace_analysis/#Trace-Analysis","page":"Trace Analysis","title":"Trace Analysis","text":"","category":"section"},{"location":"examples/trace_analysis/","page":"Trace Analysis","title":"Trace Analysis","text":"This example demonstrates how to analyze trace data from live cell imaging experiments.","category":"page"},{"location":"examples/trace_analysis/#Setup","page":"Trace Analysis","title":"Setup","text":"","category":"section"},{"location":"examples/trace_analysis/","page":"Trace Analysis","title":"Trace Analysis","text":"First, let's set up our project directory and load the package:","category":"page"},{"location":"examples/trace_analysis/","page":"Trace Analysis","title":"Trace Analysis","text":"using StochasticGene\n\n# Create project directory\nmkdir(\"trace_example\")\ncd(\"trace_example\")\n\n# Generate example data using test_fit_trace\nfitted_rates, target_rates = test_fit_trace(\n    traceinfo=Dict(\"cell\" => \"example\", \"gene\" => \"test\"),  # Trace metadata\n    G=2,                             # 2 gene states\n    R=2,                             # 2 RNA states\n    S=2,                             # 2 splicing states\n    transitions=([1, 2], [2, 1]),    # Simple two-state model\n    rtarget=[0.33, 0.19, 2.5, 1.0],  # Target rates for simulation\n    totaltime=1000,                  # Total simulation time\n    ntrials=10,                      # Number of simulation trials\n    fittedparam=[1, 2, 3],          # Parameters to fit\n    nchains=1                        # Single MCMC chain for example\n)\n\n# Print results\nprintln(\"Fitted rates: \", fitted_rates)\nprintln(\"Target rates: \", target_rates)","category":"page"},{"location":"examples/trace_analysis/#Data-Preparation","page":"Trace Analysis","title":"Data Preparation","text":"","category":"section"},{"location":"examples/trace_analysis/","page":"Trace Analysis","title":"Trace Analysis","text":"Place your trace data in the data/ directory. The data should be organized as follows:","category":"page"},{"location":"examples/trace_analysis/","page":"Trace Analysis","title":"Trace Analysis","text":"data/\n├── gene_name/\n│   ├── condition1/\n│   │   ├── traces.csv\n│   │   └── metadata.csv\n│   └── condition2/\n│       ├── traces.csv\n│       └── metadata.csv","category":"page"},{"location":"examples/trace_analysis/","page":"Trace Analysis","title":"Trace Analysis","text":"Each trace CSV file should contain:","category":"page"},{"location":"examples/trace_analysis/","page":"Trace Analysis","title":"Trace Analysis","text":"Time points\nFluorescence intensity values\nOptional background values","category":"page"},{"location":"examples/trace_analysis/#Model-Definition","page":"Trace Analysis","title":"Model Definition","text":"","category":"section"},{"location":"examples/trace_analysis/","page":"Trace Analysis","title":"Trace Analysis","text":"We'll fit a model with:","category":"page"},{"location":"examples/trace_analysis/","page":"Trace Analysis","title":"Trace Analysis","text":"2 gene states (G=2) - ON and OFF\n1 pre-RNA step (R=1)\nSimple transitions between states","category":"page"},{"location":"examples/trace_analysis/","page":"Trace Analysis","title":"Trace Analysis","text":"# Define model parameters\nG = 2  # Number of gene states (ON and OFF)\nR = 1  # Number of pre-RNA steps\n\n# Define state transitions\n# Format: (from_states, to_states)\ntransitions = (\n    [1, 2],  # From states\n    [2, 1]   # To states\n)\n\n# Define transcription rates for each state\ntranscription_rates = [0.0, 1.0]  # No transcription in OFF state","category":"page"},{"location":"examples/trace_analysis/#Fitting-the-Model","page":"Trace Analysis","title":"Fitting the Model","text":"","category":"section"},{"location":"examples/trace_analysis/","page":"Trace Analysis","title":"Trace Analysis","text":"Now we can fit the model to our trace data:","category":"page"},{"location":"examples/trace_analysis/","page":"Trace Analysis","title":"Trace Analysis","text":"# Fit the model\nfits, stats, measures, data, model, options = fit(\n    G = G,\n    R = R,\n    transitions = transitions,\n    transcription_rates = transcription_rates,\n    datatype = \"trace\",\n    datapath = \"data/\",\n    gene = \"MYC\",\n    datacond = \"CONTROL\"\n)","category":"page"},{"location":"examples/trace_analysis/#Analyzing-Results","page":"Trace Analysis","title":"Analyzing Results","text":"","category":"section"},{"location":"examples/trace_analysis/#Basic-Analysis","page":"Trace Analysis","title":"Basic Analysis","text":"","category":"section"},{"location":"examples/trace_analysis/","page":"Trace Analysis","title":"Trace Analysis","text":"# Print basic statistics\nprintln(stats)\n\n# Plot the results\nusing Plots\nplot(fits)\n\n# Save results\nsave_results(fits, \"results/\")","category":"page"},{"location":"examples/trace_analysis/#Trace-Visualization","page":"Trace Analysis","title":"Trace Visualization","text":"","category":"section"},{"location":"examples/trace_analysis/","page":"Trace Analysis","title":"Trace Analysis","text":"# Plot individual traces\nplot_traces(fits, \"results/traces/\")\n\n# Plot average trace\nplot_average_trace(fits, \"results/average_trace/\")","category":"page"},{"location":"examples/trace_analysis/#Burst-Analysis","page":"Trace Analysis","title":"Burst Analysis","text":"","category":"section"},{"location":"examples/trace_analysis/","page":"Trace Analysis","title":"Trace Analysis","text":"# Analyze transcriptional bursts\nburst_stats = analyze_bursts(fits)\nprintln(burst_stats)\n\n# Plot burst statistics\nplot_bursts(fits, \"results/bursts/\")","category":"page"},{"location":"examples/trace_analysis/#Advanced-Analysis","page":"Trace Analysis","title":"Advanced Analysis","text":"","category":"section"},{"location":"examples/trace_analysis/#Time-Series-Analysis","page":"Trace Analysis","title":"Time Series Analysis","text":"","category":"section"},{"location":"examples/trace_analysis/","page":"Trace Analysis","title":"Trace Analysis","text":"# Analyze time series\ntime_series = analyze_time_series(fits)\n\n# Plot time series\nplot_time_series(time_series, \"results/time_series/\")\n\n# Calculate autocorrelation\nautocorr = calculate_autocorrelation(fits)\nplot_autocorrelation(autocorr, \"results/autocorrelation/\")","category":"page"},{"location":"examples/trace_analysis/#State-Transitions","page":"Trace Analysis","title":"State Transitions","text":"","category":"section"},{"location":"examples/trace_analysis/","page":"Trace Analysis","title":"Trace Analysis","text":"# Analyze state transitions\ntransitions = analyze_transitions(fits)\n\n# Plot transition probabilities\nplot_transitions(transitions, \"results/transitions/\")\n\n# Calculate transition rates\nrates = calculate_transition_rates(fits)\nprintln(rates)","category":"page"},{"location":"examples/trace_analysis/#Multiple-Conditions","page":"Trace Analysis","title":"Multiple Conditions","text":"","category":"section"},{"location":"examples/trace_analysis/","page":"Trace Analysis","title":"Trace Analysis","text":"# Compare different conditions\nconditions = [\"CONTROL\", \"TREATMENT\"]\ncondition_fits = []\n\nfor cond in conditions\n    fits, stats, measures, data, model, options = fit(\n        G = G,\n        R = R,\n        transitions = transitions,\n        transcription_rates = transcription_rates,\n        datatype = \"trace\",\n        datapath = \"data/\",\n        gene = \"MYC\",\n        datacond = cond\n    )\n    push!(condition_fits, (fits, stats))\nend\n\n# Compare conditions\ncompare_conditions(condition_fits, conditions, \"results/condition_comparison/\")","category":"page"},{"location":"examples/trace_analysis/#Best-Practices","page":"Trace Analysis","title":"Best Practices","text":"","category":"section"},{"location":"examples/trace_analysis/","page":"Trace Analysis","title":"Trace Analysis","text":"Data Quality\nCheck for photobleaching\nVerify signal-to-noise ratio\nConsider background correction\nModel Selection\nStart with simple models\nUse model selection criteria\nValidate assumptions\nAnalysis Pipeline\nDocument preprocessing steps\nSave intermediate results\nVersion control your analysis","category":"page"},{"location":"examples/trace_analysis/#Common-Issues-and-Solutions","page":"Trace Analysis","title":"Common Issues and Solutions","text":"","category":"section"},{"location":"examples/trace_analysis/#Photobleaching","page":"Trace Analysis","title":"Photobleaching","text":"","category":"section"},{"location":"examples/trace_analysis/","page":"Trace Analysis","title":"Trace Analysis","text":"# Check for photobleaching\nbleaching = check_photobleaching(fits)\nplot_photobleaching(bleaching, \"results/photobleaching/\")\n\n# Correct for photobleaching\ncorrected_fits = correct_photobleaching(fits)","category":"page"},{"location":"examples/trace_analysis/#Background-Noise","page":"Trace Analysis","title":"Background Noise","text":"","category":"section"},{"location":"examples/trace_analysis/","page":"Trace Analysis","title":"Trace Analysis","text":"# Analyze background noise\nnoise = analyze_background_noise(fits)\nplot_background_noise(noise, \"results/background_noise/\")\n\n# Apply background correction\ncorrected_fits = correct_background(fits)","category":"page"},{"location":"examples/trace_analysis/#Next-Steps","page":"Trace Analysis","title":"Next Steps","text":"","category":"section"},{"location":"examples/trace_analysis/","page":"Trace Analysis","title":"Trace Analysis","text":"Try different model configurations\nExperiment with preprocessing steps\nCompare results across different genes","category":"page"},{"location":"examples/trace_analysis/","page":"Trace Analysis","title":"Trace Analysis","text":"For more advanced examples, see:","category":"page"},{"location":"examples/trace_analysis/","page":"Trace Analysis","title":"Trace Analysis","text":"Hierarchical Models\nJoint Analysis\nCoupled Models ","category":"page"},{"location":"examples/multi_state_rna/#Multi-State-RNA-Analysis","page":"Multi-State Model","title":"Multi-State RNA Analysis","text":"","category":"section"},{"location":"examples/multi_state_rna/","page":"Multi-State Model","title":"Multi-State Model","text":"This example demonstrates how to analyze RNA count data using models with multiple gene states.","category":"page"},{"location":"examples/multi_state_rna/#Setup","page":"Multi-State Model","title":"Setup","text":"","category":"section"},{"location":"examples/multi_state_rna/","page":"Multi-State Model","title":"Multi-State Model","text":"First, let's set up our project directory and load the package:","category":"page"},{"location":"examples/multi_state_rna/","page":"Multi-State Model","title":"Multi-State Model","text":"using StochasticGene\n\n# Create project directory\nmkdir(\"multi_state_example\")\ncd(\"multi_state_example\")\n\n# Generate example data using test_fit_simrna with a multi-state model\nfitted_rates, target_rates = test_fit_simrna(\n    rtarget=[0.33, 0.19, 0.15, 2.5, 1.0],  # Target rates for simulation\n    transitions=([1, 2], [2, 1], [2, 3], [3, 2]),  # Three-state model\n    G=3,                             # 3 gene states\n    nRNA=100,                        # Number of RNA molecules\n    nalleles=2,                      # Number of alleles\n    fittedparam=[1, 2, 3, 4],       # Parameters to fit\n    nchains=1                        # Single MCMC chain for example\n)\n\n# Print results\nprintln(\"Fitted rates: \", fitted_rates)\nprintln(\"Target rates: \", target_rates)","category":"page"},{"location":"examples/multi_state_rna/#Data-Preparation","page":"Multi-State Model","title":"Data Preparation","text":"","category":"section"},{"location":"examples/multi_state_rna/","page":"Multi-State Model","title":"Multi-State Model","text":"Place your RNA count data in the data/ directory. The data should be organized as follows:","category":"page"},{"location":"examples/multi_state_rna/","page":"Multi-State Model","title":"Multi-State Model","text":"data/\n├── gene_name/\n│   ├── condition1/\n│   │   ├── counts.csv\n│   │   └── metadata.csv\n│   └── condition2/\n│       ├── counts.csv\n│       └── metadata.csv","category":"page"},{"location":"examples/multi_state_rna/#Model-Definition","page":"Multi-State Model","title":"Model Definition","text":"","category":"section"},{"location":"examples/multi_state_rna/","page":"Multi-State Model","title":"Multi-State Model","text":"We'll fit a model with:","category":"page"},{"location":"examples/multi_state_rna/","page":"Multi-State Model","title":"Multi-State Model","text":"3 gene states (G=3)\nNo pre-RNA steps (R=0)\nComplex transitions between states","category":"page"},{"location":"examples/multi_state_rna/","page":"Multi-State Model","title":"Multi-State Model","text":"# Define model parameters\nG = 3  # Number of gene states\nR = 0  # Number of pre-RNA steps\n\n# Define state transitions\n# Format: (from_states, to_states)\ntransitions = (\n    [1, 2, 3],  # From states\n    [2, 3, 1]   # To states\n)\n\n# Define transcription rates for each state\ntranscription_rates = [0.0, 1.0, 2.0]  # No transcription in state 1","category":"page"},{"location":"examples/multi_state_rna/#Fitting-the-Model","page":"Multi-State Model","title":"Fitting the Model","text":"","category":"section"},{"location":"examples/multi_state_rna/","page":"Multi-State Model","title":"Multi-State Model","text":"Now we can fit the model to our RNA count data:","category":"page"},{"location":"examples/multi_state_rna/","page":"Multi-State Model","title":"Multi-State Model","text":"# Fit the model\nfits, stats, measures, data, model, options = fit(\n    G = G,\n    R = R,\n    transitions = transitions,\n    transcription_rates = transcription_rates,\n    datatype = \"rna\",\n    datapath = \"data/\",\n    gene = \"MYC\",\n    datacond = \"CONTROL\"\n)","category":"page"},{"location":"examples/multi_state_rna/#Analyzing-Results","page":"Multi-State Model","title":"Analyzing Results","text":"","category":"section"},{"location":"examples/multi_state_rna/#Basic-Analysis","page":"Multi-State Model","title":"Basic Analysis","text":"","category":"section"},{"location":"examples/multi_state_rna/","page":"Multi-State Model","title":"Multi-State Model","text":"# Print basic statistics\nprintln(stats)\n\n# Plot the results\nusing Plots\nplot(fits)\n\n# Save results\nsave_results(fits, \"results/\")","category":"page"},{"location":"examples/multi_state_rna/#State-Analysis","page":"Multi-State Model","title":"State Analysis","text":"","category":"section"},{"location":"examples/multi_state_rna/","page":"Multi-State Model","title":"Multi-State Model","text":"# Analyze state probabilities\nstate_probs = analyze_states(fits)\nplot_states(state_probs, \"results/states/\")\n\n# Calculate state residence times\nresidence_times = analyze_residence_times(fits)\nplot_residence_times(residence_times, \"results/residence_times/\")","category":"page"},{"location":"examples/multi_state_rna/#Burst-Analysis","page":"Multi-State Model","title":"Burst Analysis","text":"","category":"section"},{"location":"examples/multi_state_rna/","page":"Multi-State Model","title":"Multi-State Model","text":"# Analyze transcriptional bursts\nburst_stats = analyze_bursts(fits)\nprintln(burst_stats)\n\n# Plot burst statistics\nplot_bursts(fits, \"results/bursts/\")","category":"page"},{"location":"examples/multi_state_rna/#Advanced-Analysis","page":"Multi-State Model","title":"Advanced Analysis","text":"","category":"section"},{"location":"examples/multi_state_rna/#State-Transition-Analysis","page":"Multi-State Model","title":"State Transition Analysis","text":"","category":"section"},{"location":"examples/multi_state_rna/","page":"Multi-State Model","title":"Multi-State Model","text":"# Analyze state transitions\ntransitions = analyze_transitions(fits)\n\n# Plot transition probabilities\nplot_transitions(transitions, \"results/transitions/\")\n\n# Calculate transition rates\nrates = calculate_transition_rates(fits)\nprintln(rates)","category":"page"},{"location":"examples/multi_state_rna/#Model-Comparison","page":"Multi-State Model","title":"Model Comparison","text":"","category":"section"},{"location":"examples/multi_state_rna/","page":"Multi-State Model","title":"Multi-State Model","text":"# Compare different state configurations\nconfigurations = [\n    (G=2, rates=[0.0, 1.0]),           # Two-state\n    (G=3, rates=[0.0, 1.0, 2.0]),      # Three-state\n    (G=4, rates=[0.0, 1.0, 2.0, 3.0])  # Four-state\n]\n\nconfig_fits = []\nfor (G, rates) in configurations\n    fits, stats, measures, data, model, options = fit(\n        G = G,\n        R = R,\n        transitions = ([1:G...], [2:G..., 1]),\n        transcription_rates = rates,\n        datatype = \"rna\",\n        datapath = \"data/\",\n        gene = \"MYC\",\n        datacond = \"CONTROL\"\n    )\n    push!(config_fits, (fits, stats))\nend\n\n# Compare configurations\ncompare_configurations(config_fits, configurations, \"results/config_comparison/\")","category":"page"},{"location":"examples/multi_state_rna/#Best-Practices","page":"Multi-State Model","title":"Best Practices","text":"","category":"section"},{"location":"examples/multi_state_rna/","page":"Multi-State Model","title":"Multi-State Model","text":"Model Selection\nStart with simpler models\nUse model selection criteria\nValidate state assumptions\nParameter Estimation\nCheck parameter identifiability\nVerify convergence\nConsider parameter correlations\nInterpretation\nRelate states to biological mechanisms\nConsider experimental validation\nDocument assumptions","category":"page"},{"location":"examples/multi_state_rna/#Common-Issues-and-Solutions","page":"Multi-State Model","title":"Common Issues and Solutions","text":"","category":"section"},{"location":"examples/multi_state_rna/#Parameter-Identifiability","page":"Multi-State Model","title":"Parameter Identifiability","text":"","category":"section"},{"location":"examples/multi_state_rna/","page":"Multi-State Model","title":"Multi-State Model","text":"# Check parameter identifiability\nidentifiability = check_identifiability(fits)\nplot_identifiability(identifiability, \"results/identifiability/\")","category":"page"},{"location":"examples/multi_state_rna/#State-Validation","page":"Multi-State Model","title":"State Validation","text":"","category":"section"},{"location":"examples/multi_state_rna/","page":"Multi-State Model","title":"Multi-State Model","text":"# Validate state assignments\nvalidation = validate_states(fits)\nplot_validation(validation, \"results/validation/\")","category":"page"},{"location":"examples/multi_state_rna/#Next-Steps","page":"Multi-State Model","title":"Next Steps","text":"","category":"section"},{"location":"examples/multi_state_rna/","page":"Multi-State Model","title":"Multi-State Model","text":"Try different state configurations\nExperiment with transition patterns\nCompare results across different genes","category":"page"},{"location":"examples/multi_state_rna/","page":"Multi-State Model","title":"Multi-State Model","text":"For more advanced examples, see:","category":"page"},{"location":"examples/multi_state_rna/","page":"Multi-State Model","title":"Multi-State Model","text":"Pre-RNA Steps\nCoupled Models\nHierarchical Models ","category":"page"},{"location":"examples/rna_histogram/#RNA-Histogram-Analysis","page":"RNA Histogram Analysis","title":"RNA Histogram Analysis","text":"","category":"section"},{"location":"examples/rna_histogram/","page":"RNA Histogram Analysis","title":"RNA Histogram Analysis","text":"This example demonstrates how to analyze RNA count distributions (histograms) from single-molecule FISH (smFISH) or single-cell RNA sequencing (scRNA-seq) data.","category":"page"},{"location":"examples/rna_histogram/#Setup","page":"RNA Histogram Analysis","title":"Setup","text":"","category":"section"},{"location":"examples/rna_histogram/","page":"RNA Histogram Analysis","title":"RNA Histogram Analysis","text":"First, let's set up our project directory and load the package:","category":"page"},{"location":"examples/rna_histogram/","page":"RNA Histogram Analysis","title":"RNA Histogram Analysis","text":"using StochasticGene\n\n# Create project directory\nmkdir(\"histogram_example\")\ncd(\"histogram_example\")\n\n# Generate example data using test_fit_simrna\nfitted_rates, target_rates = test_fit_simrna(\n    rtarget=[0.33, 0.19, 2.5, 1.0],  # Target rates for simulation\n    transitions=([1, 2], [2, 1]),    # Simple two-state model\n    G=2,                             # 2 gene states\n    nRNA=100,                        # Number of RNA molecules\n    nalleles=2,                      # Number of alleles\n    fittedparam=[1, 2, 3],          # Parameters to fit\n    nchains=1                        # Single MCMC chain for example\n)\n\n# Print results\nprintln(\"Fitted rates: \", fitted_rates)\nprintln(\"Target rates: \", target_rates)","category":"page"},{"location":"examples/rna_histogram/#Data-Preparation","page":"RNA Histogram Analysis","title":"Data Preparation","text":"","category":"section"},{"location":"examples/rna_histogram/","page":"RNA Histogram Analysis","title":"RNA Histogram Analysis","text":"Place your RNA count data in the data/ directory. The data should be organized as follows:","category":"page"},{"location":"examples/rna_histogram/","page":"RNA Histogram Analysis","title":"RNA Histogram Analysis","text":"data/\n├── gene_name/\n│   ├── condition1/\n│   │   ├── counts.csv\n│   │   └── metadata.csv\n│   └── condition2/\n│       ├── counts.csv\n│       └── metadata.csv","category":"page"},{"location":"examples/rna_histogram/","page":"RNA Histogram Analysis","title":"RNA Histogram Analysis","text":"The counts.csv file should contain:","category":"page"},{"location":"examples/rna_histogram/","page":"RNA Histogram Analysis","title":"RNA Histogram Analysis","text":"Cell IDs\nRNA counts per cell\nOptional: Additional cell metadata","category":"page"},{"location":"examples/rna_histogram/#Model-Definition","page":"RNA Histogram Analysis","title":"Model Definition","text":"","category":"section"},{"location":"examples/rna_histogram/","page":"RNA Histogram Analysis","title":"RNA Histogram Analysis","text":"We'll fit a model with:","category":"page"},{"location":"examples/rna_histogram/","page":"RNA Histogram Analysis","title":"RNA Histogram Analysis","text":"2 gene states (G=2)\nNo pre-RNA steps (R=0)\nSimple transitions between states","category":"page"},{"location":"examples/rna_histogram/","page":"RNA Histogram Analysis","title":"RNA Histogram Analysis","text":"# Define model parameters\nG = 2  # Number of gene states\nR = 0  # Number of pre-RNA steps\ntransitions = ([1,2], [2,1])  # Gene state transitions","category":"page"},{"location":"examples/rna_histogram/#Fitting-the-Model","page":"RNA Histogram Analysis","title":"Fitting the Model","text":"","category":"section"},{"location":"examples/rna_histogram/","page":"RNA Histogram Analysis","title":"RNA Histogram Analysis","text":"Now we can fit the model to our RNA count data:","category":"page"},{"location":"examples/rna_histogram/","page":"RNA Histogram Analysis","title":"RNA Histogram Analysis","text":"# Fit the model\nfits, stats, measures, data, model, options = fit(\n    G = G,\n    R = R,\n    transitions = transitions,\n    datatype = \"rna\",\n    datapath = \"data/\",\n    gene = \"MYC\",\n    datacond = \"CONTROL\"\n)","category":"page"},{"location":"examples/rna_histogram/#Analyzing-Results","page":"RNA Histogram Analysis","title":"Analyzing Results","text":"","category":"section"},{"location":"examples/rna_histogram/#Basic-Analysis","page":"RNA Histogram Analysis","title":"Basic Analysis","text":"","category":"section"},{"location":"examples/rna_histogram/","page":"RNA Histogram Analysis","title":"RNA Histogram Analysis","text":"# Print basic statistics\nprintln(stats)\n\n# Plot the results\nusing Plots\nplot(fits)\n\n# Save results\nsave_results(fits, \"results/\")","category":"page"},{"location":"examples/rna_histogram/#Histogram-Analysis","page":"RNA Histogram Analysis","title":"Histogram Analysis","text":"","category":"section"},{"location":"examples/rna_histogram/","page":"RNA Histogram Analysis","title":"RNA Histogram Analysis","text":"# Generate and plot histograms\nplot_histograms(fits, \"results/histograms/\")\n\n# Calculate histogram statistics\nhist_stats = analyze_histograms(fits)\nprintln(hist_stats)","category":"page"},{"location":"examples/rna_histogram/#Burst-Analysis","page":"RNA Histogram Analysis","title":"Burst Analysis","text":"","category":"section"},{"location":"examples/rna_histogram/","page":"RNA Histogram Analysis","title":"RNA Histogram Analysis","text":"# Analyze transcriptional bursts\nburst_stats = analyze_bursts(fits)\nprintln(burst_stats)\n\n# Plot burst statistics\nplot_bursts(fits, \"results/bursts/\")","category":"page"},{"location":"examples/rna_histogram/#Advanced-Analysis","page":"RNA Histogram Analysis","title":"Advanced Analysis","text":"","category":"section"},{"location":"examples/rna_histogram/#Multiple-Conditions","page":"RNA Histogram Analysis","title":"Multiple Conditions","text":"","category":"section"},{"location":"examples/rna_histogram/","page":"RNA Histogram Analysis","title":"RNA Histogram Analysis","text":"# Compare different conditions\nconditions = [\"CONTROL\", \"TREATMENT\"]\nfits_list = []\n\nfor cond in conditions\n    fits, stats, measures, data, model, options = fit(\n        G = G,\n        R = R,\n        transitions = transitions,\n        datatype = \"rna\",\n        datapath = \"data/\",\n        gene = \"MYC\",\n        datacond = cond\n    )\n    push!(fits_list, fits)\nend\n\n# Compare conditions\ncompare_conditions(fits_list, conditions, \"results/comparison/\")","category":"page"},{"location":"examples/rna_histogram/#Model-Comparison","page":"RNA Histogram Analysis","title":"Model Comparison","text":"","category":"section"},{"location":"examples/rna_histogram/","page":"RNA Histogram Analysis","title":"RNA Histogram Analysis","text":"# Fit different models\nmodels = [\n    (G=2, R=0),  # Basic telegraph\n    (G=3, R=0),  # Three-state\n    (G=2, R=1)   # With pre-RNA\n]\n\nmodel_fits = []\nfor (G, R) in models\n    fits, stats, measures, data, model, options = fit(\n        G = G,\n        R = R,\n        transitions = ([1,2], [2,1]),\n        datatype = \"rna\",\n        datapath = \"data/\",\n        gene = \"MYC\",\n        datacond = \"CONTROL\"\n    )\n    push!(model_fits, (fits, stats))\nend\n\n# Compare models\ncompare_models(model_fits, models, \"results/model_comparison/\")","category":"page"},{"location":"examples/rna_histogram/#Best-Practices","page":"RNA Histogram Analysis","title":"Best Practices","text":"","category":"section"},{"location":"examples/rna_histogram/","page":"RNA Histogram Analysis","title":"RNA Histogram Analysis","text":"Data Quality\nCheck for outliers\nVerify count normalization\nConsider batch effects\nModel Selection\nStart with simple models\nUse model selection criteria\nValidate assumptions\nAnalysis Pipeline\nDocument analysis steps\nSave intermediate results\nUse consistent naming conventions","category":"page"},{"location":"examples/rna_histogram/#Common-Issues-and-Solutions","page":"RNA Histogram Analysis","title":"Common Issues and Solutions","text":"","category":"section"},{"location":"examples/rna_histogram/#Zero-Inflation","page":"RNA Histogram Analysis","title":"Zero-Inflation","text":"","category":"section"},{"location":"examples/rna_histogram/","page":"RNA Histogram Analysis","title":"RNA Histogram Analysis","text":"# Handle zero-inflation\nfits = fit(\n    G = G,\n    R = R,\n    transitions = transitions,\n    datatype = \"rna\",\n    datapath = \"data/\",\n    gene = \"MYC\",\n    datacond = \"CONTROL\",\n    zero_inflation = true\n)","category":"page"},{"location":"examples/rna_histogram/#Batch-Effects","page":"RNA Histogram Analysis","title":"Batch Effects","text":"","category":"section"},{"location":"examples/rna_histogram/","page":"RNA Histogram Analysis","title":"RNA Histogram Analysis","text":"# Account for batch effects\nfits = fit(\n    G = G,\n    R = R,\n    transitions = transitions,\n    datatype = \"rna\",\n    datapath = \"data/\",\n    gene = \"MYC\",\n    datacond = \"CONTROL\",\n    batch_correction = true\n)","category":"page"},{"location":"examples/rna_histogram/#Next-Steps","page":"RNA Histogram Analysis","title":"Next Steps","text":"","category":"section"},{"location":"examples/rna_histogram/","page":"RNA Histogram Analysis","title":"RNA Histogram Analysis","text":"Try different model configurations\nExperiment with more complex models\nCompare results across different genes","category":"page"},{"location":"examples/rna_histogram/","page":"RNA Histogram Analysis","title":"RNA Histogram Analysis","text":"For more advanced examples, see:","category":"page"},{"location":"examples/rna_histogram/","page":"RNA Histogram Analysis","title":"RNA Histogram Analysis","text":"Multi-State Models\nPre-RNA Steps\nCoupled Models ","category":"page"},{"location":"api/analysis/#Analysis-Functions","page":"Analysis Functions","title":"Analysis Functions","text":"","category":"section"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Functions for post-fitting analysis, model comparison, and result visualization.","category":"page"},{"location":"api/analysis/#Model-Prediction-Functions","page":"Analysis Functions","title":"Model Prediction Functions","text":"","category":"section"},{"location":"api/analysis/#predictedarray","page":"Analysis Functions","title":"predictedarray","text":"","category":"section"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"predictedarray(parameters::Vector{Float64}, model::AbstractModel, data::AbstractExperimentalData) -> Vector{Float64}","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Generate model predictions for given parameters.","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Arguments:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"parameters: Model parameters\nmodel: Model structure\ndata: Experimental data","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Returns:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Vector of predicted values","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Example:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"# Generate predictions\nfitted_params = [0.1, 0.2, 0.3]\npredictions = predictedarray(fitted_params, model, data)","category":"page"},{"location":"api/analysis/#predictedfn","page":"Analysis Functions","title":"predictedfn","text":"","category":"section"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"predictedfn(model::AbstractModel, data::AbstractExperimentalData) -> Function","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Create a function that generates predictions for given parameters.","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Arguments:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"model: Model structure\ndata: Experimental data","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Returns:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Function that takes parameters and returns predictions","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Example:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"# Create prediction function\npred_fn = predictedfn(model, data)\npredictions = pred_fn(fitted_params)","category":"page"},{"location":"api/analysis/#make_traces","page":"Analysis Functions","title":"make_traces","text":"","category":"section"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"make_traces(parameters::Vector{Float64}, model::AbstractModel, data::AbstractTraceData) -> Vector{Vector{Float64}}","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Generate model-predicted intensity traces.","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Arguments:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"parameters: Model parameters\nmodel: Model structure\ndata: Trace data","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Returns:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Vector of predicted traces","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Example:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"# Generate predicted traces\npred_traces = make_traces(fitted_params, model, trace_data)","category":"page"},{"location":"api/analysis/#make*traces*dataframe","page":"Analysis Functions","title":"maketracesdataframe","text":"","category":"section"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"make_traces_dataframe(traces::Vector{Vector{Float64}}, interval::Float64) -> DataFrame","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Convert traces to DataFrame format for analysis.","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Arguments:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"traces: Vector of trace vectors\ninterval: Time interval between points","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Returns:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"DataFrame with time and intensity columns","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Example:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"# Convert traces to DataFrame\ndf = make_traces_dataframe(traces, 1.0)","category":"page"},{"location":"api/analysis/#Model-Comparison-Functions","page":"Analysis Functions","title":"Model Comparison Functions","text":"","category":"section"},{"location":"api/analysis/#loglikelihood","page":"Analysis Functions","title":"loglikelihood","text":"","category":"section"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"loglikelihood(parameters::Vector{Float64}, data::AbstractExperimentalData, model::AbstractModel) -> Float64","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Calculate log-likelihood for given parameters.","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Arguments:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"parameters: Model parameters\ndata: Experimental data\nmodel: Model structure","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Returns:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Log-likelihood value","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Example:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"# Calculate log-likelihood\nll = loglikelihood(fitted_params, data, model)","category":"page"},{"location":"api/analysis/#deviance","page":"Analysis Functions","title":"deviance","text":"","category":"section"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"deviance(parameters::Vector{Float64}, data::AbstractExperimentalData, model::AbstractModel) -> Float64","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Calculate deviance (-2 * log-likelihood).","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Arguments:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"parameters: Model parameters\ndata: Experimental data\nmodel: Model structure","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Returns:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Deviance value","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Example:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"# Calculate deviance\ndev = deviance(fitted_params, data, model)","category":"page"},{"location":"api/analysis/#aic","page":"Analysis Functions","title":"aic","text":"","category":"section"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"aic(loglik::Float64, k::Int) -> Float64","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Calculate Akaike Information Criterion.","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Arguments:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"loglik: Log-likelihood value\nk: Number of parameters","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Returns:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"AIC value","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Example:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"# Calculate AIC\naic_value = aic(log_likelihood, num_params)","category":"page"},{"location":"api/analysis/#bic","page":"Analysis Functions","title":"bic","text":"","category":"section"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"bic(loglik::Float64, k::Int, n::Int) -> Float64","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Calculate Bayesian Information Criterion.","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Arguments:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"loglik: Log-likelihood value\nk: Number of parameters\nn: Number of observations","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Returns:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"BIC value","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Example:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"# Calculate BIC\nbic_value = bic(log_likelihood, num_params, num_obs)","category":"page"},{"location":"api/analysis/#Burst-Analysis-Functions","page":"Analysis Functions","title":"Burst Analysis Functions","text":"","category":"section"},{"location":"api/analysis/#burstsize","page":"Analysis Functions","title":"burstsize","text":"","category":"section"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"burstsize(fits::Results, model::AbstractModel) -> Vector{Float64}","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Calculate burst sizes from fitted parameters.","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Arguments:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"fits: Fit results\nmodel: Model structure","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Returns:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Vector of burst sizes","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Example:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"# Calculate burst sizes\nbs = burstsize(fit_results, model)","category":"page"},{"location":"api/analysis/#burstfrequency","page":"Analysis Functions","title":"burstfrequency","text":"","category":"section"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"burstfrequency(fits::Results, model::AbstractModel) -> Vector{Float64}","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Calculate burst frequencies from fitted parameters.","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Arguments:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"fits: Fit results\nmodel: Model structure","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Returns:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Vector of burst frequencies","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Example:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"# Calculate burst frequencies\nbf = burstfrequency(fit_results, model)","category":"page"},{"location":"api/analysis/#burst_duration","page":"Analysis Functions","title":"burst_duration","text":"","category":"section"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"burst_duration(fits::Results, model::AbstractModel) -> Vector{Float64}","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Calculate burst durations from fitted parameters.","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Arguments:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"fits: Fit results\nmodel: Model structure","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Returns:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Vector of burst durations","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Example:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"# Calculate burst durations\nbd = burst_duration(fit_results, model)","category":"page"},{"location":"api/analysis/#Statistical-Analysis-Functions","page":"Analysis Functions","title":"Statistical Analysis Functions","text":"","category":"section"},{"location":"api/analysis/#posterior_mean","page":"Analysis Functions","title":"posterior_mean","text":"","category":"section"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"posterior_mean(samples::Matrix{Float64}) -> Vector{Float64}","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Calculate posterior means from MCMC samples.","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Arguments:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"samples: MCMC samples matrix","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Returns:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Vector of posterior means","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Example:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"# Calculate posterior means\nmeans = posterior_mean(mcmc_samples)","category":"page"},{"location":"api/analysis/#posterior_std","page":"Analysis Functions","title":"posterior_std","text":"","category":"section"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"posterior_std(samples::Matrix{Float64}) -> Vector{Float64}","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Calculate posterior standard deviations from MCMC samples.","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Arguments:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"samples: MCMC samples matrix","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Returns:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Vector of posterior standard deviations","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Example:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"# Calculate posterior standard deviations\nstds = posterior_std(mcmc_samples)","category":"page"},{"location":"api/analysis/#posterior_quantiles","page":"Analysis Functions","title":"posterior_quantiles","text":"","category":"section"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"posterior_quantiles(samples::Matrix{Float64}, quantiles::Vector{Float64}) -> Matrix{Float64}","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Calculate posterior quantiles from MCMC samples.","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Arguments:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"samples: MCMC samples matrix\nquantiles: Vector of quantile values (0-1)","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Returns:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Matrix of quantiles","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Example:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"# Calculate credible intervals\nquantiles = posterior_quantiles(mcmc_samples, [0.025, 0.975])","category":"page"},{"location":"api/analysis/#effective*sample*size","page":"Analysis Functions","title":"effectivesamplesize","text":"","category":"section"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"effective_sample_size(samples::Vector{Float64}) -> Float64","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Calculate effective sample size for MCMC chain.","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Arguments:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"samples: MCMC samples for single parameter","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Returns:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Effective sample size","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Example:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"# Calculate effective sample size\ness = effective_sample_size(mcmc_samples[:, 1])","category":"page"},{"location":"api/analysis/#rhat","page":"Analysis Functions","title":"rhat","text":"","category":"section"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"rhat(chains::Vector{Vector{Float64}}) -> Float64","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Calculate R-hat convergence diagnostic.","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Arguments:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"chains: Vector of MCMC chains","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Returns:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"R-hat value","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Example:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"# Calculate R-hat\nrhat_value = rhat([chain1, chain2, chain3])","category":"page"},{"location":"api/analysis/#Residual-Analysis-Functions","page":"Analysis Functions","title":"Residual Analysis Functions","text":"","category":"section"},{"location":"api/analysis/#residuals","page":"Analysis Functions","title":"residuals","text":"","category":"section"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"residuals(data::AbstractExperimentalData, predictions::Vector{Float64}) -> Vector{Float64}","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Calculate residuals between data and predictions.","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Arguments:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"data: Experimental data\npredictions: Model predictions","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Returns:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Vector of residuals","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Example:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"# Calculate residuals\nresids = residuals(data, predictions)","category":"page"},{"location":"api/analysis/#standardized_residuals","page":"Analysis Functions","title":"standardized_residuals","text":"","category":"section"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"standardized_residuals(residuals::Vector{Float64}) -> Vector{Float64}","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Calculate standardized residuals.","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Arguments:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"residuals: Raw residuals","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Returns:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Standardized residuals","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Example:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"# Calculate standardized residuals\nstd_resids = standardized_residuals(resids)","category":"page"},{"location":"api/analysis/#qq*plot*data","page":"Analysis Functions","title":"qqplotdata","text":"","category":"section"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"qq_plot_data(residuals::Vector{Float64}) -> Tuple{Vector{Float64}, Vector{Float64}}","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Generate data for Q-Q plots.","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Arguments:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"residuals: Residuals for analysis","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Returns:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Tuple of (theoretical quantiles, sample quantiles)","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Example:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"# Generate Q-Q plot data\ntheoretical, sample = qq_plot_data(residuals)","category":"page"},{"location":"api/analysis/#Model-Diagnostic-Functions","page":"Analysis Functions","title":"Model Diagnostic Functions","text":"","category":"section"},{"location":"api/analysis/#convergence_diagnostics","page":"Analysis Functions","title":"convergence_diagnostics","text":"","category":"section"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"convergence_diagnostics(chains::Vector{Matrix{Float64}}) -> Dict{String, Any}","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Calculate comprehensive convergence diagnostics.","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Arguments:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"chains: Vector of MCMC chains","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Returns:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Dictionary with diagnostic results","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Example:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"# Calculate convergence diagnostics\ndiagnostics = convergence_diagnostics(mcmc_chains)","category":"page"},{"location":"api/analysis/#trace_plots","page":"Analysis Functions","title":"trace_plots","text":"","category":"section"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"trace_plots(chains::Vector{Matrix{Float64}}, parameter_names::Vector{String}) -> Vector{Plot}","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Generate trace plots for MCMC chains.","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Arguments:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"chains: Vector of MCMC chains\nparameter_names: Names of parameters","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Returns:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Vector of trace plots","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Example:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"# Generate trace plots\nplots = trace_plots(mcmc_chains, [\"rate1\", \"rate2\", \"noise\"])","category":"page"},{"location":"api/analysis/#autocorrelation","page":"Analysis Functions","title":"autocorrelation","text":"","category":"section"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"autocorrelation(samples::Vector{Float64}, max_lag::Int=50) -> Vector{Float64}","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Calculate autocorrelation function for MCMC samples.","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Arguments:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"samples: MCMC samples\nmax_lag: Maximum lag for autocorrelation","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Returns:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Vector of autocorrelation values","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Example:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"# Calculate autocorrelation\nacf = autocorrelation(mcmc_samples[:, 1], 100)","category":"page"},{"location":"api/analysis/#Sensitivity-Analysis-Functions","page":"Analysis Functions","title":"Sensitivity Analysis Functions","text":"","category":"section"},{"location":"api/analysis/#parameter_sensitivity","page":"Analysis Functions","title":"parameter_sensitivity","text":"","category":"section"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"parameter_sensitivity(model::AbstractModel, data::AbstractExperimentalData, \n                     parameters::Vector{Float64}, delta::Float64=0.01) -> Vector{Float64}","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Calculate parameter sensitivity.","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Arguments:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"model: Model structure\ndata: Experimental data\nparameters: Parameter values\ndelta: Perturbation size","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Returns:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Vector of sensitivity values","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Example:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"# Calculate parameter sensitivity\nsensitivity = parameter_sensitivity(model, data, fitted_params, 0.05)","category":"page"},{"location":"api/analysis/#local*sensitivity*analysis","page":"Analysis Functions","title":"localsensitivityanalysis","text":"","category":"section"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"local_sensitivity_analysis(model::AbstractModel, data::AbstractExperimentalData,\n                          parameters::Vector{Float64}) -> Matrix{Float64}","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Perform local sensitivity analysis.","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Arguments:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"model: Model structure\ndata: Experimental data\nparameters: Parameter values","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Returns:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Sensitivity matrix","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Example:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"# Perform local sensitivity analysis\nsens_matrix = local_sensitivity_analysis(model, data, fitted_params)","category":"page"},{"location":"api/analysis/#Profile-Likelihood-Functions","page":"Analysis Functions","title":"Profile Likelihood Functions","text":"","category":"section"},{"location":"api/analysis/#profile_likelihood","page":"Analysis Functions","title":"profile_likelihood","text":"","category":"section"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"profile_likelihood(parameter_index::Int, values::Vector{Float64}, \n                  model::AbstractModel, data::AbstractExperimentalData) -> Vector{Float64}","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Calculate profile likelihood for a parameter.","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Arguments:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"parameter_index: Index of parameter to profile\nvalues: Values to evaluate\nmodel: Model structure\ndata: Experimental data","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Returns:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Vector of profile likelihood values","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Example:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"# Calculate profile likelihood\nprofile = profile_likelihood(1, [0.05, 0.1, 0.15, 0.2], model, data)","category":"page"},{"location":"api/analysis/#confidence_intervals","page":"Analysis Functions","title":"confidence_intervals","text":"","category":"section"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"confidence_intervals(profile_ll::Vector{Float64}, values::Vector{Float64}, \n                    confidence_level::Float64=0.95) -> Tuple{Float64, Float64}","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Calculate confidence intervals from profile likelihood.","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Arguments:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"profile_ll: Profile likelihood values\nvalues: Parameter values\nconfidence_level: Confidence level (0-1)","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Returns:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Tuple of (lower bound, upper bound)","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Example:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"# Calculate 95% confidence intervals\nlower, upper = confidence_intervals(profile_ll, param_values, 0.95)","category":"page"},{"location":"api/analysis/#Model-Selection-Functions","page":"Analysis Functions","title":"Model Selection Functions","text":"","category":"section"},{"location":"api/analysis/#model_comparison","page":"Analysis Functions","title":"model_comparison","text":"","category":"section"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"model_comparison(results::Vector{Results}, models::Vector{AbstractModel}) -> DataFrame","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Compare multiple models using information criteria.","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Arguments:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"results: Vector of fit results\nmodels: Vector of models","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Returns:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"DataFrame with comparison results","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Example:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"# Compare models\ncomparison = model_comparison([results1, results2], [model1, model2])","category":"page"},{"location":"api/analysis/#cross_validation","page":"Analysis Functions","title":"cross_validation","text":"","category":"section"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"cross_validation(model::AbstractModel, data::AbstractExperimentalData, \n                k_folds::Int=5) -> Vector{Float64}","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Perform k-fold cross-validation.","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Arguments:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"model: Model structure\ndata: Experimental data\nk_folds: Number of folds","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Returns:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Vector of cross-validation scores","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Example:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"# Perform 5-fold cross-validation\ncv_scores = cross_validation(model, data, 5)","category":"page"},{"location":"api/analysis/#Visualization-Support-Functions","page":"Analysis Functions","title":"Visualization Support Functions","text":"","category":"section"},{"location":"api/analysis/#plot_fits","page":"Analysis Functions","title":"plot_fits","text":"","category":"section"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"plot_fits(data::AbstractExperimentalData, predictions::Vector{Float64}, \n         residuals::Vector{Float64}) -> Plot","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Generate fit quality plots.","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Arguments:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"data: Experimental data\npredictions: Model predictions\nresiduals: Residuals","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Returns:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Plot object","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Example:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"# Generate fit plots\nplot = plot_fits(data, predictions, residuals)","category":"page"},{"location":"api/analysis/#plot_traces","page":"Analysis Functions","title":"plot_traces","text":"","category":"section"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"plot_traces(traces::Vector{Vector{Float64}}, interval::Float64) -> Plot","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Generate trace plots.","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Arguments:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"traces: Vector of traces\ninterval: Time interval","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Returns:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Plot object","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Example:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"# Plot traces\nplot = plot_traces(predicted_traces, 1.0)","category":"page"},{"location":"api/analysis/#plot_distributions","page":"Analysis Functions","title":"plot_distributions","text":"","category":"section"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"plot_distributions(data::AbstractHistogramData, predictions::Vector{Float64}) -> Plot","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Generate distribution comparison plots.","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Arguments:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"data: Histogram data\npredictions: Model predictions","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Returns:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Plot object","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"Example:","category":"page"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"# Plot distributions\nplot = plot_distributions(rna_data, predictions)","category":"page"},{"location":"api/analysis/#Complete-Analysis-Examples","page":"Analysis Functions","title":"Complete Analysis Examples","text":"","category":"section"},{"location":"api/analysis/#RNA-Data-Analysis","page":"Analysis Functions","title":"RNA Data Analysis","text":"","category":"section"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"using StochasticGene\n\n# Load data and fit model\ndata = load_data(\"rna\", String[], \"data/\", \"exp\", \"MYC\", \"ctrl\", (), 1)\nfits, stats, measures, data, model, options = fit(nchains=4)\n\n# Generate predictions\npredictions = predictedarray(stats.medparam, model, data)\n\n# Calculate residuals\nresids = residuals(data, predictions)\n\n# Model diagnostics\nll = loglikelihood(stats.medparam, data, model)\ndev = deviance(stats.medparam, data, model)\naic_val = aic(ll, length(stats.medparam))\n\n# Burst analysis\nbs = burstsize(fits, model)\nbf = burstfrequency(fits, model)\n\n# Convergence diagnostics\ndiagnostics = convergence_diagnostics(fits.chains)","category":"page"},{"location":"api/analysis/#Trace-Data-Analysis","page":"Analysis Functions","title":"Trace Data Analysis","text":"","category":"section"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"# Load trace data\ntrace_data = load_data(\"trace\", String[], \"data/traces/\", \"exp\", \"SOX2\", \"ctrl\", \n                      (1.0, 0.0, 100.0, 0.9), 1)\n\n# Fit model\nfits, stats, measures, data, model, options = fit(\n    datatype=\"trace\", \n    nchains=4,\n    noisepriors=[20.0, 10.0]\n)\n\n# Generate predicted traces\npred_traces = make_traces(stats.medparam, model, trace_data)\n\n# Convert to DataFrame\ntrace_df = make_traces_dataframe(pred_traces, 1.0)\n\n# Sensitivity analysis\nsensitivity = parameter_sensitivity(model, trace_data, stats.medparam)","category":"page"},{"location":"api/analysis/#Hierarchical-Model-Analysis","page":"Analysis Functions","title":"Hierarchical Model Analysis","text":"","category":"section"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"# Fit hierarchical model\nfits, stats, measures, data, model, options = fit(\n    datatype=\"trace\",\n    hierarchical=(2, [1,2]),  # 2 hyperparameter sets, fit rates 1,2\n    nchains=4\n)\n\n# Analyze hierarchical results\nindividual_params = extract_individual_parameters(fits, model)\npopulation_params = extract_population_parameters(fits, model)\n\n# Population-level analysis\npop_means = posterior_mean(population_params)\npop_stds = posterior_std(population_params)","category":"page"},{"location":"api/analysis/#Model-Comparison-Workflow","page":"Analysis Functions","title":"Model Comparison Workflow","text":"","category":"section"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"# Compare different models\nmodels = [\n    (G=2, R=0, S=0),  # Simple telegraph\n    (G=2, R=1, S=0),  # With pre-RNA\n    (G=3, R=0, S=0),  # Three states\n]\n\nresults = []\nfor (G, R, S) in models\n    fits, stats, measures, data, model, options = fit(\n        G=G, R=R, S=S, \n        nchains=4\n    )\n    push!(results, (fits, stats, measures, model))\nend\n\n# Compare using information criteria\ncomparison = model_comparison(\n    [r[2] for r in results],  # stats\n    [r[4] for r in results]   # models\n)","category":"page"},{"location":"api/analysis/#See-Also","page":"Analysis Functions","title":"See Also","text":"","category":"section"},{"location":"api/analysis/","page":"Analysis Functions","title":"Analysis Functions","text":"fit: Main fitting function\nsimulator: Model simulation\nwrite_traces: Trace generation\nutilities: Utility functions","category":"page"},{"location":"contributing/#Contributing","page":"Contributing","title":"Contributing","text":"","category":"section"},{"location":"contributing/#Reporting-Issues","page":"Contributing","title":"Reporting Issues","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Please report any bugs or issues on the GitHub Issues page.","category":"page"},{"location":"contributing/#Development","page":"Contributing","title":"Development","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Fork the repository\nCreate a feature branch\nMake your changes\nRun tests\nSubmit a pull request","category":"page"},{"location":"contributing/#Documentation","page":"Contributing","title":"Documentation","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"All public functions should have docstrings following the Julia documentation guidelines.","category":"page"},{"location":"contributing/#Testing","page":"Contributing","title":"Testing","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Run the test suite to ensure your changes don't break existing functionality:","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"using Pkg\nPkg.test(\"StochasticGene\")","category":"page"},{"location":"contributing/#Code-Style","page":"Contributing","title":"Code Style","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Follow Julia's style guidelines\nUse descriptive variable names\nAdd comments for complex logic\nKeep functions focused and modular","category":"page"},{"location":"examples/ms2_analysis/#MS2-Reporter-Analysis","page":"MS2 Reporter Analysis","title":"MS2 Reporter Analysis","text":"","category":"section"},{"location":"examples/ms2_analysis/","page":"MS2 Reporter Analysis","title":"MS2 Reporter Analysis","text":"This example demonstrates how to analyze live cell imaging data using MS2 reporters.","category":"page"},{"location":"examples/ms2_analysis/#Setup","page":"MS2 Reporter Analysis","title":"Setup","text":"","category":"section"},{"location":"examples/ms2_analysis/","page":"MS2 Reporter Analysis","title":"MS2 Reporter Analysis","text":"First, let's set up our project directory and load the package:","category":"page"},{"location":"examples/ms2_analysis/","page":"MS2 Reporter Analysis","title":"MS2 Reporter Analysis","text":"using StochasticGene\n\n# Create project directory\nrna_setup(\"ms2_example\")\ncd(\"ms2_example\")","category":"page"},{"location":"examples/ms2_analysis/#Data-Preparation","page":"MS2 Reporter Analysis","title":"Data Preparation","text":"","category":"section"},{"location":"examples/ms2_analysis/","page":"MS2 Reporter Analysis","title":"MS2 Reporter Analysis","text":"Place your MS2 reporter image data in the data/ directory. The data should be in a format compatible with the package (see Data Types for details).","category":"page"},{"location":"examples/ms2_analysis/#Model-Definition","page":"MS2 Reporter Analysis","title":"Model Definition","text":"","category":"section"},{"location":"examples/ms2_analysis/","page":"MS2 Reporter Analysis","title":"MS2 Reporter Analysis","text":"We'll fit a model with:","category":"page"},{"location":"examples/ms2_analysis/","page":"MS2 Reporter Analysis","title":"MS2 Reporter Analysis","text":"2 gene states (G=2)\n1 pre-RNA step (R=1)\nMS2 reporter insertion at the first step","category":"page"},{"location":"examples/ms2_analysis/","page":"MS2 Reporter Analysis","title":"MS2 Reporter Analysis","text":"# Define model parameters\nG = 2  # Number of gene states\nR = 1  # Number of pre-RNA steps\ntransitions = ([1,2], [2,1])  # Gene state transitions","category":"page"},{"location":"examples/ms2_analysis/#Fitting-the-Model","page":"MS2 Reporter Analysis","title":"Fitting the Model","text":"","category":"section"},{"location":"examples/ms2_analysis/","page":"MS2 Reporter Analysis","title":"MS2 Reporter Analysis","text":"Now we can fit the model to our MS2 data:","category":"page"},{"location":"examples/ms2_analysis/","page":"MS2 Reporter Analysis","title":"MS2 Reporter Analysis","text":"# Fit the model\nfits, stats, measures, data, model, options = fit(\n    G = G,\n    R = R,\n    transitions = transitions,\n    datatype = \"trace\",\n    datapath = \"data/\",\n    gene = \"MS2\",\n    datacond = \"CONTROL\"\n)","category":"page"},{"location":"examples/ms2_analysis/#Analyzing-Results","page":"MS2 Reporter Analysis","title":"Analyzing Results","text":"","category":"section"},{"location":"examples/ms2_analysis/","page":"MS2 Reporter Analysis","title":"MS2 Reporter Analysis","text":"Let's examine the fitting results:","category":"page"},{"location":"examples/ms2_analysis/","page":"MS2 Reporter Analysis","title":"MS2 Reporter Analysis","text":"# Print basic statistics\nprintln(stats)\n\n# Plot the results\nusing Plots\nplot(fits)\n\n# Save results\nsave_results(fits, \"results/\")","category":"page"},{"location":"examples/ms2_analysis/#Model-Interpretation","page":"MS2 Reporter Analysis","title":"Model Interpretation","text":"","category":"section"},{"location":"examples/ms2_analysis/","page":"MS2 Reporter Analysis","title":"MS2 Reporter Analysis","text":"The fitted model provides:","category":"page"},{"location":"examples/ms2_analysis/","page":"MS2 Reporter Analysis","title":"MS2 Reporter Analysis","text":"Gene state transition rates\nTranscription rates\nReporter maturation rates\nModel likelihood and fit statistics","category":"page"},{"location":"examples/ms2_analysis/#Advanced-Analysis","page":"MS2 Reporter Analysis","title":"Advanced Analysis","text":"","category":"section"},{"location":"examples/ms2_analysis/#Time-Series-Analysis","page":"MS2 Reporter Analysis","title":"Time Series Analysis","text":"","category":"section"},{"location":"examples/ms2_analysis/","page":"MS2 Reporter Analysis","title":"MS2 Reporter Analysis","text":"# Analyze time series data\ntime_series = analyze_time_series(fits)\nplot(time_series)","category":"page"},{"location":"examples/ms2_analysis/#Burst-Analysis","page":"MS2 Reporter Analysis","title":"Burst Analysis","text":"","category":"section"},{"location":"examples/ms2_analysis/","page":"MS2 Reporter Analysis","title":"MS2 Reporter Analysis","text":"# Analyze transcriptional bursts\nburst_stats = analyze_bursts(fits)\nprintln(burst_stats)","category":"page"},{"location":"examples/ms2_analysis/#Next-Steps","page":"MS2 Reporter Analysis","title":"Next Steps","text":"","category":"section"},{"location":"examples/ms2_analysis/","page":"MS2 Reporter Analysis","title":"MS2 Reporter Analysis","text":"Try fitting models with multiple reporters\nExperiment with different reporter configurations\nCompare results across different genes","category":"page"},{"location":"examples/ms2_analysis/","page":"MS2 Reporter Analysis","title":"MS2 Reporter Analysis","text":"For more advanced examples, see:","category":"page"},{"location":"examples/ms2_analysis/","page":"MS2 Reporter Analysis","title":"MS2 Reporter Analysis","text":"Dual Reporter System\nTime Series Analysis\nCoupled Models ","category":"page"},{"location":"installation/#Installation","page":"Installation","title":"Installation","text":"","category":"section"},{"location":"installation/#Prerequisites","page":"Installation","title":"Prerequisites","text":"","category":"section"},{"location":"installation/","page":"Installation","title":"Installation","text":"Julia version 1.9.3 or higher\nGit (for development installation)","category":"page"},{"location":"installation/#Basic-Installation","page":"Installation","title":"Basic Installation","text":"","category":"section"},{"location":"installation/","page":"Installation","title":"Installation","text":"To install StochasticGene.jl, open the Julia REPL and run:","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"using Pkg\nPkg.add(\"StochasticGene\")","category":"page"},{"location":"installation/#Development-Installation","page":"Installation","title":"Development Installation","text":"","category":"section"},{"location":"installation/","page":"Installation","title":"Installation","text":"To install the development version:","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"using Pkg\nPkg.develop(url=\"https://github.com/nih-niddk-mbs/StochasticGene.jl\")","category":"page"},{"location":"installation/#Required-Packages","page":"Installation","title":"Required Packages","text":"","category":"section"},{"location":"installation/","page":"Installation","title":"Installation","text":"The following packages will be automatically installed as dependencies:","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"Distributions\nStatsBase\nDataFrames\nCSV\nPlots\nProgressMeter\nMCMCChains\nTuring\nDifferentialEquations\nOptim\nForwardDiff\nSpecialFunctions\nRandom\nStatistics\nLinearAlgebra","category":"page"},{"location":"installation/#Verification","page":"Installation","title":"Verification","text":"","category":"section"},{"location":"installation/","page":"Installation","title":"Installation","text":"To verify the installation, run:","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"using StochasticGene","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"If no errors occur, the package is installed correctly.","category":"page"},{"location":"installation/#Troubleshooting","page":"Installation","title":"Troubleshooting","text":"","category":"section"},{"location":"installation/","page":"Installation","title":"Installation","text":"If you encounter any issues during installation:","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"Ensure you have the correct Julia version (1.9.3 or higher)\nTry updating your package registry:\nusing Pkg\nPkg.update()\nIf problems persist, check the GitHub Issues page for known issues\nFor additional help, open a new issue on GitHub","category":"page"},{"location":"installation/#Local-Installation","page":"Installation","title":"Local Installation","text":"","category":"section"},{"location":"installation/","page":"Installation","title":"Installation","text":"To install StochasticGene on your computer:","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"julia> ] add StochasticGene","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"To test the installation:","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"julia> ] test StochasticGene","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"To update to the latest version:","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"julia> ] update StochasticGene","category":"page"},{"location":"installation/#Biowulf-Installation-(NIH-HPC)","page":"Installation","title":"Biowulf Installation (NIH HPC)","text":"","category":"section"},{"location":"installation/","page":"Installation","title":"Installation","text":"Start an interactive session:","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"[username@biowulf ~]$ sinteractive --constraint=x2695 --mem=64G","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"Load Julia:","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"[username@biowulf ~]$ module load julialang\n[username@biowulf ~]$ julia -t 1","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"Install StochasticGene:","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"julia> ] add StochasticGene","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"If you encounter Julia crashes after an update, remove your Julia depot and reinstall:","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"[username@biowulf ~]$ rm -r --force .julia","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"Then start Julia and re-add StochasticGene as above.","category":"page"},{"location":"installation/#Requirements","page":"Installation","title":"Requirements","text":"","category":"section"},{"location":"installation/","page":"Installation","title":"Installation","text":"Julia 1.9.3 or higher\nRequired packages will be automatically installed during installation","category":"page"},{"location":"api/write_ONOFFhistograms/#write_ONOFFhistograms-Function","page":"Write ON/OFF Histograms","title":"write_ONOFFhistograms Function","text":"","category":"section"},{"location":"api/write_ONOFFhistograms/","page":"Write ON/OFF Histograms","title":"Write ON/OFF Histograms","text":"Generate ON/OFF dwell time histograms for GRSM models.","category":"page"},{"location":"api/write_ONOFFhistograms/#Syntax","page":"Write ON/OFF Histograms","title":"Syntax","text":"","category":"section"},{"location":"api/write_ONOFFhistograms/","page":"Write ON/OFF Histograms","title":"Write ON/OFF Histograms","text":"write_ONOFFhistograms(; kwargs...)","category":"page"},{"location":"api/write_ONOFFhistograms/#Arguments","page":"Write ON/OFF Histograms","title":"Arguments","text":"","category":"section"},{"location":"api/write_ONOFFhistograms/#Model-Parameters","page":"Write ON/OFF Histograms","title":"Model Parameters","text":"","category":"section"},{"location":"api/write_ONOFFhistograms/","page":"Write ON/OFF Histograms","title":"Write ON/OFF Histograms","text":"G::Int = 2: Number of gene states\nR::Int = 0: Number of pre-RNA steps\nS::Int = 0: Number of splice sites\ninsertstep::Int = 1: Reporter insertion step\ntransitions::Tuple = (): State transitions\nrates::Vector{Float64}: Model rates\nnalleles::Int = 1: Number of alleles","category":"page"},{"location":"api/write_ONOFFhistograms/#Histogram-Parameters","page":"Write ON/OFF Histograms","title":"Histogram Parameters","text":"","category":"section"},{"location":"api/write_ONOFFhistograms/","page":"Write ON/OFF Histograms","title":"Write ON/OFF Histograms","text":"ntraces::Int = 1000: Number of traces for histogram\ntspan::Tuple{Float64, Float64} = (0., 1000.): Time span for traces\ndt::Float64 = 1.0: Time step\nbins::Int = 100: Number of histogram bins\nmaxtime::Float64 = 100.0: Maximum dwell time","category":"page"},{"location":"api/write_ONOFFhistograms/#Output-Parameters","page":"Write ON/OFF Histograms","title":"Output Parameters","text":"","category":"section"},{"location":"api/write_ONOFFhistograms/","page":"Write ON/OFF Histograms","title":"Write ON/OFF Histograms","text":"outfolder::String = \"histograms\": Output folder\nlabel::String = \"\": Output file label\nwrite::Bool = true: Write histograms to file\nreturnhist::Bool = false: Return histogram data","category":"page"},{"location":"api/write_ONOFFhistograms/#Returns","page":"Write ON/OFF Histograms","title":"Returns","text":"","category":"section"},{"location":"api/write_ONOFFhistograms/","page":"Write ON/OFF Histograms","title":"Write ON/OFF Histograms","text":"hist: Tuple containing:\nON dwell time histogram\nOFF dwell time histogram\nBin edges","category":"page"},{"location":"api/write_ONOFFhistograms/#Examples","page":"Write ON/OFF Histograms","title":"Examples","text":"","category":"section"},{"location":"api/write_ONOFFhistograms/","page":"Write ON/OFF Histograms","title":"Write ON/OFF Histograms","text":"# Generate histograms for a simple G model\nwrite_ONOFFhistograms(\n    G = 2,\n    R = 0,\n    rates = [0.1, 0.2],  # G1->G2, G2->G1\n    ntraces = 1000,\n    tspan = (0., 1000.),\n    bins = 100,\n    maxtime = 100.0\n)\n\n# Generate histograms for a GR model\nwrite_ONOFFhistograms(\n    G = 2,\n    R = 3,\n    S = 2,\n    insertstep = 1,\n    rates = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6],\n    ntraces = 5000,\n    tspan = (0., 2000.),\n    bins = 150,\n    maxtime = 200.0\n)","category":"page"},{"location":"api/write_ONOFFhistograms/#Notes","page":"Write ON/OFF Histograms","title":"Notes","text":"","category":"section"},{"location":"api/write_ONOFFhistograms/","page":"Write ON/OFF Histograms","title":"Write ON/OFF Histograms","text":"Histogram Generation\nTraces are generated using Gillespie algorithm\nON/OFF states are determined by gene state\nHistograms are normalized to total number of transitions\nRate Order\nG transitions\nR transitions\nS transitions\nDecay","category":"page"},{"location":"examples/joint_trace/#Joint-Trace-Analysis","page":"Joint Trace Analysis","title":"Joint Trace Analysis","text":"","category":"section"},{"location":"examples/joint_trace/","page":"Joint Trace Analysis","title":"Joint Trace Analysis","text":"This example demonstrates how to analyze joint trace data from multiple reporters (e.g., MS2 and PP7) in live cell imaging experiments.","category":"page"},{"location":"examples/joint_trace/#Setup","page":"Joint Trace Analysis","title":"Setup","text":"","category":"section"},{"location":"examples/joint_trace/","page":"Joint Trace Analysis","title":"Joint Trace Analysis","text":"First, let's set up our project directory and load the package:","category":"page"},{"location":"examples/joint_trace/","page":"Joint Trace Analysis","title":"Joint Trace Analysis","text":"using StochasticGene\n\n# Create project directory\nmkdir(\"joint_trace_example\")\ncd(\"joint_trace_example\")\n\n# Generate example data using test_fit_tracejoint\nfitted_rates, target_rates = test_fit_tracejoint(\n    coupling=Dict(\"gene1\" => \"gene2\"),  # Coupling between genes\n    G=2,                             # 2 gene states\n    R=2,                             # 2 RNA states\n    S=2,                             # 2 splicing states\n    transitions=([1, 2], [2, 1]),    # Simple two-state model\n    rtarget=[0.33, 0.19, 2.5, 1.0],  # Target rates for simulation\n    totaltime=1000,                  # Total simulation time\n    ntrials=10,                      # Number of simulation trials\n    fittedparam=[1, 2, 3],          # Parameters to fit\n    nchains=1                        # Single MCMC chain for example\n)\n\n# Print results\nprintln(\"Fitted rates: \", fitted_rates)\nprintln(\"Target rates: \", target_rates)","category":"page"},{"location":"examples/joint_trace/#Data-Preparation","page":"Joint Trace Analysis","title":"Data Preparation","text":"","category":"section"},{"location":"examples/joint_trace/","page":"Joint Trace Analysis","title":"Joint Trace Analysis","text":"Place your joint trace data in the data/ directory. The data should be organized as follows:","category":"page"},{"location":"examples/joint_trace/","page":"Joint Trace Analysis","title":"Joint Trace Analysis","text":"data/\n├── gene_name/\n│   ├── condition1/\n│   │   ├── ms2_traces.csv\n│   │   ├── pp7_traces.csv\n│   │   └── metadata.csv\n│   └── condition2/\n│       ├── ms2_traces.csv\n│       ├── pp7_traces.csv\n│       └── metadata.csv","category":"page"},{"location":"examples/joint_trace/","page":"Joint Trace Analysis","title":"Joint Trace Analysis","text":"Each trace CSV file should contain:","category":"page"},{"location":"examples/joint_trace/","page":"Joint Trace Analysis","title":"Joint Trace Analysis","text":"Time points\nFluorescence intensity values\nOptional background values","category":"page"},{"location":"examples/joint_trace/#Model-Definition","page":"Joint Trace Analysis","title":"Model Definition","text":"","category":"section"},{"location":"examples/joint_trace/","page":"Joint Trace Analysis","title":"Joint Trace Analysis","text":"We'll fit a joint model with:","category":"page"},{"location":"examples/joint_trace/","page":"Joint Trace Analysis","title":"Joint Trace Analysis","text":"2 gene states (G=2) - ON and OFF\n2 pre-RNA steps (R=2)\nSimple transitions between states\nReporter positions for MS2 and PP7","category":"page"},{"location":"examples/joint_trace/","page":"Joint Trace Analysis","title":"Joint Trace Analysis","text":"# Define model parameters\nG = 2  # Number of gene states (ON and OFF)\nR = 2  # Number of pre-RNA steps\n\n# Define state transitions\n# Format: (from_states, to_states)\ntransitions = (\n    [1, 2],  # From states\n    [2, 1]   # To states\n)\n\n# Define transcription rates for each state\ntranscription_rates = [0.0, 1.0]  # No transcription in OFF state\n\n# Define reporter positions\nreporter_positions = (\n    ms2 = 1,  # MS2 reporter at first step\n    pp7 = 2   # PP7 reporter at second step\n)","category":"page"},{"location":"examples/joint_trace/#Fitting-the-Model","page":"Joint Trace Analysis","title":"Fitting the Model","text":"","category":"section"},{"location":"examples/joint_trace/","page":"Joint Trace Analysis","title":"Joint Trace Analysis","text":"Now we can fit the joint model to our trace data:","category":"page"},{"location":"examples/joint_trace/","page":"Joint Trace Analysis","title":"Joint Trace Analysis","text":"# Fit the model\nfits, stats, measures, data, model, options = fit(\n    G = G,\n    R = R,\n    transitions = transitions,\n    transcription_rates = transcription_rates,\n    datatype = \"joint_trace\",\n    datapath = \"data/\",\n    gene = \"MYC\",\n    datacond = \"CONTROL\",\n    reporter_positions = reporter_positions\n)","category":"page"},{"location":"examples/joint_trace/#Analyzing-Results","page":"Joint Trace Analysis","title":"Analyzing Results","text":"","category":"section"},{"location":"examples/joint_trace/#Basic-Analysis","page":"Joint Trace Analysis","title":"Basic Analysis","text":"","category":"section"},{"location":"examples/joint_trace/","page":"Joint Trace Analysis","title":"Joint Trace Analysis","text":"# Print basic statistics\nprintln(stats)\n\n# Plot the results\nusing Plots\nplot(fits)\n\n# Save results\nsave_results(fits, \"results/\")","category":"page"},{"location":"examples/joint_trace/#Reporter-Specific-Analysis","page":"Joint Trace Analysis","title":"Reporter-Specific Analysis","text":"","category":"section"},{"location":"examples/joint_trace/","page":"Joint Trace Analysis","title":"Joint Trace Analysis","text":"# Analyze MS2 reporter\nms2_analysis = analyze_reporter(fits, \"ms2\")\nplot_reporter(ms2_analysis, \"results/ms2/\")\n\n# Analyze PP7 reporter\npp7_analysis = analyze_reporter(fits, \"pp7\")\nplot_reporter(pp7_analysis, \"results/pp7/\")","category":"page"},{"location":"examples/joint_trace/#Cross-Correlation-Analysis","page":"Joint Trace Analysis","title":"Cross-Correlation Analysis","text":"","category":"section"},{"location":"examples/joint_trace/","page":"Joint Trace Analysis","title":"Joint Trace Analysis","text":"# Calculate cross-correlation\ncross_corr = calculate_cross_correlation(fits)\nplot_cross_correlation(cross_corr, \"results/cross_correlation/\")\n\n# Analyze time lag\ntime_lag = analyze_time_lag(fits)\nplot_time_lag(time_lag, \"results/time_lag/\")","category":"page"},{"location":"examples/joint_trace/#Advanced-Analysis","page":"Joint Trace Analysis","title":"Advanced Analysis","text":"","category":"section"},{"location":"examples/joint_trace/#Burst-Analysis","page":"Joint Trace Analysis","title":"Burst Analysis","text":"","category":"section"},{"location":"examples/joint_trace/","page":"Joint Trace Analysis","title":"Joint Trace Analysis","text":"# Analyze transcriptional bursts\nburst_stats = analyze_bursts(fits)\nprintln(burst_stats)\n\n# Plot burst statistics\nplot_bursts(fits, \"results/bursts/\")","category":"page"},{"location":"examples/joint_trace/#Multiple-Conditions","page":"Joint Trace Analysis","title":"Multiple Conditions","text":"","category":"section"},{"location":"examples/joint_trace/","page":"Joint Trace Analysis","title":"Joint Trace Analysis","text":"# Compare different conditions\nconditions = [\"CONTROL\", \"TREATMENT\"]\ncondition_fits = []\n\nfor cond in conditions\n    fits, stats, measures, data, model, options = fit(\n        G = G,\n        R = R,\n        transitions = transitions,\n        transcription_rates = transcription_rates,\n        datatype = \"joint_trace\",\n        datapath = \"data/\",\n        gene = \"MYC\",\n        datacond = cond,\n        reporter_positions = reporter_positions\n    )\n    push!(condition_fits, (fits, stats))\nend\n\n# Compare conditions\ncompare_conditions(condition_fits, conditions, \"results/condition_comparison/\")","category":"page"},{"location":"examples/joint_trace/#Best-Practices","page":"Joint Trace Analysis","title":"Best Practices","text":"","category":"section"},{"location":"examples/joint_trace/","page":"Joint Trace Analysis","title":"Joint Trace Analysis","text":"Data Quality\nCheck for photobleaching\nVerify signal-to-noise ratio\nConsider background correction\nModel Selection\nStart with simple models\nUse model selection criteria\nValidate assumptions\nAnalysis Pipeline\nDocument preprocessing steps\nSave intermediate results\nVersion control your analysis","category":"page"},{"location":"examples/joint_trace/#Common-Issues-and-Solutions","page":"Joint Trace Analysis","title":"Common Issues and Solutions","text":"","category":"section"},{"location":"examples/joint_trace/#Photobleaching","page":"Joint Trace Analysis","title":"Photobleaching","text":"","category":"section"},{"location":"examples/joint_trace/","page":"Joint Trace Analysis","title":"Joint Trace Analysis","text":"# Check for photobleaching\nbleaching = check_photobleaching(fits)\nplot_photobleaching(bleaching, \"results/photobleaching/\")\n\n# Correct for photobleaching\ncorrected_fits = correct_photobleaching(fits)","category":"page"},{"location":"examples/joint_trace/#Background-Noise","page":"Joint Trace Analysis","title":"Background Noise","text":"","category":"section"},{"location":"examples/joint_trace/","page":"Joint Trace Analysis","title":"Joint Trace Analysis","text":"# Analyze background noise\nnoise = analyze_background_noise(fits)\nplot_background_noise(noise, \"results/background_noise/\")\n\n# Apply background correction\ncorrected_fits = correct_background(fits)","category":"page"},{"location":"examples/joint_trace/#Next-Steps","page":"Joint Trace Analysis","title":"Next Steps","text":"","category":"section"},{"location":"examples/joint_trace/","page":"Joint Trace Analysis","title":"Joint Trace Analysis","text":"Try different reporter configurations\nExperiment with preprocessing steps\nCompare results across different genes","category":"page"},{"location":"examples/joint_trace/","page":"Joint Trace Analysis","title":"Joint Trace Analysis","text":"For more advanced examples, see:","category":"page"},{"location":"examples/joint_trace/","page":"Joint Trace Analysis","title":"Joint Trace Analysis","text":"Hierarchical Models\nCoupled Models\nTime Series Analysis ","category":"page"},{"location":"api/utilities/#Utility-Functions","page":"Utility Functions","title":"Utility Functions","text":"","category":"section"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Collection of utility functions for data processing, model construction, and analysis.","category":"page"},{"location":"api/utilities/#Data-Processing-Functions","page":"Utility Functions","title":"Data Processing Functions","text":"","category":"section"},{"location":"api/utilities/#normalize_histogram","page":"Utility Functions","title":"normalize_histogram","text":"","category":"section"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"normalize_histogram(histogram::Vector{Float64}) -> Vector{Float64}","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Normalize a histogram to create a probability distribution.","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Arguments:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"histogram: Vector of histogram counts","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Returns:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Normalized probability distribution (sums to 1.0)","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Example:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"# Normalize RNA count histogram\nraw_counts = [100, 150, 200, 120, 80, 50]\nprob_dist = normalize_histogram(raw_counts)\nprintln(\"Sum: \", sum(prob_dist))  # Should be 1.0","category":"page"},{"location":"api/utilities/#make_array","page":"Utility Functions","title":"make_array","text":"","category":"section"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"make_array(data) -> Array","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Convert various data types to arrays for processing.","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Arguments:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"data: Data to convert (Vector, DataFrame, etc.)","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Returns:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Array representation of the data","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Example:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"# Convert DataFrame column to array\ndf = DataFrame(counts = [1, 2, 3, 4, 5])\narr = make_array(df.counts)","category":"page"},{"location":"api/utilities/#make_mat","page":"Utility Functions","title":"make_mat","text":"","category":"section"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"make_mat(data) -> Matrix","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Convert data to matrix format for analysis.","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Arguments:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"data: Data to convert","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Returns:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Matrix representation of the data","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Example:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"# Convert vector of vectors to matrix\ntraces = [[1.0, 2.0, 3.0], [2.0, 3.0, 4.0]]\nmat = make_mat(traces)","category":"page"},{"location":"api/utilities/#digit_vector","page":"Utility Functions","title":"digit_vector","text":"","category":"section"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"digit_vector(number::Int, base::Int=10) -> Vector{Int}","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Convert a number to a vector of digits in specified base.","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Arguments:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"number: Number to convert\nbase: Base for conversion (default: 10)","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Returns:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Vector of digits","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Example:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"# Convert number to digits\ndigits = digit_vector(12345)  # [1, 2, 3, 4, 5]\nbinary = digit_vector(10, 2)  # [1, 0, 1, 0]","category":"page"},{"location":"api/utilities/#Model-Construction-Functions","page":"Utility Functions","title":"Model Construction Functions","text":"","category":"section"},{"location":"api/utilities/#prepare_rates","page":"Utility Functions","title":"prepare_rates","text":"","category":"section"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"prepare_rates(rates::Vector{Float64}, model::AbstractModel) -> Vector{Float64}","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Prepare rate parameters for model fitting by applying transformations.","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Arguments:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"rates: Raw rate parameters\nmodel: Model structure","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Returns:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Transformed rates ready for fitting","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Example:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"# Prepare rates for fitting\nraw_rates = [0.1, 0.2, 0.3]\nprepared = prepare_rates(raw_rates, model)","category":"page"},{"location":"api/utilities/#get_rates","page":"Utility Functions","title":"get_rates","text":"","category":"section"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"get_rates(parameters::Vector{Float64}, model::AbstractModel, log_scale::Bool=true) -> Vector{Float64}","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Extract rate parameters from fitted parameters.","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Arguments:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"parameters: Fitted parameter vector\nmodel: Model structure\nlog_scale: Whether parameters are in log scale","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Returns:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Rate parameters","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Example:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"# Extract rates from fitted parameters\nfitted_params = [log(0.1), log(0.2), log(0.3)]\nrates = get_rates(fitted_params, model, true)","category":"page"},{"location":"api/utilities/#get_param","page":"Utility Functions","title":"get_param","text":"","category":"section"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"get_param(parameters::Vector{Float64}, model::AbstractModel, param_type::String) -> Vector{Float64}","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Extract specific parameter types from fitted parameters.","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Arguments:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"parameters: Fitted parameter vector\nmodel: Model structure\nparam_type: Type of parameters to extract (\"rates\", \"noise\", \"coupling\")","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Returns:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Requested parameters","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Example:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"# Extract noise parameters\nnoise_params = get_param(fitted_params, model, \"noise\")","category":"page"},{"location":"api/utilities/#num_rates","page":"Utility Functions","title":"num_rates","text":"","category":"section"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"num_rates(transitions::Tuple, R::Int, S::Int, insertstep::Int) -> Int","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Count the number of transition rates in a model.","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Arguments:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"transitions: Model transitions\nR: Number of pre-RNA steps\nS: Number of splice sites\ninsertstep: Reporter insertion step","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Returns:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Total number of rates","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Example:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"# Count rates for a GRS model\nn_rates = num_rates(([1,2], [2,1]), 3, 2, 1)","category":"page"},{"location":"api/utilities/#num*all*parameters","page":"Utility Functions","title":"numallparameters","text":"","category":"section"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"num_all_parameters(transitions::Tuple, R::Int, S::Int, insertstep::Int, \n                  reporter, coupling::Tuple, grid) -> Int","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Count total parameters including rates, noise, coupling, and grid parameters.","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Arguments:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"transitions: Model transitions\nR, S, insertstep: Model structure\nreporter: Reporter configuration\ncoupling: Coupling specification\ngrid: Grid specification","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Returns:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Total parameter count","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Example:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"# Count all parameters\nn_total = num_all_parameters(transitions, 2, 1, 1, reporter, coupling, grid)","category":"page"},{"location":"api/utilities/#Statistical-Functions","page":"Utility Functions","title":"Statistical Functions","text":"","category":"section"},{"location":"api/utilities/#prob_Gaussian","page":"Utility Functions","title":"prob_Gaussian","text":"","category":"section"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"prob_Gaussian(y::Float64, μ::Float64, σ::Float64) -> Float64","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Calculate Gaussian probability density.","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Arguments:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"y: Observed value\nμ: Mean\nσ: Standard deviation","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Returns:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Probability density","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Example:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"# Calculate Gaussian probability\nprob = prob_Gaussian(2.0, 1.5, 0.5)","category":"page"},{"location":"api/utilities/#prob*Gaussian*grid","page":"Utility Functions","title":"probGaussiangrid","text":"","category":"section"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"prob_Gaussian_grid(y::Vector{Float64}, μ::Vector{Float64}, σ::Vector{Float64}) -> Vector{Float64}","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Calculate Gaussian probabilities on a grid.","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Arguments:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"y: Observed values\nμ: Mean values\nσ: Standard deviations","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Returns:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Vector of probabilities","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Example:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"# Calculate probabilities on grid\ny_vals = [1.0, 2.0, 3.0]\nmu_vals = [1.1, 2.1, 2.9]\nsigma_vals = [0.2, 0.3, 0.4]\nprobs = prob_Gaussian_grid(y_vals, mu_vals, sigma_vals)","category":"page"},{"location":"api/utilities/#mean_elongationtime","page":"Utility Functions","title":"mean_elongationtime","text":"","category":"section"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"mean_elongationtime(rates::Vector{Float64}, R::Int) -> Float64","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Calculate mean elongation time for pre-RNA steps.","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Arguments:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"rates: Rate parameters\nR: Number of pre-RNA steps","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Returns:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Mean elongation time","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Example:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"# Calculate elongation time\nrates = [0.1, 0.2, 0.3, 0.4]\nelong_time = mean_elongationtime(rates, 2)","category":"page"},{"location":"api/utilities/#on_states","page":"Utility Functions","title":"on_states","text":"","category":"section"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"on_states(G::Int, R::Int, S::Int, insertstep::Int) -> Vector{Int}","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Identify transcriptionally active states.","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Arguments:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"G: Number of gene states\nR: Number of pre-RNA steps\nS: Number of splice sites\ninsertstep: Reporter insertion step","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Returns:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Vector of active state indices","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Example:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"# Find active states\nactive = on_states(2, 3, 1, 1)","category":"page"},{"location":"api/utilities/#source_states","page":"Utility Functions","title":"source_states","text":"","category":"section"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"source_states(transitions::Tuple) -> Vector{Int}","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Identify source states for transitions.","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Arguments:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"transitions: Model transitions","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Returns:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Vector of source state indices","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Example:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"# Find source states\nsources = source_states(([1,2], [2,1]))","category":"page"},{"location":"api/utilities/#File-I/O-Functions","page":"Utility Functions","title":"File I/O Functions","text":"","category":"section"},{"location":"api/utilities/#folder_path","page":"Utility Functions","title":"folder_path","text":"","category":"section"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"folder_path(folder::String, root::String=\".\", subfolder::String=\"\"; make::Bool=false) -> String","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Construct folder paths with optional creation.","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Arguments:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"folder: Folder name\nroot: Root directory\nsubfolder: Subfolder name\nmake: Whether to create the folder","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Returns:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Full folder path","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Example:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"# Create results folder path\nresults_path = folder_path(\"results\", \".\", \"analysis\", make=true)","category":"page"},{"location":"api/utilities/#folder_setup","page":"Utility Functions","title":"folder_setup","text":"","category":"section"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"folder_setup(base_path::String, folders::Vector{String}) -> Nothing","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Set up directory structure for analysis.","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Arguments:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"base_path: Base directory\nfolders: Vector of folder names to create","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Example:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"# Set up analysis folders\nfolder_setup(\"project\", [\"data\", \"results\", \"figures\"])","category":"page"},{"location":"api/utilities/#datapdf","page":"Utility Functions","title":"datapdf","text":"","category":"section"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"datapdf(data::AbstractExperimentalData, filename::String) -> Nothing","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Generate PDF summary of data.","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Arguments:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"data: Data structure\nfilename: Output filename","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Example:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"# Generate data summary PDF\ndatapdf(rna_data, \"data_summary.pdf\")","category":"page"},{"location":"api/utilities/#make_dataframes","page":"Utility Functions","title":"make_dataframes","text":"","category":"section"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"make_dataframes(results, model::AbstractModel) -> DataFrame","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Create DataFrames from analysis results.","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Arguments:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"results: Analysis results\nmodel: Model structure","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Returns:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"DataFrame with results","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Example:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"# Convert results to DataFrame\ndf = make_dataframes(fit_results, model)","category":"page"},{"location":"api/utilities/#write*dataframes*only","page":"Utility Functions","title":"writedataframesonly","text":"","category":"section"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"write_dataframes_only(dataframes::Vector{DataFrame}, folder::String, label::String) -> Nothing","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Write DataFrames to CSV files.","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Arguments:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"dataframes: Vector of DataFrames\nfolder: Output folder\nlabel: File label","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Example:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"# Write results to CSV\nwrite_dataframes_only([df1, df2], \"results\", \"analysis\")","category":"page"},{"location":"api/utilities/#Advanced-Utility-Functions","page":"Utility Functions","title":"Advanced Utility Functions","text":"","category":"section"},{"location":"api/utilities/#zero_median","page":"Utility Functions","title":"zero_median","text":"","category":"section"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"zero_median(traces::Vector{Vector{Float64}}, zero::Bool) -> Tuple{Vector{Vector{Float64}}, Vector{Float64}}","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Zero-center traces by subtracting median values.","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Arguments:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"traces: Vector of trace vectors\nzero: Whether to zero-center","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Returns:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Tuple of (zero-centered traces, scale factors)","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Example:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"# Zero-center traces\ncentered_traces, scales = zero_median(traces, true)","category":"page"},{"location":"api/utilities/#fix","page":"Utility Functions","title":"fix","text":"","category":"section"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"fix(parameters::Vector{Float64}, fixedeffects::Tuple) -> Vector{Float64}","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Apply fixed effects to parameters.","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Arguments:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"parameters: Parameter vector\nfixedeffects: Fixed effects specification","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Returns:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Parameters with fixed effects applied","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Example:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"# Apply fixed effects\nfixed_params = fix(parameters, fixedeffects)","category":"page"},{"location":"api/utilities/#fix_filenames","page":"Utility Functions","title":"fix_filenames","text":"","category":"section"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"fix_filenames(folder::String, pattern::String, replacement::String) -> Nothing","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Fix filenames in a folder by pattern replacement.","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Arguments:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"folder: Folder path\npattern: Pattern to replace\nreplacement: Replacement string","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Example:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"# Fix filenames\nfix_filenames(\"data\", \"old_prefix\", \"new_prefix\")","category":"page"},{"location":"api/utilities/#Model-Analysis-Functions","page":"Utility Functions","title":"Model Analysis Functions","text":"","category":"section"},{"location":"api/utilities/#large_deviance","page":"Utility Functions","title":"large_deviance","text":"","category":"section"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"large_deviance(chains::Vector, threshold::Float64=1000.0) -> Vector{Int}","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Identify chains with unusually large deviance.","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Arguments:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"chains: MCMC chains\nthreshold: Deviance threshold","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Returns:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Indices of chains with large deviance","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Example:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"# Find problematic chains\nbad_chains = large_deviance(mcmc_chains, 500.0)","category":"page"},{"location":"api/utilities/#large_rhat","page":"Utility Functions","title":"large_rhat","text":"","category":"section"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"large_rhat(stats, threshold::Float64=1.1) -> Vector{Int}","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Identify parameters with large R-hat values.","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Arguments:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"stats: MCMC statistics\nthreshold: R-hat threshold","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Returns:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Indices of parameters with large R-hat","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Example:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"# Find non-converged parameters\nunconverged = large_rhat(mcmc_stats, 1.05)","category":"page"},{"location":"api/utilities/#assemble*measures*model","page":"Utility Functions","title":"assemblemeasuresmodel","text":"","category":"section"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"assemble_measures_model(measures::Vector, model::AbstractModel) -> Dict","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Assemble model measures for analysis.","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Arguments:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"measures: Vector of measure objects\nmodel: Model structure","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Returns:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Dictionary of assembled measures","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Example:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"# Assemble measures\nassembled = assemble_measures_model(measures, model)","category":"page"},{"location":"api/utilities/#assemble_all","page":"Utility Functions","title":"assemble_all","text":"","category":"section"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"assemble_all(fits, stats, measures, model::AbstractModel) -> Dict","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Assemble all analysis results.","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Arguments:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"fits: Fit results\nstats: Statistics\nmeasures: Measures\nmodel: Model structure","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Returns:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Dictionary of all results","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Example:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"# Assemble all results\nall_results = assemble_all(fits, stats, measures, model)","category":"page"},{"location":"api/utilities/#Performance-Utilities","page":"Utility Functions","title":"Performance Utilities","text":"","category":"section"},{"location":"api/utilities/#set_indices","page":"Utility Functions","title":"set_indices","text":"","category":"section"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"set_indices(model::AbstractModel) -> Vector{Int}","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Set parameter indices for efficient computation.","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Arguments:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"model: Model structure","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Returns:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Vector of parameter indices","category":"page"},{"location":"api/utilities/#T_dimension","page":"Utility Functions","title":"T_dimension","text":"","category":"section"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"T_dimension(model::AbstractModel) -> Int","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Calculate transition matrix dimension.","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Arguments:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"model: Model structure","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Returns:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Matrix dimension","category":"page"},{"location":"api/utilities/#sparse","page":"Utility Functions","title":"sparse","text":"","category":"section"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"sparse(data::Matrix) -> SparseMatrixCSC","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Convert matrix to sparse format for efficiency.","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Arguments:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"data: Dense matrix","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Returns:","category":"page"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"Sparse matrix","category":"page"},{"location":"api/utilities/#Usage-Examples","page":"Utility Functions","title":"Usage Examples","text":"","category":"section"},{"location":"api/utilities/#Complete-Analysis-Pipeline","page":"Utility Functions","title":"Complete Analysis Pipeline","text":"","category":"section"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"using StochasticGene\n\n# Load and process data\ndata = load_data(\"rna\", String[], \"data/\", \"exp1\", \"MYC\", \"ctrl\", (), 1)\nnormalized = normalize_histogram(data.histRNA)\n\n# Set up model\nrates = prepare_rates([0.1, 0.2], model)\nn_params = num_all_parameters(transitions, 0, 0, 1, reporter, (), nothing)\n\n# Analyze results\nactive_states = on_states(2, 0, 0, 1)\nelong_time = mean_elongationtime(rates, 0)\n\n# Output results\nfolder_setup(\"analysis\", [\"results\", \"figures\"])\nresults_path = folder_path(\"results\", \"analysis\", make=true)","category":"page"},{"location":"api/utilities/#Parameter-Extraction","page":"Utility Functions","title":"Parameter Extraction","text":"","category":"section"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"# Extract different parameter types\nall_rates = get_rates(fitted_params, model, true)\nnoise_params = get_param(fitted_params, model, \"noise\")\ncoupling_params = get_param(fitted_params, model, \"coupling\")\n\n# Count parameters\nn_rates = num_rates(transitions, 2, 1, 1)\nn_total = num_all_parameters(transitions, 2, 1, 1, reporter, coupling, grid)","category":"page"},{"location":"api/utilities/#Data-Processing-Pipeline","page":"Utility Functions","title":"Data Processing Pipeline","text":"","category":"section"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"# Process trace data\ntraces, scales = zero_median(raw_traces, true)\ntrace_matrix = make_mat(traces)\nnormalized_traces = normalize_histogram.(traces)\n\n# Statistical analysis\nprobs = [prob_Gaussian(t, μ, σ) for t in trace_values]\nactive = on_states(G, R, S, insertstep)","category":"page"},{"location":"api/utilities/#See-Also","page":"Utility Functions","title":"See Also","text":"","category":"section"},{"location":"api/utilities/","page":"Utility Functions","title":"Utility Functions","text":"fit: Main fitting function\nsimulator: Model simulation\nload_data: Data loading\nwrite_traces: Trace generation","category":"page"},{"location":"api/#API-Reference","page":"API Reference","title":"API Reference","text":"","category":"section"},{"location":"api/#Core-Functions","page":"API Reference","title":"Core Functions","text":"","category":"section"},{"location":"api/#Model-Fitting","page":"API Reference","title":"Model Fitting","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"fit: Main function for fitting models to data\nloglikelihood: Calculate log-likelihood for model parameters\nrun_mh: Run Metropolis-Hastings MCMC sampling\nrun_mcmc_parallel: Run parallel MCMC chains","category":"page"},{"location":"api/#Model-Simulation","page":"API Reference","title":"Model Simulation","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"simulator: Simulate stochastic gene expression models\nsimulate_trace: Generate intensity traces from models\nsimulate_trace_data: Generate trace data with metadata\nsimulate_trace_vector: Generate vectors of traces\nsimulate_trials: Simulate multiple model realizations","category":"page"},{"location":"api/#Data-Loading-and-Management","page":"API Reference","title":"Data Loading and Management","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"load_data: Load experimental data from files\nload_model: Load model parameters from files\nrna_setup: Set up project directory structure\nreadrates: Read rate parameters from files\nreadfile: Read data files with error handling","category":"page"},{"location":"api/#Analysis-and-Visualization","page":"API Reference","title":"Analysis and Visualization","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"write_traces: Generate model-predicted intensity traces\nwrite_ONOFFhistograms: Generate ON/OFF dwell time histograms\nwrite_residency_G_folder: Generate G state residency probabilities\nwrite_histograms: Write RNA histogram predictions\nwrite_dataframes: Write results to CSV files","category":"page"},{"location":"api/#Comprehensive-Function-Documentation","page":"API Reference","title":"Comprehensive Function Documentation","text":"","category":"section"},{"location":"api/#Core-Function-Libraries","page":"API Reference","title":"Core Function Libraries","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"Utilities: Data processing, model construction, and utility functions\nAnalysis: Post-fitting analysis, model comparison, and visualization functions","category":"page"},{"location":"api/#Data-Types","page":"API Reference","title":"Data Types","text":"","category":"section"},{"location":"api/#RNA-Data-Structures","page":"API Reference","title":"RNA Data Structures","text":"","category":"section"},{"location":"api/#RNAData","page":"API Reference","title":"RNAData","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"struct RNAData{nType,hType} <: AbstractRNAData{hType}\n    label::String     # Data set label\n    gene::String      # Gene name (case sensitive)\n    nRNA::nType       # Length of histogram\n    histRNA::hType    # RNA histogram data\nend","category":"page"},{"location":"api/","page":"API Reference","title":"API Reference","text":"A structure for storing steady-state RNA count distributions from techniques like smFISH or scRNA-seq.","category":"page"},{"location":"api/","page":"API Reference","title":"API Reference","text":"Example:","category":"page"},{"location":"api/","page":"API Reference","title":"API Reference","text":"# Create RNA data from histogram\ndata = RNAData(\n    \"control\",          # label\n    \"MYC\",             # gene\n    50,                # nRNA\n    [10,20,30,25,15]   # histRNA\n)","category":"page"},{"location":"api/#RNACountData","page":"API Reference","title":"RNACountData","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"struct RNACountData <: AbstractRNAData{Vector{Int}}\n    label::String\n    gene::String\n    nRNA::Int\n    countsRNA::Vector{Int}\n    yieldfactor::Vector{Float64}\nend","category":"page"},{"location":"api/","page":"API Reference","title":"API Reference","text":"A structure for storing individual RNA count measurements with yield factors.","category":"page"},{"location":"api/","page":"API Reference","title":"API Reference","text":"Example:","category":"page"},{"location":"api/","page":"API Reference","title":"API Reference","text":"# Create RNA count data with yield correction\ndata = RNACountData(\n    \"single_cell\",     # label\n    \"ACTB\",           # gene\n    100,              # nRNA\n    [1,2,3,4,5],      # countsRNA\n    [0.8,0.9,0.85]    # yieldfactor\n)","category":"page"},{"location":"api/#RNAOnOffData","page":"API Reference","title":"RNAOnOffData","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"struct RNAOnOffData <: AbstractHistogramData\n    label::String\n    gene::String\n    nRNA::Int\n    histRNA::Vector\n    bins::Vector\n    ON::Vector        # ON time probability density\n    OFF::Vector       # OFF time probability density\nend","category":"page"},{"location":"api/","page":"API Reference","title":"API Reference","text":"A structure for storing combined RNA count and ON/OFF state duration data.","category":"page"},{"location":"api/","page":"API Reference","title":"API Reference","text":"Example:","category":"page"},{"location":"api/","page":"API Reference","title":"API Reference","text":"# Create combined RNA and ON/OFF data\ndata = RNAOnOffData(\n    \"live_cell\",      # label\n    \"SOX2\",          # gene\n    30,              # nRNA\n    [5,10,15,20],    # histRNA\n    [0,1,2,3,4],     # bins\n    [0.1,0.3,0.4,0.2], # ON\n    [0.2,0.4,0.3,0.1]  # OFF\n)","category":"page"},{"location":"api/#RNADwellTimeData","page":"API Reference","title":"RNADwellTimeData","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"struct RNADwellTimeData <: AbstractHistogramData\n    label::String\n    gene::String\n    nRNA::Int\n    histRNA::Array\n    bins::Vector{Vector}\n    DwellTimes::Vector{Vector}\n    DTtypes::Vector\nend","category":"page"},{"location":"api/","page":"API Reference","title":"API Reference","text":"A structure for storing RNA counts with dwell time distributions.","category":"page"},{"location":"api/#Trace-Data-Structures","page":"API Reference","title":"Trace Data Structures","text":"","category":"section"},{"location":"api/#TraceData","page":"API Reference","title":"TraceData","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"struct TraceData{labelType,geneType,traceType} <: AbstractTraceData\n    label::labelType    # Data set label\n    gene::geneType      # Gene name\n    interval::Float64   # Time interval between trace points\n    trace::traceType    # Trace data\nend","category":"page"},{"location":"api/","page":"API Reference","title":"API Reference","text":"A structure for storing fluorescence intensity time series data.","category":"page"},{"location":"api/","page":"API Reference","title":"API Reference","text":"Example:","category":"page"},{"location":"api/","page":"API Reference","title":"API Reference","text":"# Create trace data\ntraces = [[1.0, 2.0, 3.0], [2.0, 3.0, 4.0]]\ndata = TraceData(\n    \"live_imaging\",   # label\n    \"MYC\",           # gene\n    1.0,             # interval (minutes)\n    traces           # trace data\n)","category":"page"},{"location":"api/#TraceRNAData","page":"API Reference","title":"TraceRNAData","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"struct TraceRNAData{traceType,hType} <: AbstractTraceHistogramData\n    label::String\n    gene::String\n    interval::Float64\n    trace::traceType\n    nRNA::Int\n    histRNA::hType\nend","category":"page"},{"location":"api/","page":"API Reference","title":"API Reference","text":"A structure for storing both trace and RNA histogram data.","category":"page"},{"location":"api/#DwellTimeData","page":"API Reference","title":"DwellTimeData","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"struct DwellTimeData <: AbstractHistogramData\n    label::String\n    gene::String\n    bins::Vector\n    DwellTimes::Vector\n    DTtypes::Vector\nend","category":"page"},{"location":"api/","page":"API Reference","title":"API Reference","text":"A structure for storing dwell time distributions only.","category":"page"},{"location":"api/#Model-Types","page":"API Reference","title":"Model Types","text":"","category":"section"},{"location":"api/#Gene-Model-(GM)","page":"API Reference","title":"Gene Model (GM)","text":"","category":"section"},{"location":"api/#GMmodel","page":"API Reference","title":"GMmodel","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"struct GMmodel{RateType,PriorType,ProposalType,ParamType,MethodType,ComponentType,ReporterType} <: AbstractGMmodel\n    rates::RateType              # Transition rates\n    Gtransitions::Tuple          # G state transitions\n    G::Int                       # Number of G states\n    nalleles::Int               # Number of alleles\n    rateprior::PriorType        # Rate prior distributions\n    proposal::ProposalType      # MCMC proposal distribution\n    fittedparam::ParamType      # Fitted parameter indices\n    fixedeffects::Tuple         # Fixed effects specification\n    method::MethodType          # Solution method\n    components::ComponentType   # Model components\n    reporter::ReporterType      # Reporter configuration\nend","category":"page"},{"location":"api/","page":"API Reference","title":"API Reference","text":"A structure for Gene (G) models with arbitrary numbers of gene states.","category":"page"},{"location":"api/","page":"API Reference","title":"API Reference","text":"Example:","category":"page"},{"location":"api/","page":"API Reference","title":"API Reference","text":"# Create a simple two-state gene model\nmodel = GMmodel(\n    rates = [0.1, 0.2],                    # G1->G2, G2->G1\n    Gtransitions = ([1,2], [2,1]),         # State transitions\n    G = 2,                                 # Two gene states\n    nalleles = 2,                          # Diploid\n    # ... other parameters\n)","category":"page"},{"location":"api/#Gene-Reporter-Splice-Model-(GRSM)","page":"API Reference","title":"Gene-Reporter-Splice Model (GRSM)","text":"","category":"section"},{"location":"api/#GRSMmodel","page":"API Reference","title":"GRSMmodel","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"struct GRSMmodel{TraitType,RateType,nratesType,GType,PriorType,ProposalType,ParamType,MethodType,ComponentType,ReporterType} <: AbstractGRSMmodel{TraitType}\n    trait::TraitType            # Model traits (hierarchical, coupling, etc.)\n    rates::RateType             # Transition rates\n    transforms::Transformation  # Rate transformations\n    nrates::nratesType          # Number of rates\n    Gtransitions::Tuple         # G state transitions\n    G::GType                    # Number of G states\n    R::GType                    # Number of R (pre-RNA) steps\n    S::GType                    # Number of S (splice) sites\n    insertstep::GType           # Reporter insertion step\n    nalleles::Int               # Number of alleles\n    splicetype::String          # Splicing type\n    rateprior::PriorType        # Rate prior distributions\n    proposal::ProposalType      # MCMC proposal distribution\n    fittedparam::ParamType      # Fitted parameter indices\n    fixedeffects::Tuple         # Fixed effects specification\n    method::MethodType          # Solution method\n    components::ComponentType   # Model components\n    reporter::ReporterType      # Reporter configuration\nend","category":"page"},{"location":"api/","page":"API Reference","title":"API Reference","text":"A comprehensive structure for Gene-Reporter-Splice models with arbitrary numbers of gene states (G), pre-RNA steps (R), and splice sites (S).","category":"page"},{"location":"api/","page":"API Reference","title":"API Reference","text":"Example:","category":"page"},{"location":"api/","page":"API Reference","title":"API Reference","text":"# Create a GRS model with 2 gene states, 3 pre-RNA steps, 2 splice sites\nmodel = GRSMmodel(\n    rates = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6],  # G, R, S transitions\n    Gtransitions = ([1,2], [2,1]),            # G state transitions\n    G = 2,                                    # Two gene states\n    R = 3,                                    # Three pre-RNA steps\n    S = 2,                                    # Two splice sites\n    insertstep = 1,                           # Reporter visible from step 1\n    nalleles = 2,                             # Diploid\n    splicetype = \"offeject\",                  # Splicing type\n    # ... other parameters\n)","category":"page"},{"location":"api/#Supporting-Types","page":"API Reference","title":"Supporting Types","text":"","category":"section"},{"location":"api/#HMMReporter","page":"API Reference","title":"HMMReporter","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"struct HMMReporter\n    n::Int                      # Number of noise parameters\n    per_state::Vector           # Reporters per state\n    probfn::Function           # Noise distribution function\n    weightind::Int             # Mixture weight index\n    offstates::Vector{Int}     # Off states\n    noiseparams::Vector{Int}   # Noise parameter indices\nend","category":"page"},{"location":"api/","page":"API Reference","title":"API Reference","text":"A structure for configuring reporter properties in Hidden Markov Models.","category":"page"},{"location":"api/#Transformation","page":"API Reference","title":"Transformation","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"struct Transformation\n    f::Vector{Function}        # Forward transformations\n    f_inv::Vector{Function}    # Inverse transformations\n    f_cv::Vector{Function}     # CV transformations\nend","category":"page"},{"location":"api/","page":"API Reference","title":"API Reference","text":"A structure for parameter transformations during fitting.","category":"page"},{"location":"api/#Utility-Functions","page":"API Reference","title":"Utility Functions","text":"","category":"section"},{"location":"api/#Data-Processing","page":"API Reference","title":"Data Processing","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"normalize_histogram: Normalize probability distributions\nmake_array: Convert data to arrays\nmake_mat: Convert data to matrices\ndigit_vector: Convert numbers to digit vectors","category":"page"},{"location":"api/#Model-Construction","page":"API Reference","title":"Model Construction","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"prepare_rates: Prepare rate parameters for fitting\nget_rates: Extract rates from fitted parameters\nget_param: Extract specific parameters\nnum_rates: Count number of rates in model\nnum_all_parameters: Count total parameters","category":"page"},{"location":"api/#Statistical-Functions","page":"API Reference","title":"Statistical Functions","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"prob_Gaussian: Gaussian probability density\nprob_Gaussian_grid: Gaussian probability on grid\nmean_elongationtime: Calculate mean elongation time\non_states: Identify transcriptionally active states\nsource_states: Identify source states for transitions","category":"page"},{"location":"api/#File-I/O","page":"API Reference","title":"File I/O","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"folder_path: Construct folder paths\nfolder_setup: Set up directory structure\ndatapdf: Generate data PDFs\nmake_dataframes: Create DataFrames from results\nwrite_dataframes_only: Write DataFrames to files","category":"page"},{"location":"api/#Analysis-Functions","page":"API Reference","title":"Analysis Functions","text":"","category":"section"},{"location":"api/#Model-Diagnostics","page":"API Reference","title":"Model Diagnostics","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"large_deviance: Identify chains with large deviance\nlarge_rhat: Identify parameters with large R-hat\nassemble_measures_model: Assemble model measures\nassemble_all: Assemble all results","category":"page"},{"location":"api/#Post-fitting-Analysis","page":"API Reference","title":"Post-fitting Analysis","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"predictedarray: Generate model predictions\npredictedfn: Generate prediction functions\nmake_traces: Generate trace predictions\nmake_traces_dataframe: Convert traces to DataFrames","category":"page"},{"location":"api/#Visualization-Support","page":"API Reference","title":"Visualization Support","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"write_cov: Write covariance matrices\nwrite_augmented: Write augmented results\nwrite_winners: Write best-fit results","category":"page"},{"location":"api/#Hierarchical-and-Coupling-Models","page":"API Reference","title":"Hierarchical and Coupling Models","text":"","category":"section"},{"location":"api/#Hierarchical-Models","page":"API Reference","title":"Hierarchical Models","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"For hierarchical models, use the hierarchical parameter in fit():","category":"page"},{"location":"api/","page":"API Reference","title":"API Reference","text":"# Fit hierarchical model\nfits = fit(\n    hierarchical = (2, [1,2]),  # 2 hyperparameter sets, fit rates 1,2\n    # ... other parameters\n)","category":"page"},{"location":"api/#Coupled-Models","page":"API Reference","title":"Coupled Models","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"For coupled transcriptional units, use tuples for model parameters:","category":"page"},{"location":"api/","page":"API Reference","title":"API Reference","text":"# Fit coupled model with different G states\nfits = fit(\n    G = (2, 3),                          # Unit 1: 2 states, Unit 2: 3 states\n    transitions = (([1,2], [2,1]), ([1,2], [2,3], [3,1])),\n    coupling = (1, 2, [1,2], [3,4], 2),  # Coupling specification\n    # ... other parameters\n)","category":"page"},{"location":"api/#Model-Components","page":"API Reference","title":"Model Components","text":"","category":"section"},{"location":"api/#Gene-States-(G)","page":"API Reference","title":"Gene States (G)","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"Arbitrary number of gene states\nUser-specified transitions between states\nOne active state for transcription initiation\nSupport for multiple alleles","category":"page"},{"location":"api/#Pre-RNA-Steps-(R)","page":"API Reference","title":"Pre-RNA Steps (R)","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"Irreversible forward transitions\nmRNA ejection from final R step\nOptional reporter insertion at any step\nSupport for elongation dynamics","category":"page"},{"location":"api/#Splicing-(S)","page":"API Reference","title":"Splicing (S)","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"Up to R splice sites\nPreRNA with or without spliced intron\nMultiple configurations per R step\nSupport for different splicing types:\n\"\": No splicing\n\"offeject\": Splice then eject\n\"offdecay\": Splice then decay","category":"page"},{"location":"api/#Supported-Data-Types","page":"API Reference","title":"Supported Data Types","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"The package handles multiple experimental data types:","category":"page"},{"location":"api/","page":"API Reference","title":"API Reference","text":"mRNA Count Distributions\nSingle molecule FISH (smFISH)\nSingle cell RNA sequencing (scRNA-seq)\nBulk RNA measurements\nIntensity Traces\nLive cell fluorescence microscopy\nTime-lapse imaging\nMultiple reporter constructs\nDwell Time Distributions\nON/OFF state durations\nTranscriptional burst analysis\nReporter visibility periods\nCombined Data Types\nRNA + trace data\nRNA + dwell time data\nMulti-modal experiments","category":"page"},{"location":"api/#Error-Handling","page":"API Reference","title":"Error Handling","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"The package includes comprehensive error handling:","category":"page"},{"location":"api/","page":"API Reference","title":"API Reference","text":"Data validation: Checks for consistent data formats\nParameter validation: Ensures valid model specifications\nConvergence monitoring: Tracks MCMC convergence\nMemory management: Handles large datasets efficiently","category":"page"},{"location":"api/#Performance-Considerations","page":"API Reference","title":"Performance Considerations","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"Parallel processing: Use nchains > 1 for parallel MCMC\nMemory usage: Large datasets may require cluster computing\nConvergence: Monitor R-hat values for chain convergence\nOptimization: Use appropriate priors for faster convergence","category":"page"},{"location":"examples/dwell_time_analysis/#Dwell-Time-Analysis","page":"Basic Dwell Times","title":"Dwell Time Analysis","text":"","category":"section"},{"location":"examples/dwell_time_analysis/","page":"Basic Dwell Times","title":"Basic Dwell Times","text":"This example demonstrates how to analyze dwell time distributions from live cell imaging data.","category":"page"},{"location":"examples/dwell_time_analysis/#Setup","page":"Basic Dwell Times","title":"Setup","text":"","category":"section"},{"location":"examples/dwell_time_analysis/","page":"Basic Dwell Times","title":"Basic Dwell Times","text":"First, let's set up our project directory and load the package:","category":"page"},{"location":"examples/dwell_time_analysis/","page":"Basic Dwell Times","title":"Basic Dwell Times","text":"using StochasticGene\n\n# Create project directory\nrna_setup(\"dwell_example\")\ncd(\"dwell_example\")","category":"page"},{"location":"examples/dwell_time_analysis/#Data-Preparation","page":"Basic Dwell Times","title":"Data Preparation","text":"","category":"section"},{"location":"examples/dwell_time_analysis/","page":"Basic Dwell Times","title":"Basic Dwell Times","text":"Place your dwell time data in the data/ directory. The data should be in a format compatible with the package (see Data Types for details).","category":"page"},{"location":"examples/dwell_time_analysis/#Model-Definition","page":"Basic Dwell Times","title":"Model Definition","text":"","category":"section"},{"location":"examples/dwell_time_analysis/","page":"Basic Dwell Times","title":"Basic Dwell Times","text":"We'll fit a model with:","category":"page"},{"location":"examples/dwell_time_analysis/","page":"Basic Dwell Times","title":"Basic Dwell Times","text":"2 gene states (G=2)\nNo pre-RNA steps (R=0)\nSimple transitions between states","category":"page"},{"location":"examples/dwell_time_analysis/","page":"Basic Dwell Times","title":"Basic Dwell Times","text":"# Define model parameters\nG = 2  # Number of gene states\nR = 0  # Number of pre-RNA steps\ntransitions = ([1,2], [2,1])  # Gene state transitions","category":"page"},{"location":"examples/dwell_time_analysis/#Fitting-the-Model","page":"Basic Dwell Times","title":"Fitting the Model","text":"","category":"section"},{"location":"examples/dwell_time_analysis/","page":"Basic Dwell Times","title":"Basic Dwell Times","text":"Now we can fit the model to our dwell time data:","category":"page"},{"location":"examples/dwell_time_analysis/","page":"Basic Dwell Times","title":"Basic Dwell Times","text":"# Fit the model\nfits, stats, measures, data, model, options = fit(\n    G = G,\n    R = R,\n    transitions = transitions,\n    datatype = \"dwell\",\n    datapath = \"data/\",\n    gene = \"PP7\",\n    datacond = \"CONTROL\"\n)","category":"page"},{"location":"examples/dwell_time_analysis/#Analyzing-Results","page":"Basic Dwell Times","title":"Analyzing Results","text":"","category":"section"},{"location":"examples/dwell_time_analysis/","page":"Basic Dwell Times","title":"Basic Dwell Times","text":"Let's examine the fitting results:","category":"page"},{"location":"examples/dwell_time_analysis/","page":"Basic Dwell Times","title":"Basic Dwell Times","text":"# Print basic statistics\nprintln(stats)\n\n# Plot the results\nusing Plots\nplot(fits)\n\n# Save results\nsave_results(fits, \"results/\")","category":"page"},{"location":"examples/dwell_time_analysis/#Model-Interpretation","page":"Basic Dwell Times","title":"Model Interpretation","text":"","category":"section"},{"location":"examples/dwell_time_analysis/","page":"Basic Dwell Times","title":"Basic Dwell Times","text":"The fitted model provides:","category":"page"},{"location":"examples/dwell_time_analysis/","page":"Basic Dwell Times","title":"Basic Dwell Times","text":"Gene state transition rates\nDwell time distributions\nModel likelihood and fit statistics","category":"page"},{"location":"examples/dwell_time_analysis/#Advanced-Analysis","page":"Basic Dwell Times","title":"Advanced Analysis","text":"","category":"section"},{"location":"examples/dwell_time_analysis/#ON/OFF-Histograms","page":"Basic Dwell Times","title":"ON/OFF Histograms","text":"","category":"section"},{"location":"examples/dwell_time_analysis/","page":"Basic Dwell Times","title":"Basic Dwell Times","text":"# Generate ON/OFF histograms\nwrite_ONOFFhistograms(fits, \"results/\")","category":"page"},{"location":"examples/dwell_time_analysis/#State-Residency","page":"Basic Dwell Times","title":"State Residency","text":"","category":"section"},{"location":"examples/dwell_time_analysis/","page":"Basic Dwell Times","title":"Basic Dwell Times","text":"# Calculate state residency probabilities\nwrite_residency_G_folder(fits, \"results/\")","category":"page"},{"location":"examples/dwell_time_analysis/#Burst-Analysis","page":"Basic Dwell Times","title":"Burst Analysis","text":"","category":"section"},{"location":"examples/dwell_time_analysis/","page":"Basic Dwell Times","title":"Basic Dwell Times","text":"# Analyze transcriptional bursts\nburst_stats = analyze_bursts(fits)\nprintln(burst_stats)","category":"page"},{"location":"examples/dwell_time_analysis/#Next-Steps","page":"Basic Dwell Times","title":"Next Steps","text":"","category":"section"},{"location":"examples/dwell_time_analysis/","page":"Basic Dwell Times","title":"Basic Dwell Times","text":"Try fitting models with multiple states\nExperiment with different transition configurations\nCompare results across different genes","category":"page"},{"location":"examples/dwell_time_analysis/","page":"Basic Dwell Times","title":"Basic Dwell Times","text":"For more advanced examples, see:","category":"page"},{"location":"examples/dwell_time_analysis/","page":"Basic Dwell Times","title":"Basic Dwell Times","text":"Coupled States\nMultiple Conditions\nHierarchical Models ","category":"page"},{"location":"examples/dual_reporter/#Dual-Reporter-Analysis","page":"Dual Reporter System","title":"Dual Reporter Analysis","text":"","category":"section"},{"location":"examples/dual_reporter/","page":"Dual Reporter System","title":"Dual Reporter System","text":"This example demonstrates how to analyze data from dual reporter systems (e.g., MS2 and PP7) in live cell imaging experiments.","category":"page"},{"location":"examples/dual_reporter/#Setup","page":"Dual Reporter System","title":"Setup","text":"","category":"section"},{"location":"examples/dual_reporter/","page":"Dual Reporter System","title":"Dual Reporter System","text":"First, let's set up our project directory and load the package:","category":"page"},{"location":"examples/dual_reporter/","page":"Dual Reporter System","title":"Dual Reporter System","text":"using StochasticGene\n\n# Create project directory\nrna_setup(\"dual_reporter_example\")\ncd(\"dual_reporter_example\")","category":"page"},{"location":"examples/dual_reporter/#Data-Preparation","page":"Dual Reporter System","title":"Data Preparation","text":"","category":"section"},{"location":"examples/dual_reporter/","page":"Dual Reporter System","title":"Dual Reporter System","text":"Place your dual reporter data in the data/ directory. The data should be organized as follows:","category":"page"},{"location":"examples/dual_reporter/","page":"Dual Reporter System","title":"Dual Reporter System","text":"data/\n├── gene_name/\n│   ├── condition1/\n│   │   ├── cell1/\n│   │   │   ├── ms2.csv\n│   │   │   └── pp7.csv\n│   │   ├── cell2/\n│   │   │   ├── ms2.csv\n│   │   │   └── pp7.csv\n│   │   └── ...\n│   └── condition2/\n│       └── ...","category":"page"},{"location":"examples/dual_reporter/","page":"Dual Reporter System","title":"Dual Reporter System","text":"Each CSV file should contain:","category":"page"},{"location":"examples/dual_reporter/","page":"Dual Reporter System","title":"Dual Reporter System","text":"Time points (in seconds)\nFluorescence intensity values\nOptional: Background values","category":"page"},{"location":"examples/dual_reporter/#Model-Definition","page":"Dual Reporter System","title":"Model Definition","text":"","category":"section"},{"location":"examples/dual_reporter/","page":"Dual Reporter System","title":"Dual Reporter System","text":"We'll fit a model with:","category":"page"},{"location":"examples/dual_reporter/","page":"Dual Reporter System","title":"Dual Reporter System","text":"2 gene states (G=2)\n2 pre-RNA steps (R=2)\nMS2 reporter at first step\nPP7 reporter at second step","category":"page"},{"location":"examples/dual_reporter/","page":"Dual Reporter System","title":"Dual Reporter System","text":"# Define model parameters\nG = 2  # Number of gene states\nR = 2  # Number of pre-RNA steps\ntransitions = ([1,2], [2,1])  # Gene state transitions\n\n# Define reporter positions\nreporter_positions = Dict(\n    \"MS2\" => 1,  # First step\n    \"PP7\" => 2   # Second step\n)","category":"page"},{"location":"examples/dual_reporter/#Fitting-the-Model","page":"Dual Reporter System","title":"Fitting the Model","text":"","category":"section"},{"location":"examples/dual_reporter/","page":"Dual Reporter System","title":"Dual Reporter System","text":"Now we can fit the model to our dual reporter data:","category":"page"},{"location":"examples/dual_reporter/","page":"Dual Reporter System","title":"Dual Reporter System","text":"# Fit the model\nfits, stats, measures, data, model, options = fit(\n    G = G,\n    R = R,\n    transitions = transitions,\n    datatype = \"dual_trace\",\n    datapath = \"data/\",\n    gene = \"MYC\",\n    datacond = \"CONTROL\",\n    reporter_positions = reporter_positions\n)","category":"page"},{"location":"examples/dual_reporter/#Analyzing-Results","page":"Dual Reporter System","title":"Analyzing Results","text":"","category":"section"},{"location":"examples/dual_reporter/#Basic-Analysis","page":"Dual Reporter System","title":"Basic Analysis","text":"","category":"section"},{"location":"examples/dual_reporter/","page":"Dual Reporter System","title":"Dual Reporter System","text":"# Print basic statistics\nprintln(stats)\n\n# Plot the results\nusing Plots\nplot(fits)\n\n# Save results\nsave_results(fits, \"results/\")","category":"page"},{"location":"examples/dual_reporter/#Reporter-Specific-Analysis","page":"Dual Reporter System","title":"Reporter-Specific Analysis","text":"","category":"section"},{"location":"examples/dual_reporter/","page":"Dual Reporter System","title":"Dual Reporter System","text":"# Analyze MS2 data\nms2_stats = analyze_reporter(fits, \"MS2\")\nplot_reporter(ms2_stats, \"results/ms2/\")\n\n# Analyze PP7 data\npp7_stats = analyze_reporter(fits, \"PP7\")\nplot_reporter(pp7_stats, \"results/pp7/\")","category":"page"},{"location":"examples/dual_reporter/#Cross-Correlation-Analysis","page":"Dual Reporter System","title":"Cross-Correlation Analysis","text":"","category":"section"},{"location":"examples/dual_reporter/","page":"Dual Reporter System","title":"Dual Reporter System","text":"# Calculate cross-correlation\ncorrelation = analyze_correlation(fits)\n\n# Plot correlation\nplot_correlation(correlation, \"results/correlation/\")","category":"page"},{"location":"examples/dual_reporter/#Advanced-Analysis","page":"Dual Reporter System","title":"Advanced Analysis","text":"","category":"section"},{"location":"examples/dual_reporter/#Time-Lag-Analysis","page":"Dual Reporter System","title":"Time Lag Analysis","text":"","category":"section"},{"location":"examples/dual_reporter/","page":"Dual Reporter System","title":"Dual Reporter System","text":"# Calculate time lags\ntime_lags = analyze_time_lags(fits)\n\n# Plot time lags\nplot_time_lags(time_lags, \"results/time_lags/\")","category":"page"},{"location":"examples/dual_reporter/#Burst-Analysis","page":"Dual Reporter System","title":"Burst Analysis","text":"","category":"section"},{"location":"examples/dual_reporter/","page":"Dual Reporter System","title":"Dual Reporter System","text":"# Analyze bursts for each reporter\nms2_bursts = analyze_bursts(fits, \"MS2\")\npp7_bursts = analyze_bursts(fits, \"PP7\")\n\n# Compare burst statistics\ncompare_bursts(ms2_bursts, pp7_bursts, \"results/bursts/\")","category":"page"},{"location":"examples/dual_reporter/#Multiple-Conditions","page":"Dual Reporter System","title":"Multiple Conditions","text":"","category":"section"},{"location":"examples/dual_reporter/","page":"Dual Reporter System","title":"Dual Reporter System","text":"# Compare different conditions\nconditions = [\"CONTROL\", \"TREATMENT\"]\nfits_list = []\n\nfor cond in conditions\n    fits, stats, measures, data, model, options = fit(\n        G = G,\n        R = R,\n        transitions = transitions,\n        datatype = \"dual_trace\",\n        datapath = \"data/\",\n        gene = \"MYC\",\n        datacond = cond,\n        reporter_positions = reporter_positions\n    )\n    push!(fits_list, fits)\nend\n\n# Compare conditions\ncompare_conditions(fits_list, conditions, \"results/comparison/\")","category":"page"},{"location":"examples/dual_reporter/#Best-Practices","page":"Dual Reporter System","title":"Best Practices","text":"","category":"section"},{"location":"examples/dual_reporter/","page":"Dual Reporter System","title":"Dual Reporter System","text":"Data Quality\nEnsure proper channel alignment\nCheck for cross-talk between channels\nVerify background subtraction for each channel\nModel Selection\nConsider reporter maturation times\nAccount for different reporter properties\nValidate model assumptions\nAnalysis Pipeline\nProcess each reporter consistently\nDocument analysis steps\nSave intermediate results","category":"page"},{"location":"examples/dual_reporter/#Next-Steps","page":"Dual Reporter System","title":"Next Steps","text":"","category":"section"},{"location":"examples/dual_reporter/","page":"Dual Reporter System","title":"Dual Reporter System","text":"Try different reporter configurations\nExperiment with more complex models\nCompare results across different genes","category":"page"},{"location":"examples/dual_reporter/","page":"Dual Reporter System","title":"Dual Reporter System","text":"For more advanced examples, see:","category":"page"},{"location":"examples/dual_reporter/","page":"Dual Reporter System","title":"Dual Reporter System","text":"Time Series Analysis\nCoupled Models\nHierarchical Models ","category":"page"},{"location":"examples/#Examples","page":"Overview","title":"Examples","text":"","category":"section"},{"location":"examples/","page":"Overview","title":"Overview","text":"This section contains detailed examples of using StochasticGene.jl for various analysis scenarios.","category":"page"},{"location":"examples/#Basic-Examples","page":"Overview","title":"Basic Examples","text":"","category":"section"},{"location":"examples/#RNA-Count-Analysis","page":"Overview","title":"RNA Count Analysis","text":"","category":"section"},{"location":"examples/","page":"Overview","title":"Overview","text":"Basic Telegraph Model: Fitting a simple two-state model to RNA count data\nMulti-State Model: Fitting a model with multiple gene states\nRNA Histogram Analysis: Analyzing RNA count distributions","category":"page"},{"location":"examples/#Live-Cell-Imaging","page":"Overview","title":"Live Cell Imaging","text":"","category":"section"},{"location":"examples/","page":"Overview","title":"Overview","text":"MS2 Reporter Analysis: Analyzing MS2 reporter data\nTrace Analysis: Analyzing time series data","category":"page"},{"location":"examples/#Dwell-Time-Analysis","page":"Overview","title":"Dwell Time Analysis","text":"","category":"section"},{"location":"examples/","page":"Overview","title":"Overview","text":"Basic Dwell Times: Analyzing basic dwell time distributions\nRNA Dwell Time Analysis: Advanced dwell time analysis","category":"page"},{"location":"examples/#Advanced-Examples","page":"Overview","title":"Advanced Examples","text":"","category":"section"},{"location":"examples/#Parallel-Processing","page":"Overview","title":"Parallel Processing","text":"","category":"section"},{"location":"examples/","page":"Overview","title":"Overview","text":"Parallel Processing: Using parallel processing for large datasets","category":"page"},{"location":"examples/#Model-Analysis","page":"Overview","title":"Model Analysis","text":"","category":"section"},{"location":"examples/","page":"Overview","title":"Overview","text":"Model Validation: Validating model assumptions and results\nParameter Analysis: Analyzing model parameters and their uncertainties","category":"page"},{"location":"examples/#Contributing-Examples","page":"Overview","title":"Contributing Examples","text":"","category":"section"},{"location":"examples/","page":"Overview","title":"Overview","text":"We welcome contributions of new examples! If you have an interesting use case or analysis workflow, please consider sharing it with the community. See the Contributing guide for more information.","category":"page"},{"location":"api/write_traces/#write_traces-Function","page":"Write Traces","title":"write_traces Function","text":"","category":"section"},{"location":"api/write_traces/","page":"Write Traces","title":"Write Traces","text":"Generate model-predicted intensity traces for GRSM models.","category":"page"},{"location":"api/write_traces/#Syntax","page":"Write Traces","title":"Syntax","text":"","category":"section"},{"location":"api/write_traces/","page":"Write Traces","title":"Write Traces","text":"write_traces(; kwargs...)","category":"page"},{"location":"api/write_traces/#Arguments","page":"Write Traces","title":"Arguments","text":"","category":"section"},{"location":"api/write_traces/#Model-Parameters","page":"Write Traces","title":"Model Parameters","text":"","category":"section"},{"location":"api/write_traces/","page":"Write Traces","title":"Write Traces","text":"G::Int = 2: Number of gene states\nR::Int = 0: Number of pre-RNA steps\nS::Int = 0: Number of splice sites\ninsertstep::Int = 1: Reporter insertion step\ntransitions::Tuple = (): State transitions\nrates::Vector{Float64}: Model rates\nnalleles::Int = 1: Number of alleles","category":"page"},{"location":"api/write_traces/#Trace-Parameters","page":"Write Traces","title":"Trace Parameters","text":"","category":"section"},{"location":"api/write_traces/","page":"Write Traces","title":"Write Traces","text":"ntraces::Int = 100: Number of traces to generate\ntspan::Tuple{Float64, Float64} = (0., 100.): Time span for traces\ndt::Float64 = 1.0: Time step\nnoise::Vector{Float64} = Float64[]: Observation noise parameters\nprobfn::Function = prob_Gaussian: Observation probability function","category":"page"},{"location":"api/write_traces/#Output-Parameters","page":"Write Traces","title":"Output Parameters","text":"","category":"section"},{"location":"api/write_traces/","page":"Write Traces","title":"Write Traces","text":"outfolder::String = \"traces\": Output folder\nlabel::String = \"\": Output file label\nwrite::Bool = true: Write traces to file\nreturntraces::Bool = false: Return traces array","category":"page"},{"location":"api/write_traces/#Returns","page":"Write Traces","title":"Returns","text":"","category":"section"},{"location":"api/write_traces/","page":"Write Traces","title":"Write Traces","text":"traces: Array of generated traces (if returntraces = true)","category":"page"},{"location":"api/write_traces/#Examples","page":"Write Traces","title":"Examples","text":"","category":"section"},{"location":"api/write_traces/","page":"Write Traces","title":"Write Traces","text":"# Generate traces for a simple G model\nwrite_traces(\n    G = 2,\n    R = 0,\n    rates = [0.1, 0.2],  # G1->G2, G2->G1\n    ntraces = 100,\n    tspan = (0., 100.),\n    dt = 1.0\n)\n\n# Generate traces for a GR model\nwrite_traces(\n    G = 2,\n    R = 3,\n    S = 2,\n    insertstep = 1,\n    rates = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6],\n    ntraces = 50,\n    tspan = (0., 200.),\n    dt = 0.5\n)","category":"page"},{"location":"api/write_traces/#Notes","page":"Write Traces","title":"Notes","text":"","category":"section"},{"location":"api/write_traces/","page":"Write Traces","title":"Write Traces","text":"Rate Order\nG transitions\nR transitions\nS transitions\nDecay\nNoise parameters\nTrace Generation\nTraces are generated using Gillespie algorithm\nNoise is added according to specified probfn\nOutput format: time, intensity, G state, R state, S state","category":"page"},{"location":"examples/parallel_processing/#Parallel-Processing","page":"Parallel Processing","title":"Parallel Processing","text":"","category":"section"},{"location":"examples/parallel_processing/","page":"Parallel Processing","title":"Parallel Processing","text":"This example demonstrates how to use parallel processing for analyzing large datasets.","category":"page"},{"location":"examples/parallel_processing/#Setup","page":"Parallel Processing","title":"Setup","text":"","category":"section"},{"location":"examples/parallel_processing/","page":"Parallel Processing","title":"Parallel Processing","text":"First, let's set up our project directory and load the package:","category":"page"},{"location":"examples/parallel_processing/","page":"Parallel Processing","title":"Parallel Processing","text":"using StochasticGene\n\n# Create project directory\nrna_setup(\"parallel_example\")\ncd(\"parallel_example\")","category":"page"},{"location":"examples/parallel_processing/#Setting-Up-Parallel-Processing","page":"Parallel Processing","title":"Setting Up Parallel Processing","text":"","category":"section"},{"location":"examples/parallel_processing/","page":"Parallel Processing","title":"Parallel Processing","text":"Initialize parallel processing with the desired number of workers:","category":"page"},{"location":"examples/parallel_processing/","page":"Parallel Processing","title":"Parallel Processing","text":"# Set up parallel processing\nsetup_parallel(nworkers=4)  # Adjust based on your system","category":"page"},{"location":"examples/parallel_processing/#Fitting-Models-in-Parallel","page":"Parallel Processing","title":"Fitting Models in Parallel","text":"","category":"section"},{"location":"examples/parallel_processing/#Basic-Parallel-Fitting","page":"Parallel Processing","title":"Basic Parallel Fitting","text":"","category":"section"},{"location":"examples/parallel_processing/","page":"Parallel Processing","title":"Parallel Processing","text":"# Fit multiple models in parallel\nfits = fit_parallel(\n    G = 2,\n    R = 0,\n    transitions = ([1,2], [2,1]),\n    datatype = \"rna\",\n    datapath = \"data/\",\n    gene = \"MYC\",\n    nchains = 4  # Number of parallel chains\n)","category":"page"},{"location":"examples/parallel_processing/#Hierarchical-Parallel-Fitting","page":"Parallel Processing","title":"Hierarchical Parallel Fitting","text":"","category":"section"},{"location":"examples/parallel_processing/","page":"Parallel Processing","title":"Parallel Processing","text":"# Fit hierarchical models in parallel\nfits = fit_hierarchical(\n    G = 2,\n    R = 0,\n    transitions = ([1,2], [2,1]),\n    datatype = \"rna\",\n    datapath = \"data/\",\n    gene = \"MYC\",\n    nchains = 4,\n    hierarchical = true\n)","category":"page"},{"location":"examples/parallel_processing/#Analyzing-Results","page":"Parallel Processing","title":"Analyzing Results","text":"","category":"section"},{"location":"examples/parallel_processing/","page":"Parallel Processing","title":"Parallel Processing","text":"Let's examine the parallel fitting results:","category":"page"},{"location":"examples/parallel_processing/","page":"Parallel Processing","title":"Parallel Processing","text":"# Print basic statistics\nprintln(stats)\n\n# Plot the results\nusing Plots\nplot(fits)\n\n# Save results\nsave_results(fits, \"results/\")","category":"page"},{"location":"examples/parallel_processing/#Advanced-Usage","page":"Parallel Processing","title":"Advanced Usage","text":"","category":"section"},{"location":"examples/parallel_processing/#Cluster-Computing","page":"Parallel Processing","title":"Cluster Computing","text":"","category":"section"},{"location":"examples/parallel_processing/","page":"Parallel Processing","title":"Parallel Processing","text":"For large-scale analysis on a computing cluster:","category":"page"},{"location":"examples/parallel_processing/","page":"Parallel Processing","title":"Parallel Processing","text":"# Set up cluster-specific parameters\nsetup_parallel(\n    nworkers = 16,\n    cluster = true,\n    memory_limit = \"4G\"\n)\n\n# Run large-scale analysis\nfits = fit_parallel(\n    G = 2,\n    R = 0,\n    transitions = ([1,2], [2,1]),\n    datatype = \"rna\",\n    datapath = \"data/\",\n    gene = \"MYC\",\n    nchains = 16\n)","category":"page"},{"location":"examples/parallel_processing/#Resource-Management","page":"Parallel Processing","title":"Resource Management","text":"","category":"section"},{"location":"examples/parallel_processing/","page":"Parallel Processing","title":"Parallel Processing","text":"Monitor and manage parallel resources:","category":"page"},{"location":"examples/parallel_processing/","page":"Parallel Processing","title":"Parallel Processing","text":"# Check worker status\ncheck_workers()\n\n# Clean up resources\ncleanup_parallel()","category":"page"},{"location":"examples/parallel_processing/#Best-Practices","page":"Parallel Processing","title":"Best Practices","text":"","category":"section"},{"location":"examples/parallel_processing/","page":"Parallel Processing","title":"Parallel Processing","text":"Resource Allocation\nMatch worker count to available CPU cores\nConsider memory requirements per worker\nMonitor system load\nError Handling\nImplement proper error handling for parallel tasks\nLog errors and warnings\nImplement retry mechanisms\nPerformance Optimization\nUse appropriate chunk sizes\nBalance load across workers\nMonitor memory usage","category":"page"},{"location":"examples/parallel_processing/#Next-Steps","page":"Parallel Processing","title":"Next Steps","text":"","category":"section"},{"location":"examples/parallel_processing/","page":"Parallel Processing","title":"Parallel Processing","text":"Try different parallel configurations\nExperiment with hierarchical models\nScale up to cluster computing","category":"page"},{"location":"examples/parallel_processing/","page":"Parallel Processing","title":"Parallel Processing","text":"For more advanced examples, see:","category":"page"},{"location":"examples/parallel_processing/","page":"Parallel Processing","title":"Parallel Processing","text":"Cluster Computing\nHierarchical Models\nLarge Dataset Analysis ","category":"page"},{"location":"api/simulator/#simulator-Function","page":"Model Simulation","title":"simulator Function","text":"","category":"section"},{"location":"api/simulator/","page":"Model Simulation","title":"Model Simulation","text":"Simulate stochastic gene expression models using the Gillespie algorithm.","category":"page"},{"location":"api/simulator/#Syntax","page":"Model Simulation","title":"Syntax","text":"","category":"section"},{"location":"api/simulator/","page":"Model Simulation","title":"Model Simulation","text":"simulator(rin, transitions, G, R, S, insertstep; kwargs...)","category":"page"},{"location":"api/simulator/#Arguments","page":"Model Simulation","title":"Arguments","text":"","category":"section"},{"location":"api/simulator/#Required-Arguments","page":"Model Simulation","title":"Required Arguments","text":"","category":"section"},{"location":"api/simulator/","page":"Model Simulation","title":"Model Simulation","text":"rin::Vector{Float64}: Initial transition rates\ntransitions::Tuple: Tuple of vectors specifying state transitions\nG::Int: Number of gene states\nR::Int: Number of pre-RNA steps\nS::Int: Number of splice sites (must be ≤ R - insertstep + 1)\ninsertstep::Int: Step where reporter becomes visible","category":"page"},{"location":"api/simulator/#Optional-Keyword-Arguments","page":"Model Simulation","title":"Optional Keyword Arguments","text":"","category":"section"},{"location":"api/simulator/#Simulation-Parameters","page":"Model Simulation","title":"Simulation Parameters","text":"","category":"section"},{"location":"api/simulator/","page":"Model Simulation","title":"Model Simulation","text":"warmupsteps::Int = 0: Number of warmup steps before recording\nnalleles::Int = 1: Number of alleles\nnhist::Int = 20: Number of histogram bins\nbins::Vector{Float64} = Float64[]: Custom histogram bins\ntraceinterval::Float64 = 0.0: Time interval for trace recording (0 = no traces)","category":"page"},{"location":"api/simulator/#Model-Configuration","page":"Model Simulation","title":"Model Configuration","text":"","category":"section"},{"location":"api/simulator/","page":"Model Simulation","title":"Model Simulation","text":"coupling::Tuple = tuple(): Coupling parameters for multi-unit models\nonstates::Vector{Int} = Int[]: States where transcription is active\nsplicetype::String = \"\": Splicing configuration (\"\", \"offeject\", \"offdecay\")","category":"page"},{"location":"api/simulator/#Observation-Model","page":"Model Simulation","title":"Observation Model","text":"","category":"section"},{"location":"api/simulator/","page":"Model Simulation","title":"Model Simulation","text":"probfn::Function = prob_Gaussian: Probability function for observations\nnoise::Vector{Float64} = Float64[]: Noise parameters\nreportersteps::Vector{Int} = Int[]: Steps where reporter is visible","category":"page"},{"location":"api/simulator/#Output-Control","page":"Model Simulation","title":"Output Control","text":"","category":"section"},{"location":"api/simulator/","page":"Model Simulation","title":"Model Simulation","text":"tspan::Tuple{Float64, Float64} = (0., 1000.): Time span for simulation\nntrials::Int = 1: Number of simulation trials\nresultfolder::String = \"\": Output folder for results","category":"page"},{"location":"api/simulator/#Returns","page":"Model Simulation","title":"Returns","text":"","category":"section"},{"location":"api/simulator/","page":"Model Simulation","title":"Model Simulation","text":"histogram::Vector{Float64}: Steady-state RNA count distribution\ntraces::Vector{Vector{Float64}}: Intensity traces (if traceinterval > 0)\ndtimes::Vector{Float64}: Dwell times (if applicable)","category":"page"},{"location":"api/simulator/#Examples","page":"Model Simulation","title":"Examples","text":"","category":"section"},{"location":"api/simulator/#Basic-Two-State-Model","page":"Model Simulation","title":"Basic Two-State Model","text":"","category":"section"},{"location":"api/simulator/","page":"Model Simulation","title":"Model Simulation","text":"using StochasticGene\n\n# Simple two-state telegraph model\nrates = [0.1, 0.2]  # G1->G2, G2->G1\ntransitions = ([1,2], [2,1])\nG, R, S = 2, 0, 0\ninsertstep = 1\n\n# Simulate RNA histogram\nhistogram = simulator(\n    rates, transitions, G, R, S, insertstep,\n    nhist = 50,\n    ntrials = 1000\n)","category":"page"},{"location":"api/simulator/#GRS-Model-with-Traces","page":"Model Simulation","title":"GRS Model with Traces","text":"","category":"section"},{"location":"api/simulator/","page":"Model Simulation","title":"Model Simulation","text":"# Gene-Reporter-Splice model\nrates = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6]\ntransitions = ([1,2], [2,1])\nG, R, S = 2, 3, 2\ninsertstep = 1\n\n# Simulate with intensity traces\nhistogram, traces = simulator(\n    rates, transitions, G, R, S, insertstep,\n    traceinterval = 1.0,    # 1 minute intervals\n    tspan = (0., 500.),     # 500 minute simulation\n    noise = [10.0, 5.0],    # Gaussian noise parameters\n    probfn = prob_Gaussian\n)","category":"page"},{"location":"api/simulator/#Coupled-Model","page":"Model Simulation","title":"Coupled Model","text":"","category":"section"},{"location":"api/simulator/","page":"Model Simulation","title":"Model Simulation","text":"# Two coupled transcriptional units\nrates1 = [0.1, 0.2, 0.3]\nrates2 = [0.15, 0.25, 0.35]\ntransitions1 = ([1,2], [2,1])\ntransitions2 = ([1,2], [2,1])\n\n# Coupling: units share some transition rates\ncoupling = (2, 2, [1,2], [3,4], 2)  # Coupling specification\n\nhistogram = simulator(\n    [rates1; rates2], \n    (transitions1, transitions2),\n    (2, 2),        # G states for each unit\n    (1, 1),        # R steps for each unit\n    (0, 0),        # S sites for each unit\n    (1, 1),        # Insert steps\n    coupling = coupling,\n    nalleles = 2\n)","category":"page"},{"location":"api/simulator/#Hierarchical-Model","page":"Model Simulation","title":"Hierarchical Model","text":"","category":"section"},{"location":"api/simulator/","page":"Model Simulation","title":"Model Simulation","text":"# Simulate data for hierarchical fitting\nrates = [0.1, 0.2, 0.3]\ntransitions = ([1,2], [2,1])\nG, R, S = 2, 1, 0\ninsertstep = 1\n\n# Generate multiple traces for hierarchical analysis\nntraces = 10\nall_traces = Vector{Vector{Float64}}()\n\nfor i in 1:ntraces\n    # Add noise to rates for each trace\n    noisy_rates = rates .* (1 .+ 0.1 * randn(length(rates)))\n    \n    histogram, traces = simulator(\n        noisy_rates, transitions, G, R, S, insertstep,\n        traceinterval = 0.5,\n        tspan = (0., 200.),\n        noise = [20.0, 10.0]\n    )\n    \n    append!(all_traces, traces)\nend","category":"page"},{"location":"api/simulator/#Custom-Observation-Model","page":"Model Simulation","title":"Custom Observation Model","text":"","category":"section"},{"location":"api/simulator/","page":"Model Simulation","title":"Model Simulation","text":"# Define custom observation function\nfunction prob_Poisson(y, μ, σ)\n    return pdf(Poisson(μ), round(Int, y))\nend\n\n# Simulate with Poisson observation noise\nhistogram = simulator(\n    rates, transitions, G, R, S, insertstep,\n    probfn = prob_Poisson,\n    noise = [15.0],  # Poisson rate parameter\n    nhist = 30\n)","category":"page"},{"location":"api/simulator/#Rate-Ordering","page":"Model Simulation","title":"Rate Ordering","text":"","category":"section"},{"location":"api/simulator/","page":"Model Simulation","title":"Model Simulation","text":"The rate vector rin must follow this specific ordering:","category":"page"},{"location":"api/simulator/","page":"Model Simulation","title":"Model Simulation","text":"G transitions: Rates between gene states\nR transitions: Rates between pre-RNA steps\nS transitions: Splicing rates\nDecay rates: mRNA decay rates\nNoise parameters: Observation noise parameters","category":"page"},{"location":"api/simulator/#Example-Rate-Ordering","page":"Model Simulation","title":"Example Rate Ordering","text":"","category":"section"},{"location":"api/simulator/","page":"Model Simulation","title":"Model Simulation","text":"For a model with G=2, R=3, S=2:","category":"page"},{"location":"api/simulator/","page":"Model Simulation","title":"Model Simulation","text":"rates = [\n    # G transitions\n    0.1,    # G1 -> G2\n    0.2,    # G2 -> G1\n    \n    # R transitions\n    0.3,    # R1 -> R2\n    0.4,    # R2 -> R3\n    0.5,    # R3 -> eject\n    \n    # S transitions\n    0.6,    # Splice site 1\n    0.7,    # Splice site 2\n    \n    # Decay\n    0.05    # mRNA decay\n]","category":"page"},{"location":"api/simulator/#Performance-Notes","page":"Model Simulation","title":"Performance Notes","text":"","category":"section"},{"location":"api/simulator/","page":"Model Simulation","title":"Model Simulation","text":"Memory Usage: Large nhist values require more memory\nSimulation Time: Longer tspan and smaller rates increase runtime\nTrace Recording: traceinterval > 0 significantly increases memory usage\nParallel Processing: Use multiple calls for embarrassingly parallel simulations","category":"page"},{"location":"api/simulator/#Common-Use-Cases","page":"Model Simulation","title":"Common Use Cases","text":"","category":"section"},{"location":"api/simulator/#Parameter-Estimation-Validation","page":"Model Simulation","title":"Parameter Estimation Validation","text":"","category":"section"},{"location":"api/simulator/","page":"Model Simulation","title":"Model Simulation","text":"# Generate synthetic data for testing parameter estimation\ntrue_rates = [0.1, 0.2, 0.3]\nsynthetic_data = simulator(\n    true_rates, transitions, G, R, S, insertstep,\n    nhist = 100,\n    ntrials = 5000\n)\n\n# Use synthetic_data to validate fitting algorithms","category":"page"},{"location":"api/simulator/#Model-Comparison","page":"Model Simulation","title":"Model Comparison","text":"","category":"section"},{"location":"api/simulator/","page":"Model Simulation","title":"Model Simulation","text":"# Compare different model structures\nmodels = [\n    (2, 0, 0),  # Simple telegraph\n    (2, 1, 0),  # With pre-RNA\n    (3, 1, 0),  # Three gene states\n]\n\nfor (G, R, S) in models\n    histogram = simulator(rates, transitions, G, R, S, insertstep)\n    # Analyze and compare histograms\nend","category":"page"},{"location":"api/simulator/#Burst-Analysis","page":"Model Simulation","title":"Burst Analysis","text":"","category":"section"},{"location":"api/simulator/","page":"Model Simulation","title":"Model Simulation","text":"# Simulate for burst size analysis\nhistogram, traces = simulator(\n    rates, transitions, G, R, S, insertstep,\n    traceinterval = 0.1,    # High temporal resolution\n    tspan = (0., 1000.),\n    onstates = [2]          # State 2 is transcriptionally active\n)\n\n# Analyze burst properties from traces","category":"page"},{"location":"api/simulator/#Error-Handling","page":"Model Simulation","title":"Error Handling","text":"","category":"section"},{"location":"api/simulator/","page":"Model Simulation","title":"Model Simulation","text":"The function includes validation for:","category":"page"},{"location":"api/simulator/","page":"Model Simulation","title":"Model Simulation","text":"Rate vector length consistency\nValid state transitions\nProper model dimensions (G, R, S relationships)\nPositive rate values\nValid time spans","category":"page"},{"location":"api/simulator/#See-Also","page":"Model Simulation","title":"See Also","text":"","category":"section"},{"location":"api/simulator/","page":"Model Simulation","title":"Model Simulation","text":"simulate_trace: Generate traces only\nsimulate_trials: Multiple simulation runs\nfit: Fit models to data\nprob_Gaussian: Gaussian observation model","category":"page"},{"location":"api/write_residency_G_folder/#write*residency*G_folder-Function","page":"Write G State Residency","title":"writeresidencyG_folder Function","text":"","category":"section"},{"location":"api/write_residency_G_folder/","page":"Write G State Residency","title":"Write G State Residency","text":"Generate G state residency probabilities for GRSM models.","category":"page"},{"location":"api/write_residency_G_folder/#Syntax","page":"Write G State Residency","title":"Syntax","text":"","category":"section"},{"location":"api/write_residency_G_folder/","page":"Write G State Residency","title":"Write G State Residency","text":"write_residency_G_folder(; kwargs...)","category":"page"},{"location":"api/write_residency_G_folder/#Arguments","page":"Write G State Residency","title":"Arguments","text":"","category":"section"},{"location":"api/write_residency_G_folder/#Model-Parameters","page":"Write G State Residency","title":"Model Parameters","text":"","category":"section"},{"location":"api/write_residency_G_folder/","page":"Write G State Residency","title":"Write G State Residency","text":"G::Int = 2: Number of gene states\nR::Int = 0: Number of pre-RNA steps\nS::Int = 0: Number of splice sites\ninsertstep::Int = 1: Reporter insertion step\ntransitions::Tuple = (): State transitions\nrates::Vector{Float64}: Model rates\nnalleles::Int = 1: Number of alleles","category":"page"},{"location":"api/write_residency_G_folder/#Simulation-Parameters","page":"Write G State Residency","title":"Simulation Parameters","text":"","category":"section"},{"location":"api/write_residency_G_folder/","page":"Write G State Residency","title":"Write G State Residency","text":"ntraces::Int = 1000: Number of traces\ntspan::Tuple{Float64, Float64} = (0., 1000.): Time span for traces\ndt::Float64 = 1.0: Time step\nburnin::Float64 = 0.0: Burn-in time\nsampletime::Float64 = 1.0: Sampling interval","category":"page"},{"location":"api/write_residency_G_folder/#Output-Parameters","page":"Write G State Residency","title":"Output Parameters","text":"","category":"section"},{"location":"api/write_residency_G_folder/","page":"Write G State Residency","title":"Write G State Residency","text":"outfolder::String = \"residency\": Output folder\nlabel::String = \"\": Output file label\nwrite::Bool = true: Write residency data to file\nreturnresidency::Bool = false: Return residency data","category":"page"},{"location":"api/write_residency_G_folder/#Returns","page":"Write G State Residency","title":"Returns","text":"","category":"section"},{"location":"api/write_residency_G_folder/","page":"Write G State Residency","title":"Write G State Residency","text":"residency: Array of residency probabilities for each G state","category":"page"},{"location":"api/write_residency_G_folder/#Examples","page":"Write G State Residency","title":"Examples","text":"","category":"section"},{"location":"api/write_residency_G_folder/","page":"Write G State Residency","title":"Write G State Residency","text":"# Generate residency for a simple G model\nwrite_residency_G_folder(\n    G = 2,\n    R = 0,\n    rates = [0.1, 0.2],  # G1->G2, G2->G1\n    ntraces = 1000,\n    tspan = (0., 1000.),\n    dt = 1.0\n)\n\n# Generate residency for a GR model\nwrite_residency_G_folder(\n    G = 2,\n    R = 3,\n    S = 2,\n    insertstep = 1,\n    rates = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6],\n    ntraces = 5000,\n    tspan = (0., 2000.),\n    dt = 0.5,\n    burnin = 100.0,\n    sampletime = 5.0\n)","category":"page"},{"location":"api/write_residency_G_folder/#Notes","page":"Write G State Residency","title":"Notes","text":"","category":"section"},{"location":"api/write_residency_G_folder/","page":"Write G State Residency","title":"Write G State Residency","text":"Residency Calculation\nTraces are generated using Gillespie algorithm\nResidency is calculated as fraction of time in each G state\nResults are averaged over all traces\nRate Order\nG transitions\nR transitions\nS transitions\nDecay","category":"page"},{"location":"api/load_data/#load_data-Function","page":"Data Loading","title":"load_data Function","text":"","category":"section"},{"location":"api/load_data/","page":"Data Loading","title":"Data Loading","text":"Load experimental data from files into StochasticGene.jl data structures.","category":"page"},{"location":"api/load_data/#Syntax","page":"Data Loading","title":"Syntax","text":"","category":"section"},{"location":"api/load_data/","page":"Data Loading","title":"Data Loading","text":"load_data(datatype, dttype, datapath, label, gene, datacond, traceinfo, temprna, datacol=3, zeromedian=false)","category":"page"},{"location":"api/load_data/#Arguments","page":"Data Loading","title":"Arguments","text":"","category":"section"},{"location":"api/load_data/#Required-Arguments","page":"Data Loading","title":"Required Arguments","text":"","category":"section"},{"location":"api/load_data/","page":"Data Loading","title":"Data Loading","text":"datatype::String: Type of data to load\ndttype::Vector: Dwell time types (for dwell time data)\ndatapath::String: Path to data file(s)\nlabel::String: Label for the dataset\ngene::String: Gene name\ndatacond::String: Experimental condition\ntraceinfo::Tuple: Trace parameters (for trace data)\ntemprna::Int: Temperature scaling factor for RNA data","category":"page"},{"location":"api/load_data/#Optional-Arguments","page":"Data Loading","title":"Optional Arguments","text":"","category":"section"},{"location":"api/load_data/","page":"Data Loading","title":"Data Loading","text":"datacol::Int = 3: Column index for trace data\nzeromedian::Bool = false: Whether to zero-center traces","category":"page"},{"location":"api/load_data/#Supported-Data-Types","page":"Data Loading","title":"Supported Data Types","text":"","category":"section"},{"location":"api/load_data/#RNA-Data-Types","page":"Data Loading","title":"RNA Data Types","text":"","category":"section"},{"location":"api/load_data/#\"rna\"-RNA-Count-Histograms","page":"Data Loading","title":"\"rna\" - RNA Count Histograms","text":"","category":"section"},{"location":"api/load_data/","page":"Data Loading","title":"Data Loading","text":"Load steady-state RNA count distributions from smFISH or scRNA-seq data.","category":"page"},{"location":"api/load_data/","page":"Data Loading","title":"Data Loading","text":"File Format: Text files with RNA count histograms Returns: RNAData structure","category":"page"},{"location":"api/load_data/","page":"Data Loading","title":"Data Loading","text":"# Load RNA histogram data\ndata = load_data(\n    \"rna\",                    # datatype\n    String[],                 # dttype (unused for RNA)\n    \"data/smFISH/\",          # datapath\n    \"control\",               # label\n    \"MYC\",                   # gene\n    \"MOCK\",                  # datacond\n    (),                      # traceinfo (unused for RNA)\n    1                        # temprna\n)","category":"page"},{"location":"api/load_data/#\"rnacount\"-Individual-RNA-Counts","page":"Data Loading","title":"\"rnacount\" - Individual RNA Counts","text":"","category":"section"},{"location":"api/load_data/","page":"Data Loading","title":"Data Loading","text":"Load individual RNA count measurements with yield factors.","category":"page"},{"location":"api/load_data/","page":"Data Loading","title":"Data Loading","text":"File Format: Text files with individual counts and yield factors Returns: RNACountData structure","category":"page"},{"location":"api/load_data/","page":"Data Loading","title":"Data Loading","text":"# Load individual RNA counts\ndata = load_data(\n    \"rnacount\",\n    String[],\n    \"data/single_cell/\",\n    \"experiment1\",\n    \"ACTB\",\n    \"treated\",\n    (),\n    1\n)","category":"page"},{"location":"api/load_data/#\"rnaonoff\"-RNA-ON/OFF-Times","page":"Data Loading","title":"\"rnaonoff\" - RNA + ON/OFF Times","text":"","category":"section"},{"location":"api/load_data/","page":"Data Loading","title":"Data Loading","text":"Load combined RNA counts and ON/OFF state duration data.","category":"page"},{"location":"api/load_data/","page":"Data Loading","title":"Data Loading","text":"File Format: Two files - RNA histogram and ON/OFF times Returns: RNAOnOffData structure","category":"page"},{"location":"api/load_data/","page":"Data Loading","title":"Data Loading","text":"# Load RNA + ON/OFF data\ndata = load_data(\n    \"rnaonoff\",\n    String[],\n    [\"data/rna_hist.txt\", \"data/onoff_times.txt\"],  # Multiple files\n    \"live_cell\",\n    \"SOX2\",\n    \"control\",\n    (),\n    2  # Divide histogram by 2\n)","category":"page"},{"location":"api/load_data/#\"rnadwelltime\"-RNA-Dwell-Times","page":"Data Loading","title":"\"rnadwelltime\" - RNA + Dwell Times","text":"","category":"section"},{"location":"api/load_data/","page":"Data Loading","title":"Data Loading","text":"Load RNA counts with dwell time distributions.","category":"page"},{"location":"api/load_data/","page":"Data Loading","title":"Data Loading","text":"File Format: Multiple files - RNA histogram and dwell time data Returns: RNADwellTimeData structure","category":"page"},{"location":"api/load_data/","page":"Data Loading","title":"Data Loading","text":"# Load RNA + dwell time data\ndata = load_data(\n    \"rnadwelltime\",\n    [\"ON\", \"OFF\"],           # Dwell time types\n    [\"data/rna.txt\", \"data/dwellON.txt\", \"data/dwellOFF.txt\"],\n    \"combined\",\n    \"GENE1\",\n    \"condition1\",\n    (),\n    1\n)","category":"page"},{"location":"api/load_data/#Trace-Data-Types","page":"Data Loading","title":"Trace Data Types","text":"","category":"section"},{"location":"api/load_data/#\"trace\"-Intensity-Traces","page":"Data Loading","title":"\"trace\" - Intensity Traces","text":"","category":"section"},{"location":"api/load_data/","page":"Data Loading","title":"Data Loading","text":"Load fluorescence intensity time series data.","category":"page"},{"location":"api/load_data/","page":"Data Loading","title":"Data Loading","text":"File Format: Text files with intensity traces Returns: TraceData structure","category":"page"},{"location":"api/load_data/","page":"Data Loading","title":"Data Loading","text":"# Load intensity traces\ndata = load_data(\n    \"trace\",\n    String[],\n    \"data/traces/\",\n    \"live_imaging\",\n    \"MYC\",\n    \"control\",\n    (1.0, 1.0, -1, 1.0),    # traceinfo: (interval, start, end, weight)\n    1,\n    3,                       # datacol: use column 3\n    false                    # zeromedian: don't zero-center\n)","category":"page"},{"location":"api/load_data/#\"tracerna\"-Traces-RNA-Histogram","page":"Data Loading","title":"\"tracerna\" - Traces + RNA Histogram","text":"","category":"section"},{"location":"api/load_data/","page":"Data Loading","title":"Data Loading","text":"Load both intensity traces and RNA histogram data.","category":"page"},{"location":"api/load_data/","page":"Data Loading","title":"Data Loading","text":"File Format: Two directories - trace files and RNA histogram Returns: TraceRNAData structure","category":"page"},{"location":"api/load_data/","page":"Data Loading","title":"Data Loading","text":"# Load traces + RNA data\ndata = load_data(\n    \"tracerna\",\n    String[],\n    [\"data/traces/\", \"data/rna/\"],  # Two data paths\n    \"combined_exp\",\n    \"GENE2\",\n    \"treated\",\n    (0.5, 0.0, 100.0, 0.8),        # 0.5 min intervals, 0-100 min, 80% weight\n    1,\n    3,\n    true                            # Zero-center traces\n)","category":"page"},{"location":"api/load_data/#\"tracejoint\"-Simultaneous-Traces","page":"Data Loading","title":"\"tracejoint\" - Simultaneous Traces","text":"","category":"section"},{"location":"api/load_data/","page":"Data Loading","title":"Data Loading","text":"Load traces recorded simultaneously (e.g., different fluorescent channels).","category":"page"},{"location":"api/load_data/","page":"Data Loading","title":"Data Loading","text":"File Format: Multi-column trace files Returns: TraceData structure","category":"page"},{"location":"api/load_data/","page":"Data Loading","title":"Data Loading","text":"# Load joint traces\ndata = load_data(\n    \"tracejoint\",\n    String[],\n    \"data/joint_traces/\",\n    \"dual_channel\",\n    \"GENE_TF\",\n    \"stimulus\",\n    (2.0, 0.0, -1, [0.9, 0.85]),   # Different weights per channel\n    1,\n    [3, 4],                        # Use columns 3 and 4\n    [true, false]                  # Zero-center first channel only\n)","category":"page"},{"location":"api/load_data/#\"tracegrid\"-Grid-Based-Traces","page":"Data Loading","title":"\"tracegrid\" - Grid-Based Traces","text":"","category":"section"},{"location":"api/load_data/","page":"Data Loading","title":"Data Loading","text":"Load traces for grid-based parameter exploration.","category":"page"},{"location":"api/load_data/","page":"Data Loading","title":"Data Loading","text":"File Format: Structured trace files Returns: TraceData structure","category":"page"},{"location":"api/load_data/","page":"Data Loading","title":"Data Loading","text":"# Load grid traces\ndata = load_data(\n    \"tracegrid\",\n    String[],\n    \"data/grid_traces/\",\n    \"parameter_grid\",\n    \"TARGET\",\n    \"sweep\",\n    (1.0, 0.0, 50.0, 1.0),\n    1\n)","category":"page"},{"location":"api/load_data/#Dwell-Time-Data","page":"Data Loading","title":"Dwell Time Data","text":"","category":"section"},{"location":"api/load_data/#\"dwelltime\"-Dwell-Time-Distributions-Only","page":"Data Loading","title":"\"dwelltime\" - Dwell Time Distributions Only","text":"","category":"section"},{"location":"api/load_data/","page":"Data Loading","title":"Data Loading","text":"Load dwell time distributions without RNA data.","category":"page"},{"location":"api/load_data/","page":"Data Loading","title":"Data Loading","text":"File Format: Text files with dwell time histograms Returns: DwellTimeData structure","category":"page"},{"location":"api/load_data/","page":"Data Loading","title":"Data Loading","text":"# Load dwell time data\ndata = load_data(\n    \"dwelltime\",\n    [\"ON\", \"OFF\", \"BURST\"],\n    [\"data/dwell_ON.txt\", \"data/dwell_OFF.txt\", \"data/dwell_BURST.txt\"],\n    \"dwell_analysis\",\n    \"GENE3\",\n    \"control\",\n    (),\n    1\n)","category":"page"},{"location":"api/load_data/#Trace-Parameters-(traceinfo)","page":"Data Loading","title":"Trace Parameters (traceinfo)","text":"","category":"section"},{"location":"api/load_data/","page":"Data Loading","title":"Data Loading","text":"For trace data types, the traceinfo tuple contains:","category":"page"},{"location":"api/load_data/","page":"Data Loading","title":"Data Loading","text":"interval (Float64): Time interval between frames (minutes)\nstart (Float64): Start time or frame number\nend (Float64): End time or frame number (-1 for last frame)\nweight (Float64 or Vector{Float64}): Fraction of active traces or per-channel weights\nbackground (Vector or Vector{Vector}, optional): Background values per trace","category":"page"},{"location":"api/load_data/","page":"Data Loading","title":"Data Loading","text":"# Basic trace info\ntraceinfo = (1.0, 1.0, -1, 1.0)  # 1 min intervals, frame 1 to end, 100% weight\n\n# Multi-channel with backgrounds\ntraceinfo = (\n    0.5,                    # 30 second intervals\n    0.0,                    # Start at time 0\n    100.0,                  # End at 100 minutes\n    [0.8, 0.9],            # 80% weight channel 1, 90% channel 2\n    [[10.0, 15.0], [5.0, 8.0]]  # Background per channel per trace\n)","category":"page"},{"location":"api/load_data/#File-Formats","page":"Data Loading","title":"File Formats","text":"","category":"section"},{"location":"api/load_data/#RNA-Histogram-Files","page":"Data Loading","title":"RNA Histogram Files","text":"","category":"section"},{"location":"api/load_data/","page":"Data Loading","title":"Data Loading","text":"# RNA count histogram\n# Count  Frequency\n0       150\n1       200\n2       180\n3       120\n4       80\n...","category":"page"},{"location":"api/load_data/#Trace-Files","page":"Data Loading","title":"Trace Files","text":"","category":"section"},{"location":"api/load_data/","page":"Data Loading","title":"Data Loading","text":"# Intensity trace data\n# Time   Background   Intensity   State\n0.0     10.0         25.3        1\n1.0     10.2         28.1        1\n2.0     9.8          24.5        1\n3.0     10.1         45.2        2\n...","category":"page"},{"location":"api/load_data/#Dwell-Time-Files","page":"Data Loading","title":"Dwell Time Files","text":"","category":"section"},{"location":"api/load_data/","page":"Data Loading","title":"Data Loading","text":"# Dwell time histogram\n# Time_bin   Count\n0.5         25\n1.0         40\n1.5         35\n2.0         30\n...","category":"page"},{"location":"api/load_data/#Examples","page":"Data Loading","title":"Examples","text":"","category":"section"},{"location":"api/load_data/#Complete-RNA-Analysis-Workflow","page":"Data Loading","title":"Complete RNA Analysis Workflow","text":"","category":"section"},{"location":"api/load_data/","page":"Data Loading","title":"Data Loading","text":"using StochasticGene\n\n# Load RNA data\nrna_data = load_data(\n    \"rna\",\n    String[],\n    \"data/HCT116_smFISH/\",\n    \"HCT116_control\",\n    \"MYC\",\n    \"MOCK\",\n    (),\n    1\n)\n\n# Display data properties\nprintln(\"Gene: \", rna_data.gene)\nprintln(\"RNA range: \", length(rna_data.histRNA))\nprintln(\"Total counts: \", sum(rna_data.histRNA))","category":"page"},{"location":"api/load_data/#Multi-Modal-Data-Loading","page":"Data Loading","title":"Multi-Modal Data Loading","text":"","category":"section"},{"location":"api/load_data/","page":"Data Loading","title":"Data Loading","text":"# Load combined RNA and trace data\ncombined_data = load_data(\n    \"tracerna\",\n    String[],\n    [\"data/traces/MYC_traces/\", \"data/rna/MYC_histogram.txt\"],\n    \"multimodal\",\n    \"MYC\",\n    \"control\",\n    (1.0, 0.0, 120.0, 0.85),\n    1,\n    3,\n    true\n)\n\n# Access both data types\ntraces = combined_data.trace\nrna_hist = combined_data.histRNA","category":"page"},{"location":"api/load_data/#Hierarchical-Data-Loading","page":"Data Loading","title":"Hierarchical Data Loading","text":"","category":"section"},{"location":"api/load_data/","page":"Data Loading","title":"Data Loading","text":"# Load multiple conditions for hierarchical analysis\nconditions = [\"control\", \"treated1\", \"treated2\"]\nall_data = []\n\nfor cond in conditions\n    data = load_data(\n        \"trace\",\n        String[],\n        \"data/traces/\",\n        \"hierarchical_$cond\",\n        \"SOX2\",\n        cond,\n        (0.5, 0.0, 60.0, 0.9),\n        1,\n        3,\n        true\n    )\n    push!(all_data, data)\nend","category":"page"},{"location":"api/load_data/#Custom-Data-Processing","page":"Data Loading","title":"Custom Data Processing","text":"","category":"section"},{"location":"api/load_data/","page":"Data Loading","title":"Data Loading","text":"# Load with custom processing\nfunction custom_load_processing(datapath, gene, condition)\n    # Custom preprocessing logic\n    raw_data = load_data(\n        \"trace\",\n        String[],\n        datapath,\n        \"custom_$condition\",\n        gene,\n        condition,\n        (2.0, 5.0, 100.0, 0.95),\n        1,\n        3,\n        true\n    )\n    \n    # Additional processing\n    processed_traces = []\n    for trace in raw_data.trace[1]\n        # Apply custom filtering, normalization, etc.\n        filtered_trace = smooth_trace(trace)\n        push!(processed_traces, filtered_trace)\n    end\n    \n    return raw_data, processed_traces\nend","category":"page"},{"location":"api/load_data/#Error-Handling","page":"Data Loading","title":"Error Handling","text":"","category":"section"},{"location":"api/load_data/","page":"Data Loading","title":"Data Loading","text":"The function includes comprehensive error checking:","category":"page"},{"location":"api/load_data/","page":"Data Loading","title":"Data Loading","text":"# Invalid data type\ntry\n    data = load_data(\"invalid_type\", ...)\ncatch ArgumentError as e\n    println(\"Error: \", e.msg)\nend\n\n# Missing files\ntry\n    data = load_data(\"rna\", String[], \"nonexistent/path/\", ...)\ncatch SystemError as e\n    println(\"File error: \", e.msg)\nend\n\n# Inconsistent trace info\ntry\n    data = load_data(\"trace\", String[], path, label, gene, cond, \n                    (1.0, 100.0, 50.0, 1.0), ...)  # end < start\ncatch ArgumentError as e\n    println(\"Invalid trace parameters: \", e.msg)\nend","category":"page"},{"location":"api/load_data/#Performance-Considerations","page":"Data Loading","title":"Performance Considerations","text":"","category":"section"},{"location":"api/load_data/","page":"Data Loading","title":"Data Loading","text":"Large Files: Use appropriate data types for memory efficiency\nMultiple Files: Consider loading in batches for very large datasets\nTrace Data: Zero-centering can reduce memory usage for fitting\nFile Formats: CSV files are slower than tab-delimited files","category":"page"},{"location":"api/load_data/#Data-Validation","page":"Data Loading","title":"Data Validation","text":"","category":"section"},{"location":"api/load_data/","page":"Data Loading","title":"Data Loading","text":"The function validates:","category":"page"},{"location":"api/load_data/","page":"Data Loading","title":"Data Loading","text":"File existence and readability\nData format consistency\nParameter compatibility\nTrace parameter validity\nColumn specifications for trace data","category":"page"},{"location":"api/load_data/#See-Also","page":"Data Loading","title":"See Also","text":"","category":"section"},{"location":"api/load_data/","page":"Data Loading","title":"Data Loading","text":"RNAData: RNA data structure\nTraceData: Trace data structure\nfit: Model fitting function\nsimulator: Data simulation function\nwrite_dataframes: Write data to files","category":"page"},{"location":"getting_started/#Getting-Started","page":"Getting Started","title":"Getting Started","text":"","category":"section"},{"location":"getting_started/#Folder-Structure","page":"Getting Started","title":"Folder Structure","text":"","category":"section"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"StochasticGene expects a specific directory structure for data and results:","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"project_root/\n├── data/\n│   ├── alleles/      # Contains allele count information\n│   └── halflives/    # Contains mRNA half-life information\n└── results/          # Output directory for analysis results","category":"page"},{"location":"getting_started/#Setting-Up","page":"Getting Started","title":"Setting Up","text":"","category":"section"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"Use the built-in helper to set up a new project folder with the required data structure and reference files:","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"using StochasticGene\nrna_setup()           # Sets up folders in the current directory\n# or, to set up in a subfolder:\nrna_setup(\"scRNA\")    # Sets up folders in ./scRNA\ncd(\"scRNA\")           # Move into the project directory (if you want to work there)","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"This will create the necessary folders and download reference CSV files for alleles and halflives. It does not generate arbitrary mock data, but provides the standard structure and example reference files needed to get started.","category":"page"},{"location":"getting_started/#Data-Preparation","page":"Getting Started","title":"Data Preparation","text":"","category":"section"},{"location":"getting_started/#RNA-Count-Data","page":"Getting Started","title":"RNA Count Data","text":"","category":"section"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"RNA count data should be provided as a text file with the following format:","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"# gene_condition.txt\ncount1\ncount2\ncount3\n...","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"The data will be loaded into an RNAData structure with the following fields:","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"histRNA: Vector of RNA counts\ngene: Gene name\ncondition: Experimental condition\nnalleles: Number of alleles","category":"page"},{"location":"getting_started/#Live-Cell-Imaging-Data","page":"Getting Started","title":"Live Cell Imaging Data","text":"","category":"section"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"For live cell imaging data, provide a text file with time series data:","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"# gene_condition.txt\ntime1 intensity1\ntime2 intensity2\ntime3 intensity3\n...","category":"page"},{"location":"getting_started/#Fitting-a-Model","page":"Getting Started","title":"Fitting a Model","text":"","category":"section"},{"location":"getting_started/#Basic-Two-State-Model","page":"Getting Started","title":"Basic Two-State Model","text":"","category":"section"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"Fit a simple two-state model to RNA count data:","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"fits = fit(\n    G = 2,                    # Two gene states\n    R = 0,                    # No pre-RNA steps\n    transitions = ([1,2], [2,1]),  # Transitions between states\n    datatype = \"rna\",         # RNA count data\n    datapath = \"data/HCT116_testdata/\",\n    gene = \"MYC\",            # Gene name\n    datacond = \"MOCK\"        # Experimental condition\n)","category":"page"},{"location":"getting_started/#Model-with-Pre-RNA-Steps","page":"Getting Started","title":"Model with Pre-RNA Steps","text":"","category":"section"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"Fit a model with pre-RNA processing steps:","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"fits = fit(\n    G = 2,                    # Two gene states\n    R = 3,                    # Three pre-RNA steps\n    S = 2,                    # Two splice sites\n    insertstep = 1,           # Reporter insertion at step 1\n    transitions = ([1,2], [2,1]),  # Gene state transitions\n    datatype = \"trace\",       # Live cell imaging data\n    datapath = \"data/testtraces\",\n    gene = \"MS2\",            # Gene name\n    datacond = \"testtrace\",   # Experimental condition\n    traceinfo = (1.0, 1., -1, 1.),  # Frame interval, start, end, active fraction\n    noisepriors = [40., 20., 200., 10.],  # Noise parameters\n    nchains = 4              # Number of MCMC chains\n)","category":"page"},{"location":"getting_started/#Model-Components","page":"Getting Started","title":"Model Components","text":"","category":"section"},{"location":"getting_started/#Gene-States-(G)","page":"Getting Started","title":"Gene States (G)","text":"","category":"section"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"Arbitrary number of gene states\nUser-specified transitions between states\nOne active state for transcription initiation\nExample transitions:\nTwo-state: ([1,2], [2,1]) (telegraph model)\nThree-state: ([1,2], [2,1], [2,3], [3,1]) (cyclic model)","category":"page"},{"location":"getting_started/#Pre-RNA-Steps-(R)","page":"Getting Started","title":"Pre-RNA Steps (R)","text":"","category":"section"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"Irreversible forward transitions\nmRNA ejection from final R step\nOptional reporter insertion step\nExample: R=3 with reporter at step 1:\nR = 3\ninsertstep = 1","category":"page"},{"location":"getting_started/#Splicing-(S)","page":"Getting Started","title":"Splicing (S)","text":"","category":"section"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"Up to R splice sites\nPreRNA with or without spliced intron\nMultiple configurations per R step\nExample: S=2 with R=3:\nR = 3\nS = 2","category":"page"},{"location":"getting_started/#Model-Types","page":"Getting Started","title":"Model Types","text":"","category":"section"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"StochasticGene supports several model types:","category":"page"},{"location":"getting_started/#G-Models-(Telegraph-Models)","page":"Getting Started","title":"G Models (Telegraph Models)","text":"","category":"section"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"Basic two-state model\nMultiple gene states\nExample:\nG = 2\nR = 0\ntransitions = ([1,2], [2,1])","category":"page"},{"location":"getting_started/#GR-Models-(with-Pre-RNA-Steps)","page":"Getting Started","title":"GR Models (with Pre-RNA Steps)","text":"","category":"section"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"Gene states plus pre-RNA processing\nExample:\nG = 2\nR = 3\ntransitions = ([1,2], [2,1])","category":"page"},{"location":"getting_started/#GRS-Models-(with-Splicing)","page":"Getting Started","title":"GRS Models (with Splicing)","text":"","category":"section"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"Gene states, pre-RNA steps, and splicing\nExample:\nG = 2\nR = 3\nS = 2\ninsertstep = 1","category":"page"},{"location":"getting_started/#Coupled-Models-(Multiple-Alleles)","page":"Getting Started","title":"Coupled Models (Multiple Alleles)","text":"","category":"section"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"Multiple alleles with coupling\nExample:\nG = (2,2)  # Two alleles, each with 2 states\nR = (3,3)  # Three pre-RNA steps for each\ncoupling = (\n    (1,1),  # Model indices\n    ([2], [1]),  # Source units\n    ([\"G2\"], [\"G1\"]),  # Source states\n    ([2], [1])  # Target transitions\n)","category":"page"},{"location":"getting_started/#Data-Types","page":"Getting Started","title":"Data Types","text":"","category":"section"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"The package can handle:","category":"page"},{"location":"getting_started/#RNA-Count-Data-2","page":"Getting Started","title":"RNA Count Data","text":"","category":"section"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"Single molecule FISH (smFISH)\nSingle cell RNA sequencing (scRNA-seq)\nExample:\ndatatype = \"rna\"\ndatapath = \"data/rna_counts/\"","category":"page"},{"location":"getting_started/#Live-Cell-Imaging","page":"Getting Started","title":"Live Cell Imaging","text":"","category":"section"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"MS2 reporter data\nPP7 reporter data\nExample:\ndatatype = \"trace\"\ndatapath = \"data/ms2_traces/\"\ntraceinfo = (1.0, 1., -1, 1.)  # Frame interval, start, end, active fraction","category":"page"},{"location":"getting_started/#Dwell-Time-Analysis","page":"Getting Started","title":"Dwell Time Analysis","text":"","category":"section"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"ON/OFF state durations\nExample:\ndatatype = \"dwelltime\"\ndatapath = \"data/dwell_times/\"","category":"page"},{"location":"getting_started/#Combined-Data","page":"Getting Started","title":"Combined Data","text":"","category":"section"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"RNA counts with dwell times\nExample:\ndatatype = \"rnadwelltime\"\ndatapath = [\"data/rna_counts/\", \"data/dwell_times/\"]","category":"page"},{"location":"getting_started/#Next-Steps","page":"Getting Started","title":"Next Steps","text":"","category":"section"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"Check the Examples section for more complex usage scenarios\nRead the API Reference for detailed function documentation\nJoin the GitHub discussions for community support","category":"page"},{"location":"examples/basic_telegraph/#Basic-Telegraph-Model","page":"Basic Telegraph Model","title":"Basic Telegraph Model","text":"","category":"section"},{"location":"examples/basic_telegraph/","page":"Basic Telegraph Model","title":"Basic Telegraph Model","text":"This example demonstrates how to fit a simple two-state telegraph model to RNA count data.","category":"page"},{"location":"examples/basic_telegraph/#Setup","page":"Basic Telegraph Model","title":"Setup","text":"","category":"section"},{"location":"examples/basic_telegraph/","page":"Basic Telegraph Model","title":"Basic Telegraph Model","text":"First, let's set up our project directory and load the package:","category":"page"},{"location":"examples/basic_telegraph/","page":"Basic Telegraph Model","title":"Basic Telegraph Model","text":"using StochasticGene\n\n# Create project directory\nrna_setup(\"telegraph_example\")\ncd(\"telegraph_example\")","category":"page"},{"location":"examples/basic_telegraph/#Data-Preparation","page":"Basic Telegraph Model","title":"Data Preparation","text":"","category":"section"},{"location":"examples/basic_telegraph/","page":"Basic Telegraph Model","title":"Basic Telegraph Model","text":"Place your RNA count data in the data/ directory. The data should be in a format compatible with the package (see Data Types for details).","category":"page"},{"location":"examples/basic_telegraph/#Model-Definition","page":"Basic Telegraph Model","title":"Model Definition","text":"","category":"section"},{"location":"examples/basic_telegraph/","page":"Basic Telegraph Model","title":"Basic Telegraph Model","text":"We'll fit a basic two-state telegraph model with:","category":"page"},{"location":"examples/basic_telegraph/","page":"Basic Telegraph Model","title":"Basic Telegraph Model","text":"2 gene states (G=2)\nNo pre-RNA steps (R=0)\nSimple transitions between states","category":"page"},{"location":"examples/basic_telegraph/","page":"Basic Telegraph Model","title":"Basic Telegraph Model","text":"# Define model parameters\nG = 2  # Number of gene states\nR = 0  # Number of pre-RNA steps\ntransitions = ([1,2], [2,1])  # Gene state transitions","category":"page"},{"location":"examples/basic_telegraph/#Fitting-the-Model","page":"Basic Telegraph Model","title":"Fitting the Model","text":"","category":"section"},{"location":"examples/basic_telegraph/","page":"Basic Telegraph Model","title":"Basic Telegraph Model","text":"Now we can fit the model to our data:","category":"page"},{"location":"examples/basic_telegraph/","page":"Basic Telegraph Model","title":"Basic Telegraph Model","text":"# Fit the model\nfits, stats, measures, data, model, options = fit(\n    G = G,\n    R = R,\n    transitions = transitions,\n    datatype = \"rna\",\n    datapath = \"data/\",\n    gene = \"MYC\",\n    datacond = \"CONTROL\"\n)","category":"page"},{"location":"examples/basic_telegraph/#Analyzing-Results","page":"Basic Telegraph Model","title":"Analyzing Results","text":"","category":"section"},{"location":"examples/basic_telegraph/","page":"Basic Telegraph Model","title":"Basic Telegraph Model","text":"Let's examine the fitting results:","category":"page"},{"location":"examples/basic_telegraph/","page":"Basic Telegraph Model","title":"Basic Telegraph Model","text":"# Print basic statistics\nprintln(stats)\n\n# Plot the results\nusing Plots\nplot(fits)\n\n# Save results\nsave_results(fits, \"results/\")","category":"page"},{"location":"examples/basic_telegraph/#Model-Interpretation","page":"Basic Telegraph Model","title":"Model Interpretation","text":"","category":"section"},{"location":"examples/basic_telegraph/","page":"Basic Telegraph Model","title":"Basic Telegraph Model","text":"The fitted model provides:","category":"page"},{"location":"examples/basic_telegraph/","page":"Basic Telegraph Model","title":"Basic Telegraph Model","text":"Transition rates between gene states\nTranscription rates\nmRNA degradation rates\nModel likelihood and fit statistics","category":"page"},{"location":"examples/basic_telegraph/#Next-Steps","page":"Basic Telegraph Model","title":"Next Steps","text":"","category":"section"},{"location":"examples/basic_telegraph/","page":"Basic Telegraph Model","title":"Basic Telegraph Model","text":"Try fitting more complex models with pre-RNA steps\nExperiment with different data conditions\nCompare results across different genes","category":"page"},{"location":"examples/basic_telegraph/","page":"Basic Telegraph Model","title":"Basic Telegraph Model","text":"For more advanced examples, see:","category":"page"},{"location":"examples/basic_telegraph/","page":"Basic Telegraph Model","title":"Basic Telegraph Model","text":"Multi-State Model\nPre-RNA Steps\nCoupled Models ","category":"page"},{"location":"examples/coupled_models/#Coupled-Model-Analysis","page":"Coupled Model Analysis","title":"Coupled Model Analysis","text":"","category":"section"},{"location":"examples/coupled_models/","page":"Coupled Model Analysis","title":"Coupled Model Analysis","text":"This example demonstrates how to analyze coupled models of gene expression, where multiple genes interact with each other.","category":"page"},{"location":"examples/coupled_models/#Setup","page":"Coupled Model Analysis","title":"Setup","text":"","category":"section"},{"location":"examples/coupled_models/","page":"Coupled Model Analysis","title":"Coupled Model Analysis","text":"First, let's set up our project directory and load the package:","category":"page"},{"location":"examples/coupled_models/","page":"Coupled Model Analysis","title":"Coupled Model Analysis","text":"using StochasticGene\n\n# Create project directory\nmkdir(\"coupled_example\")\ncd(\"coupled_example\")\n\n# Generate example data using test_fit_tracejoint\nfitted_rates, target_rates = test_fit_tracejoint(\n    coupling=Dict(\"gene1\" => \"gene2\"),  # Coupling between genes\n    G=2,                             # 2 gene states\n    R=2,                             # 2 RNA states\n    S=2,                             # 2 splicing states\n    transitions=([1, 2], [2, 1]),    # Simple two-state model\n    rtarget=[0.33, 0.19, 2.5, 1.0],  # Target rates for simulation\n    totaltime=1000,                  # Total simulation time\n    ntrials=10,                      # Number of simulation trials\n    fittedparam=[1, 2, 3],          # Parameters to fit\n    nchains=1                        # Single MCMC chain for example\n)\n\n# Print results\nprintln(\"Fitted rates: \", fitted_rates)\nprintln(\"Target rates: \", target_rates)","category":"page"},{"location":"examples/coupled_models/#Data-Preparation","page":"Coupled Model Analysis","title":"Data Preparation","text":"","category":"section"},{"location":"examples/coupled_models/","page":"Coupled Model Analysis","title":"Coupled Model Analysis","text":"Place your data in the data/ directory. The data should be organized as follows:","category":"page"},{"location":"examples/coupled_models/","page":"Coupled Model Analysis","title":"Coupled Model Analysis","text":"data/\n├── gene1/\n│   ├── condition1/\n│   │   ├── data.csv\n│   │   └── metadata.csv\n│   └── condition2/\n│       ├── data.csv\n│       └── metadata.csv\n└── gene2/\n    ├── condition1/\n    │   ├── data.csv\n    │   └── metadata.csv\n    └── condition2/\n        ├── data.csv\n        └── metadata.csv","category":"page"},{"location":"examples/coupled_models/#Model-Definition","page":"Coupled Model Analysis","title":"Model Definition","text":"","category":"section"},{"location":"examples/coupled_models/","page":"Coupled Model Analysis","title":"Coupled Model Analysis","text":"We'll fit a coupled model with:","category":"page"},{"location":"examples/coupled_models/","page":"Coupled Model Analysis","title":"Coupled Model Analysis","text":"Two genes, each with 2 states (G=2)\nNo pre-RNA steps (R=0)\nSimple transitions between states\nCoupling between genes","category":"page"},{"location":"examples/coupled_models/","page":"Coupled Model Analysis","title":"Coupled Model Analysis","text":"# Define model parameters\nG = (2, 2)  # Number of gene states for each gene\nR = (0, 0)  # Number of pre-RNA steps for each gene\n\n# Define state transitions\n# Format: ((from_states_gene1, to_states_gene1), (from_states_gene2, to_states_gene2))\ntransitions = (\n    ([1, 2], [2, 1]),  # Gene 1 transitions\n    ([1, 2], [2, 1])   # Gene 2 transitions\n)\n\n# Define transcription rates for each state\ntranscription_rates = (\n    [0.0, 1.0],  # Gene 1 rates\n    [0.0, 1.0]   # Gene 2 rates\n)\n\n# Define coupling structure\ncoupling = (\n    (1, 2),           # Coupled genes\n    (Int[], [1]),     # Coupling directions\n    [2, 0],           # Coupling strengths\n    [0, 2],           # Coupling effects\n    1                 # Coupling type\n)","category":"page"},{"location":"examples/coupled_models/#Fitting-the-Model","page":"Coupled Model Analysis","title":"Fitting the Model","text":"","category":"section"},{"location":"examples/coupled_models/","page":"Coupled Model Analysis","title":"Coupled Model Analysis","text":"Now we can fit the coupled model to our data:","category":"page"},{"location":"examples/coupled_models/","page":"Coupled Model Analysis","title":"Coupled Model Analysis","text":"# Fit the model\nfits, stats, measures, data, model, options = fit(\n    G = G,\n    R = R,\n    transitions = transitions,\n    transcription_rates = transcription_rates,\n    datatype = \"coupled\",\n    datapath = \"data/\",\n    genes = (\"MYC\", \"FOS\"),\n    datacond = \"CONTROL\",\n    coupling = coupling\n)","category":"page"},{"location":"examples/coupled_models/#Analyzing-Results","page":"Coupled Model Analysis","title":"Analyzing Results","text":"","category":"section"},{"location":"examples/coupled_models/#Basic-Analysis","page":"Coupled Model Analysis","title":"Basic Analysis","text":"","category":"section"},{"location":"examples/coupled_models/","page":"Coupled Model Analysis","title":"Coupled Model Analysis","text":"# Print basic statistics\nprintln(stats)\n\n# Plot the results\nusing Plots\nplot(fits)\n\n# Save results\nsave_results(fits, \"results/\")","category":"page"},{"location":"examples/coupled_models/#Gene-Specific-Analysis","page":"Coupled Model Analysis","title":"Gene-Specific Analysis","text":"","category":"section"},{"location":"examples/coupled_models/","page":"Coupled Model Analysis","title":"Coupled Model Analysis","text":"# Analyze first gene\ngene1_analysis = analyze_gene(fits, 1)\nplot_gene(gene1_analysis, \"results/gene1/\")\n\n# Analyze second gene\ngene2_analysis = analyze_gene(fits, 2)\nplot_gene(gene2_analysis, \"results/gene2/\")","category":"page"},{"location":"examples/coupled_models/#Coupling-Analysis","page":"Coupled Model Analysis","title":"Coupling Analysis","text":"","category":"section"},{"location":"examples/coupled_models/","page":"Coupled Model Analysis","title":"Coupled Model Analysis","text":"# Analyze coupling strength\ncoupling_strength = analyze_coupling_strength(fits)\nplot_coupling_strength(coupling_strength, \"results/coupling/\")\n\n# Calculate coupling effects\ncoupling_effects = calculate_coupling_effects(fits)\nplot_coupling_effects(coupling_effects, \"results/coupling_effects/\")","category":"page"},{"location":"examples/coupled_models/#Advanced-Analysis","page":"Coupled Model Analysis","title":"Advanced Analysis","text":"","category":"section"},{"location":"examples/coupled_models/#Time-Series-Analysis","page":"Coupled Model Analysis","title":"Time Series Analysis","text":"","category":"section"},{"location":"examples/coupled_models/","page":"Coupled Model Analysis","title":"Coupled Model Analysis","text":"# Analyze time series\ntime_series = analyze_time_series(fits)\nplot_time_series(time_series, \"results/time_series/\")\n\n# Calculate cross-correlation\ncross_corr = calculate_cross_correlation(fits)\nplot_cross_correlation(cross_corr, \"results/cross_correlation/\")","category":"page"},{"location":"examples/coupled_models/#Model-Comparison","page":"Coupled Model Analysis","title":"Model Comparison","text":"","category":"section"},{"location":"examples/coupled_models/","page":"Coupled Model Analysis","title":"Coupled Model Analysis","text":"# Compare different coupling configurations\nconfigurations = [\n    (coupling=((1, 2), (Int[], [1]), [2, 0], [0, 2], 1), name=\"Strong coupling\"),\n    (coupling=((1, 2), (Int[], [1]), [1, 0], [0, 1], 1), name=\"Weak coupling\"),\n    (coupling=((1, 2), (Int[], Int[]), [0, 0], [0, 0], 1), name=\"No coupling\")\n]\n\nconfig_fits = []\nfor (coupling, name) in configurations\n    fits, stats, measures, data, model, options = fit(\n        G = G,\n        R = R,\n        transitions = transitions,\n        transcription_rates = transcription_rates,\n        datatype = \"coupled\",\n        datapath = \"data/\",\n        genes = (\"MYC\", \"FOS\"),\n        datacond = \"CONTROL\",\n        coupling = coupling\n    )\n    push!(config_fits, (fits, stats, name))\nend\n\n# Compare configurations\ncompare_configurations(config_fits, \"results/config_comparison/\")","category":"page"},{"location":"examples/coupled_models/#Best-Practices","page":"Coupled Model Analysis","title":"Best Practices","text":"","category":"section"},{"location":"examples/coupled_models/","page":"Coupled Model Analysis","title":"Coupled Model Analysis","text":"Model Selection\nStart with simple coupling\nUse model selection criteria\nValidate coupling assumptions\nParameter Estimation\nCheck parameter identifiability\nVerify convergence\nConsider parameter correlations\nInterpretation\nRelate coupling to biological mechanisms\nConsider experimental validation\nDocument assumptions","category":"page"},{"location":"examples/coupled_models/#Common-Issues-and-Solutions","page":"Coupled Model Analysis","title":"Common Issues and Solutions","text":"","category":"section"},{"location":"examples/coupled_models/#Parameter-Identifiability","page":"Coupled Model Analysis","title":"Parameter Identifiability","text":"","category":"section"},{"location":"examples/coupled_models/","page":"Coupled Model Analysis","title":"Coupled Model Analysis","text":"# Check parameter identifiability\nidentifiability = check_identifiability(fits)\nplot_identifiability(identifiability, \"results/identifiability/\")","category":"page"},{"location":"examples/coupled_models/#Convergence","page":"Coupled Model Analysis","title":"Convergence","text":"","category":"section"},{"location":"examples/coupled_models/","page":"Coupled Model Analysis","title":"Coupled Model Analysis","text":"# Check model convergence\nconvergence = check_convergence(fits)\nplot_convergence(convergence, \"results/convergence/\")\n\n# Analyze parameter correlations\ncorrelations = analyze_parameter_correlations(fits)\nplot_parameter_correlations(correlations, \"results/parameter_correlations/\")","category":"page"},{"location":"examples/coupled_models/#Next-Steps","page":"Coupled Model Analysis","title":"Next Steps","text":"","category":"section"},{"location":"examples/coupled_models/","page":"Coupled Model Analysis","title":"Coupled Model Analysis","text":"Try different coupling configurations\nExperiment with parameter priors\nCompare results across different gene pairs","category":"page"},{"location":"examples/coupled_models/","page":"Coupled Model Analysis","title":"Coupled Model Analysis","text":"For more advanced examples, see:","category":"page"},{"location":"examples/coupled_models/","page":"Coupled Model Analysis","title":"Coupled Model Analysis","text":"Hierarchical Models\nJoint Analysis\nTime Series Analysis ","category":"page"},{"location":"examples/rna_onoff/#RNA-On-Off-Analysis","page":"RNA On-Off Analysis","title":"RNA On-Off Analysis","text":"","category":"section"},{"location":"examples/rna_onoff/","page":"RNA On-Off Analysis","title":"RNA On-Off Analysis","text":"This example demonstrates how to analyze RNA data with explicit on-off states.","category":"page"},{"location":"examples/rna_onoff/#Setup","page":"RNA On-Off Analysis","title":"Setup","text":"","category":"section"},{"location":"examples/rna_onoff/","page":"RNA On-Off Analysis","title":"RNA On-Off Analysis","text":"First, let's set up our project directory and load the package:","category":"page"},{"location":"examples/rna_onoff/","page":"RNA On-Off Analysis","title":"RNA On-Off Analysis","text":"using StochasticGene\n\n# Create project directory\nmkdir(\"onoff_example\")\ncd(\"onoff_example\")\n\n# Generate example data using test_fit_rnaonoff\npredicted_hist, data_hist = test_fit_rnaonoff(\n    G=2,                             # 2 gene states\n    R=2,                             # 2 RNA states\n    S=2,                             # 2 splicing states\n    transitions=([1, 2], [2, 1]),    # Simple two-state model\n    rtarget=[0.33, 0.19, 2.5, 1.0],  # Target rates for simulation\n    nhist=100,                       # Number of histograms\n    nalleles=2,                      # Number of alleles\n    fittedparam=[1, 2, 3],          # Parameters to fit\n    nchains=1                        # Single MCMC chain for example\n)\n\n# Print results\nprintln(\"Predicted histogram: \", predicted_hist)\nprintln(\"Data histogram: \", data_hist)","category":"page"},{"location":"examples/rna_onoff/#Data-Preparation","page":"RNA On-Off Analysis","title":"Data Preparation","text":"","category":"section"},{"location":"examples/rna_onoff/","page":"RNA On-Off Analysis","title":"RNA On-Off Analysis","text":"Place your RNA count data in the data/ directory. The data should be organized as follows:","category":"page"},{"location":"examples/rna_onoff/","page":"RNA On-Off Analysis","title":"RNA On-Off Analysis","text":"data/\n├── gene_name/\n│   ├── condition1/\n│   │   ├── counts.csv\n│   │   └── metadata.csv\n│   └── condition2/\n│       ├── counts.csv\n│       └── metadata.csv","category":"page"},{"location":"examples/rna_onoff/#Model-Definition","page":"RNA On-Off Analysis","title":"Model Definition","text":"","category":"section"},{"location":"examples/rna_onoff/","page":"RNA On-Off Analysis","title":"RNA On-Off Analysis","text":"We'll fit a model with:","category":"page"},{"location":"examples/rna_onoff/","page":"RNA On-Off Analysis","title":"RNA On-Off Analysis","text":"2 gene states (G=2) - ON and OFF\nNo pre-RNA steps (R=0)\nSimple transitions between states","category":"page"},{"location":"examples/rna_onoff/","page":"RNA On-Off Analysis","title":"RNA On-Off Analysis","text":"# Define model parameters\nG = 2  # Number of gene states (ON and OFF)\nR = 0  # Number of pre-RNA steps\n\n# Define state transitions\n# Format: (from_states, to_states)\ntransitions = (\n    [1, 2],  # From states\n    [2, 1]   # To states\n)\n\n# Define transcription rates for each state\ntranscription_rates = [0.0, 1.0]  # No transcription in OFF state","category":"page"},{"location":"examples/rna_onoff/#Fitting-the-Model","page":"RNA On-Off Analysis","title":"Fitting the Model","text":"","category":"section"},{"location":"examples/rna_onoff/","page":"RNA On-Off Analysis","title":"RNA On-Off Analysis","text":"Now we can fit the model to our RNA count data:","category":"page"},{"location":"examples/rna_onoff/","page":"RNA On-Off Analysis","title":"RNA On-Off Analysis","text":"# Fit the model\nfits, stats, measures, data, model, options = fit(\n    G = G,\n    R = R,\n    transitions = transitions,\n    transcription_rates = transcription_rates,\n    datatype = \"rna\",\n    datapath = \"data/\",\n    gene = \"MYC\",\n    datacond = \"CONTROL\"\n)","category":"page"},{"location":"examples/rna_onoff/#Analyzing-Results","page":"RNA On-Off Analysis","title":"Analyzing Results","text":"","category":"section"},{"location":"examples/rna_onoff/#Basic-Analysis","page":"RNA On-Off Analysis","title":"Basic Analysis","text":"","category":"section"},{"location":"examples/rna_onoff/","page":"RNA On-Off Analysis","title":"RNA On-Off Analysis","text":"# Print basic statistics\nprintln(stats)\n\n# Plot the results\nusing Plots\nplot(fits)\n\n# Save results\nsave_results(fits, \"results/\")","category":"page"},{"location":"examples/rna_onoff/#On-Off-Analysis","page":"RNA On-Off Analysis","title":"On-Off Analysis","text":"","category":"section"},{"location":"examples/rna_onoff/","page":"RNA On-Off Analysis","title":"RNA On-Off Analysis","text":"# Analyze ON-OFF probabilities\nonoff_probs = analyze_onoff(fits)\nplot_onoff(onoff_probs, \"results/onoff/\")\n\n# Calculate ON-OFF residence times\nresidence_times = analyze_residence_times(fits)\nplot_residence_times(residence_times, \"results/residence_times/\")","category":"page"},{"location":"examples/rna_onoff/#Burst-Analysis","page":"RNA On-Off Analysis","title":"Burst Analysis","text":"","category":"section"},{"location":"examples/rna_onoff/","page":"RNA On-Off Analysis","title":"RNA On-Off Analysis","text":"# Analyze transcriptional bursts\nburst_stats = analyze_bursts(fits)\nprintln(burst_stats)\n\n# Plot burst statistics\nplot_bursts(fits, \"results/bursts/\")","category":"page"},{"location":"examples/rna_onoff/#Advanced-Analysis","page":"RNA On-Off Analysis","title":"Advanced Analysis","text":"","category":"section"},{"location":"examples/rna_onoff/#State-Transition-Analysis","page":"RNA On-Off Analysis","title":"State Transition Analysis","text":"","category":"section"},{"location":"examples/rna_onoff/","page":"RNA On-Off Analysis","title":"RNA On-Off Analysis","text":"# Analyze state transitions\ntransitions = analyze_transitions(fits)\n\n# Plot transition probabilities\nplot_transitions(transitions, \"results/transitions/\")\n\n# Calculate transition rates\nrates = calculate_transition_rates(fits)\nprintln(rates)","category":"page"},{"location":"examples/rna_onoff/#Model-Comparison","page":"RNA On-Off Analysis","title":"Model Comparison","text":"","category":"section"},{"location":"examples/rna_onoff/","page":"RNA On-Off Analysis","title":"RNA On-Off Analysis","text":"# Compare different model configurations\nconfigurations = [\n    (G=2, rates=[0.0, 1.0]),           # Basic ON-OFF\n    (G=3, rates=[0.0, 0.5, 1.0]),      # Three-state\n    (G=4, rates=[0.0, 0.3, 0.7, 1.0])  # Four-state\n]\n\nconfig_fits = []\nfor (G, rates) in configurations\n    fits, stats, measures, data, model, options = fit(\n        G = G,\n        R = R,\n        transitions = ([1:G...], [2:G..., 1]),\n        transcription_rates = rates,\n        datatype = \"rna\",\n        datapath = \"data/\",\n        gene = \"MYC\",\n        datacond = \"CONTROL\"\n    )\n    push!(config_fits, (fits, stats))\nend\n\n# Compare configurations\ncompare_configurations(config_fits, configurations, \"results/config_comparison/\")","category":"page"},{"location":"examples/rna_onoff/#Best-Practices","page":"RNA On-Off Analysis","title":"Best Practices","text":"","category":"section"},{"location":"examples/rna_onoff/","page":"RNA On-Off Analysis","title":"RNA On-Off Analysis","text":"Model Selection\nStart with basic ON-OFF model\nUse model selection criteria\nValidate state assumptions\nParameter Estimation\nCheck parameter identifiability\nVerify convergence\nConsider parameter correlations\nInterpretation\nRelate states to biological mechanisms\nConsider experimental validation\nDocument assumptions","category":"page"},{"location":"examples/rna_onoff/#Common-Issues-and-Solutions","page":"RNA On-Off Analysis","title":"Common Issues and Solutions","text":"","category":"section"},{"location":"examples/rna_onoff/#Parameter-Identifiability","page":"RNA On-Off Analysis","title":"Parameter Identifiability","text":"","category":"section"},{"location":"examples/rna_onoff/","page":"RNA On-Off Analysis","title":"RNA On-Off Analysis","text":"# Check parameter identifiability\nidentifiability = check_identifiability(fits)\nplot_identifiability(identifiability, \"results/identifiability/\")","category":"page"},{"location":"examples/rna_onoff/#State-Validation","page":"RNA On-Off Analysis","title":"State Validation","text":"","category":"section"},{"location":"examples/rna_onoff/","page":"RNA On-Off Analysis","title":"RNA On-Off Analysis","text":"# Validate state assignments\nvalidation = validate_states(fits)\nplot_validation(validation, \"results/validation/\")","category":"page"},{"location":"examples/rna_onoff/#Next-Steps","page":"RNA On-Off Analysis","title":"Next Steps","text":"","category":"section"},{"location":"examples/rna_onoff/","page":"RNA On-Off Analysis","title":"RNA On-Off Analysis","text":"Try different state configurations\nExperiment with transition patterns\nCompare results across different genes","category":"page"},{"location":"examples/rna_onoff/","page":"RNA On-Off Analysis","title":"RNA On-Off Analysis","text":"For more advanced examples, see:","category":"page"},{"location":"examples/rna_onoff/","page":"RNA On-Off Analysis","title":"RNA On-Off Analysis","text":"Pre-RNA Steps\nCoupled Models\nHierarchical Models ","category":"page"},{"location":"examples/rna_dwell_time/#RNA-Dwell-Time-Analysis","page":"RNA Dwell Time Analysis","title":"RNA Dwell Time Analysis","text":"","category":"section"},{"location":"examples/rna_dwell_time/","page":"RNA Dwell Time Analysis","title":"RNA Dwell Time Analysis","text":"This example demonstrates how to analyze RNA dwell time data to understand transcriptional dynamics.","category":"page"},{"location":"examples/rna_dwell_time/#Setup","page":"RNA Dwell Time Analysis","title":"Setup","text":"","category":"section"},{"location":"examples/rna_dwell_time/","page":"RNA Dwell Time Analysis","title":"RNA Dwell Time Analysis","text":"First, let's set up our project directory and load the package:","category":"page"},{"location":"examples/rna_dwell_time/","page":"RNA Dwell Time Analysis","title":"RNA Dwell Time Analysis","text":"using StochasticGene\n\n# Create project directory\nmkdir(\"dwell_time_example\")\ncd(\"dwell_time_example\")\n\n# Generate example data using test_fit_rnadwelltime\npredicted_hist, data_hist = test_fit_rnadwelltime(\n    rtarget=[0.33, 0.19, 2.5, 1.0],  # Target rates for simulation\n    transitions=([1, 2], [2, 1]),    # Simple two-state model\n    G=2,                             # 2 gene states\n    R=2,                             # 2 RNA states\n    S=2,                             # 2 splicing states\n    nRNA=100,                        # Number of RNA molecules\n    nalleles=2,                      # Number of alleles\n    onstates=[1],                    # States considered \"on\"\n    dttype=\"on\",                     # Analyze \"on\" dwell times\n    fittedparam=[1, 2, 3],          # Parameters to fit\n    nchains=1                        # Single MCMC chain for example\n)\n\n# Print results\nprintln(\"Predicted histogram: \", predicted_hist)\nprintln(\"Data histogram: \", data_hist)","category":"page"},{"location":"examples/rna_dwell_time/#Data-Preparation","page":"RNA Dwell Time Analysis","title":"Data Preparation","text":"","category":"section"},{"location":"examples/rna_dwell_time/","page":"RNA Dwell Time Analysis","title":"RNA Dwell Time Analysis","text":"Place your dwell time data in the data/ directory. The data should be organized as follows:","category":"page"},{"location":"examples/rna_dwell_time/","page":"RNA Dwell Time Analysis","title":"RNA Dwell Time Analysis","text":"data/\n├── gene_name/\n│   ├── condition1/\n│   │   ├── dwell_times.csv\n│   │   └── metadata.csv\n│   └── condition2/\n│       ├── dwell_times.csv\n│       └── metadata.csv","category":"page"},{"location":"examples/rna_dwell_time/","page":"RNA Dwell Time Analysis","title":"RNA Dwell Time Analysis","text":"Each dwell time CSV file should contain:","category":"page"},{"location":"examples/rna_dwell_time/","page":"RNA Dwell Time Analysis","title":"RNA Dwell Time Analysis","text":"Time intervals\nState labels (ON/OFF)\nOptional metadata","category":"page"},{"location":"examples/rna_dwell_time/#Model-Definition","page":"RNA Dwell Time Analysis","title":"Model Definition","text":"","category":"section"},{"location":"examples/rna_dwell_time/","page":"RNA Dwell Time Analysis","title":"RNA Dwell Time Analysis","text":"We'll fit a model with:","category":"page"},{"location":"examples/rna_dwell_time/","page":"RNA Dwell Time Analysis","title":"RNA Dwell Time Analysis","text":"2 gene states (G=2) - ON and OFF\nNo pre-RNA steps (R=0)\nSimple transitions between states","category":"page"},{"location":"examples/rna_dwell_time/","page":"RNA Dwell Time Analysis","title":"RNA Dwell Time Analysis","text":"# Define model parameters\nG = 2  # Number of gene states (ON and OFF)\nR = 0  # Number of pre-RNA steps\n\n# Define state transitions\n# Format: (from_states, to_states)\ntransitions = (\n    [1, 2],  # From states\n    [2, 1]   # To states\n)\n\n# Define transcription rates for each state\ntranscription_rates = [0.0, 1.0]  # No transcription in OFF state","category":"page"},{"location":"examples/rna_dwell_time/#Fitting-the-Model","page":"RNA Dwell Time Analysis","title":"Fitting the Model","text":"","category":"section"},{"location":"examples/rna_dwell_time/","page":"RNA Dwell Time Analysis","title":"RNA Dwell Time Analysis","text":"Now we can fit the model to our dwell time data:","category":"page"},{"location":"examples/rna_dwell_time/","page":"RNA Dwell Time Analysis","title":"RNA Dwell Time Analysis","text":"# Fit the model\nfits, stats, measures, data, model, options = fit(\n    G = G,\n    R = R,\n    transitions = transitions,\n    transcription_rates = transcription_rates,\n    datatype = \"dwell_time\",\n    datapath = \"data/\",\n    gene = \"MYC\",\n    datacond = \"CONTROL\"\n)","category":"page"},{"location":"examples/rna_dwell_time/#Analyzing-Results","page":"RNA Dwell Time Analysis","title":"Analyzing Results","text":"","category":"section"},{"location":"examples/rna_dwell_time/#Basic-Analysis","page":"RNA Dwell Time Analysis","title":"Basic Analysis","text":"","category":"section"},{"location":"examples/rna_dwell_time/","page":"RNA Dwell Time Analysis","title":"RNA Dwell Time Analysis","text":"# Print basic statistics\nprintln(stats)\n\n# Plot the results\nusing Plots\nplot(fits)\n\n# Save results\nsave_results(fits, \"results/\")","category":"page"},{"location":"examples/rna_dwell_time/#Dwell-Time-Analysis","page":"RNA Dwell Time Analysis","title":"Dwell Time Analysis","text":"","category":"section"},{"location":"examples/rna_dwell_time/","page":"RNA Dwell Time Analysis","title":"RNA Dwell Time Analysis","text":"# Analyze dwell time distributions\ndwell_times = analyze_dwell_times(fits)\nplot_dwell_times(dwell_times, \"results/dwell_times/\")\n\n# Calculate state residence times\nresidence_times = analyze_residence_times(fits)\nplot_residence_times(residence_times, \"results/residence_times/\")","category":"page"},{"location":"examples/rna_dwell_time/#Burst-Analysis","page":"RNA Dwell Time Analysis","title":"Burst Analysis","text":"","category":"section"},{"location":"examples/rna_dwell_time/","page":"RNA Dwell Time Analysis","title":"RNA Dwell Time Analysis","text":"# Analyze transcriptional bursts\nburst_stats = analyze_bursts(fits)\nprintln(burst_stats)\n\n# Plot burst statistics\nplot_bursts(fits, \"results/bursts/\")","category":"page"},{"location":"examples/rna_dwell_time/#Advanced-Analysis","page":"RNA Dwell Time Analysis","title":"Advanced Analysis","text":"","category":"section"},{"location":"examples/rna_dwell_time/#State-Transition-Analysis","page":"RNA Dwell Time Analysis","title":"State Transition Analysis","text":"","category":"section"},{"location":"examples/rna_dwell_time/","page":"RNA Dwell Time Analysis","title":"RNA Dwell Time Analysis","text":"# Analyze state transitions\ntransitions = analyze_transitions(fits)\n\n# Plot transition probabilities\nplot_transitions(transitions, \"results/transitions/\")\n\n# Calculate transition rates\nrates = calculate_transition_rates(fits)\nprintln(rates)","category":"page"},{"location":"examples/rna_dwell_time/#Model-Comparison","page":"RNA Dwell Time Analysis","title":"Model Comparison","text":"","category":"section"},{"location":"examples/rna_dwell_time/","page":"RNA Dwell Time Analysis","title":"RNA Dwell Time Analysis","text":"# Compare different model configurations\nconfigurations = [\n    (G=2, rates=[0.0, 1.0]),           # Basic ON-OFF\n    (G=3, rates=[0.0, 0.5, 1.0]),      # Three-state\n    (G=4, rates=[0.0, 0.3, 0.7, 1.0])  # Four-state\n]\n\nconfig_fits = []\nfor (G, rates) in configurations\n    fits, stats, measures, data, model, options = fit(\n        G = G,\n        R = R,\n        transitions = ([1:G...], [2:G..., 1]),\n        transcription_rates = rates,\n        datatype = \"dwell_time\",\n        datapath = \"data/\",\n        gene = \"MYC\",\n        datacond = \"CONTROL\"\n    )\n    push!(config_fits, (fits, stats))\nend\n\n# Compare configurations\ncompare_configurations(config_fits, configurations, \"results/config_comparison/\")","category":"page"},{"location":"examples/rna_dwell_time/#Best-Practices","page":"RNA Dwell Time Analysis","title":"Best Practices","text":"","category":"section"},{"location":"examples/rna_dwell_time/","page":"RNA Dwell Time Analysis","title":"RNA Dwell Time Analysis","text":"Model Selection\nStart with basic ON-OFF model\nUse model selection criteria\nValidate state assumptions\nParameter Estimation\nCheck parameter identifiability\nVerify convergence\nConsider parameter correlations\nInterpretation\nRelate states to biological mechanisms\nConsider experimental validation\nDocument assumptions","category":"page"},{"location":"examples/rna_dwell_time/#Common-Issues-and-Solutions","page":"RNA Dwell Time Analysis","title":"Common Issues and Solutions","text":"","category":"section"},{"location":"examples/rna_dwell_time/#Parameter-Identifiability","page":"RNA Dwell Time Analysis","title":"Parameter Identifiability","text":"","category":"section"},{"location":"examples/rna_dwell_time/","page":"RNA Dwell Time Analysis","title":"RNA Dwell Time Analysis","text":"# Check parameter identifiability\nidentifiability = check_identifiability(fits)\nplot_identifiability(identifiability, \"results/identifiability/\")","category":"page"},{"location":"examples/rna_dwell_time/#State-Validation","page":"RNA Dwell Time Analysis","title":"State Validation","text":"","category":"section"},{"location":"examples/rna_dwell_time/","page":"RNA Dwell Time Analysis","title":"RNA Dwell Time Analysis","text":"# Validate state assignments\nvalidation = validate_states(fits)\nplot_validation(validation, \"results/validation/\")","category":"page"},{"location":"examples/rna_dwell_time/#Next-Steps","page":"RNA Dwell Time Analysis","title":"Next Steps","text":"","category":"section"},{"location":"examples/rna_dwell_time/","page":"RNA Dwell Time Analysis","title":"RNA Dwell Time Analysis","text":"Try different state configurations\nExperiment with transition patterns\nCompare results across different genes","category":"page"},{"location":"examples/rna_dwell_time/","page":"RNA Dwell Time Analysis","title":"RNA Dwell Time Analysis","text":"For more advanced examples, see:","category":"page"},{"location":"examples/rna_dwell_time/","page":"RNA Dwell Time Analysis","title":"RNA Dwell Time Analysis","text":"Pre-RNA Steps\nCoupled Models\nHierarchical Models ","category":"page"},{"location":"#StochasticGene.jl","page":"Home","title":"StochasticGene.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"A Julia package for simulating and fitting stochastic models of gene transcription to experimental data.","category":"page"},{"location":"#Overview","page":"Home","title":"Overview","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"StochasticGene.jl is designed to analyze various types of experimental data including:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Distributions of mRNA counts per cell (e.g., single molecule FISH (smFISH) or single cell RNA sequencing (scRNA-seq) data)\nImage intensity traces from live cell imaging\nDwell time distributions of reporters (e.g., MS2 or PP7) imaged in live cells\nCombinations of the above data types","category":"page"},{"location":"","page":"Home","title":"Home","text":"The package implements stochastic (continuous Markov) models with:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Arbitrary number of G (gene) states\nR (pre-RNA) steps\nS splice sites (up to R)\nReporter insertion step","category":"page"},{"location":"#Key-Features","page":"Home","title":"Key Features","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Flexible Model Specification\nSupport for multiple alleles of the gene in the same cell\nConfigurable reporter visibility at specific R steps\nCoupling between genes/alleles\nSupport for both exon and intron reporter constructs\nClassic telegraph models with arbitrary numbers of G states\nMultiple simultaneous reporters (e.g., for introns and transcription factors)\nAdvanced Capabilities\nParallel processing capabilities\nScalable from laptop to cluster computing\nBayesian parameter estimation\nMCMC fitting\nComprehensive result analysis","category":"page"},{"location":"#Quick-Start","page":"Home","title":"Quick Start","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using StochasticGene\n\n# Set up directory structure\nrna_setup(\"scRNA\")\n\n# Fit a simple two-state model\nfits, stats, measures, data, model, options = fit(nchains=4)","category":"page"},{"location":"#Documentation-Structure","page":"Home","title":"Documentation Structure","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Installation: How to install StochasticGene.jl\nGetting Started: Basic usage and examples\nAPI Reference: Detailed documentation of all functions and types\nExamples: More complex usage examples\nContributing: How to contribute to the project","category":"page"},{"location":"#System-Requirements","page":"Home","title":"System Requirements","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Julia version 1.9.3 or higher\nRequired packages will be automatically installed\nFor large datasets: Multiprocessor system recommended","category":"page"},{"location":"#Support","page":"Home","title":"Support","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation: This site\nGitHub Issues: Report bugs or request features\nMaintainers: Contact the package maintainers for specific questions","category":"page"},{"location":"#Citation","page":"Home","title":"Citation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"If you use StochasticGene.jl in your research, please cite:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Rodriguez et al. Cell (2018)\nWan et al. Cell (2021)\nTrzaskoma et al. Science Advances (2024)","category":"page"},{"location":"#License","page":"Home","title":"License","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This package is licensed under the MIT License.","category":"page"},{"location":"examples/hierarchical_trace/#Hierarchical-Trace-Analysis","page":"Hierarchical Trace Analysis","title":"Hierarchical Trace Analysis","text":"","category":"section"},{"location":"examples/hierarchical_trace/","page":"Hierarchical Trace Analysis","title":"Hierarchical Trace Analysis","text":"This example demonstrates how to analyze trace data using hierarchical models to account for cell-to-cell variability.","category":"page"},{"location":"examples/hierarchical_trace/#Setup","page":"Hierarchical Trace Analysis","title":"Setup","text":"","category":"section"},{"location":"examples/hierarchical_trace/","page":"Hierarchical Trace Analysis","title":"Hierarchical Trace Analysis","text":"First, let's set up our project directory and load the package:","category":"page"},{"location":"examples/hierarchical_trace/","page":"Hierarchical Trace Analysis","title":"Hierarchical Trace Analysis","text":"using StochasticGene\n\n# Create project directory\nmkdir(\"hierarchical_example\")\ncd(\"hierarchical_example\")\n\n# Generate example data using test_fit_trace_hierarchical\nfitted_rates, target_rates = test_fit_trace_hierarchical(\n    traceinfo=Dict(\"cell\" => \"example\", \"gene\" => \"test\"),  # Trace metadata\n    G=2,                             # 2 gene states\n    R=2,                             # 2 RNA states\n    S=2,                             # 2 splicing states\n    transitions=([1, 2], [2, 1]),    # Simple two-state model\n    rtarget=[0.33, 0.19, 2.5, 1.0],  # Target rates for simulation\n    totaltime=1000,                  # Total simulation time\n    ntrials=10,                      # Number of simulation trials\n    fittedparam=[1, 2, 3],          # Parameters to fit\n    hierarchical=true,               # Use hierarchical model\n    nchains=1                        # Single MCMC chain for example\n)\n\n# Print results\nprintln(\"Fitted rates: \", fitted_rates)\nprintln(\"Target rates: \", target_rates)","category":"page"},{"location":"examples/hierarchical_trace/#Data-Preparation","page":"Hierarchical Trace Analysis","title":"Data Preparation","text":"","category":"section"},{"location":"examples/hierarchical_trace/","page":"Hierarchical Trace Analysis","title":"Hierarchical Trace Analysis","text":"Place your trace data in the data/ directory. The data should be organized as follows:","category":"page"},{"location":"examples/hierarchical_trace/","page":"Hierarchical Trace Analysis","title":"Hierarchical Trace Analysis","text":"data/\n├── gene_name/\n│   ├── condition1/\n│   │   ├── cell1.csv\n│   │   ├── cell2.csv\n│   │   └── metadata.csv\n│   └── condition2/\n│       ├── cell1.csv\n│       ├── cell2.csv\n│       └── metadata.csv","category":"page"},{"location":"examples/hierarchical_trace/","page":"Hierarchical Trace Analysis","title":"Hierarchical Trace Analysis","text":"Each cell CSV file should contain:","category":"page"},{"location":"examples/hierarchical_trace/","page":"Hierarchical Trace Analysis","title":"Hierarchical Trace Analysis","text":"Time points\nFluorescence intensity values\nOptional background values","category":"page"},{"location":"examples/hierarchical_trace/#Model-Definition","page":"Hierarchical Trace Analysis","title":"Model Definition","text":"","category":"section"},{"location":"examples/hierarchical_trace/","page":"Hierarchical Trace Analysis","title":"Hierarchical Trace Analysis","text":"We'll fit a hierarchical model with:","category":"page"},{"location":"examples/hierarchical_trace/","page":"Hierarchical Trace Analysis","title":"Hierarchical Trace Analysis","text":"2 gene states (G=2) - ON and OFF\n1 pre-RNA step (R=1)\nSimple transitions between states\nCell-specific parameters","category":"page"},{"location":"examples/hierarchical_trace/","page":"Hierarchical Trace Analysis","title":"Hierarchical Trace Analysis","text":"# Define model parameters\nG = 2  # Number of gene states (ON and OFF)\nR = 1  # Number of pre-RNA steps\n\n# Define state transitions\n# Format: (from_states, to_states)\ntransitions = (\n    [1, 2],  # From states\n    [2, 1]   # To states\n)\n\n# Define transcription rates for each state\ntranscription_rates = [0.0, 1.0]  # No transcription in OFF state\n\n# Define hierarchical structure\nhierarchical = true","category":"page"},{"location":"examples/hierarchical_trace/#Fitting-the-Model","page":"Hierarchical Trace Analysis","title":"Fitting the Model","text":"","category":"section"},{"location":"examples/hierarchical_trace/","page":"Hierarchical Trace Analysis","title":"Hierarchical Trace Analysis","text":"Now we can fit the hierarchical model to our trace data:","category":"page"},{"location":"examples/hierarchical_trace/","page":"Hierarchical Trace Analysis","title":"Hierarchical Trace Analysis","text":"# Fit the model\nfits, stats, measures, data, model, options = fit(\n    G = G,\n    R = R,\n    transitions = transitions,\n    transcription_rates = transcription_rates,\n    datatype = \"trace\",\n    datapath = \"data/\",\n    gene = \"MYC\",\n    datacond = \"CONTROL\",\n    hierarchical = true\n)","category":"page"},{"location":"examples/hierarchical_trace/#Analyzing-Results","page":"Hierarchical Trace Analysis","title":"Analyzing Results","text":"","category":"section"},{"location":"examples/hierarchical_trace/#Basic-Analysis","page":"Hierarchical Trace Analysis","title":"Basic Analysis","text":"","category":"section"},{"location":"examples/hierarchical_trace/","page":"Hierarchical Trace Analysis","title":"Hierarchical Trace Analysis","text":"# Print basic statistics\nprintln(stats)\n\n# Plot the results\nusing Plots\nplot(fits)\n\n# Save results\nsave_results(fits, \"results/\")","category":"page"},{"location":"examples/hierarchical_trace/#Cell-Specific-Analysis","page":"Hierarchical Trace Analysis","title":"Cell-Specific Analysis","text":"","category":"section"},{"location":"examples/hierarchical_trace/","page":"Hierarchical Trace Analysis","title":"Hierarchical Trace Analysis","text":"# Analyze cell-specific parameters\ncell_params = analyze_cell_parameters(fits)\nplot_cell_parameters(cell_params, \"results/cell_parameters/\")\n\n# Plot individual cell traces\nplot_cell_traces(fits, \"results/cell_traces/\")","category":"page"},{"location":"examples/hierarchical_trace/#Population-Analysis","page":"Hierarchical Trace Analysis","title":"Population Analysis","text":"","category":"section"},{"location":"examples/hierarchical_trace/","page":"Hierarchical Trace Analysis","title":"Hierarchical Trace Analysis","text":"# Analyze population statistics\npop_stats = analyze_population(fits)\nplot_population_stats(pop_stats, \"results/population/\")\n\n# Calculate population averages\npop_avg = calculate_population_average(fits)\nplot_population_average(pop_avg, \"results/population_average/\")","category":"page"},{"location":"examples/hierarchical_trace/#Advanced-Analysis","page":"Hierarchical Trace Analysis","title":"Advanced Analysis","text":"","category":"section"},{"location":"examples/hierarchical_trace/#Variability-Analysis","page":"Hierarchical Trace Analysis","title":"Variability Analysis","text":"","category":"section"},{"location":"examples/hierarchical_trace/","page":"Hierarchical Trace Analysis","title":"Hierarchical Trace Analysis","text":"# Analyze cell-to-cell variability\nvariability = analyze_variability(fits)\nplot_variability(variability, \"results/variability/\")\n\n# Calculate correlation structure\ncorrelations = calculate_correlations(fits)\nplot_correlations(correlations, \"results/correlations/\")","category":"page"},{"location":"examples/hierarchical_trace/#Model-Comparison","page":"Hierarchical Trace Analysis","title":"Model Comparison","text":"","category":"section"},{"location":"examples/hierarchical_trace/","page":"Hierarchical Trace Analysis","title":"Hierarchical Trace Analysis","text":"# Compare hierarchical and non-hierarchical models\nmodels = [\n    (hierarchical=true,  name=\"Hierarchical\"),\n    (hierarchical=false, name=\"Non-hierarchical\")\n]\n\nmodel_fits = []\nfor (hier, name) in models\n    fits, stats, measures, data, model, options = fit(\n        G = G,\n        R = R,\n        transitions = transitions,\n        transcription_rates = transcription_rates,\n        datatype = \"trace\",\n        datapath = \"data/\",\n        gene = \"MYC\",\n        datacond = \"CONTROL\",\n        hierarchical = hier\n    )\n    push!(model_fits, (fits, stats, name))\nend\n\n# Compare models\ncompare_models(model_fits, \"results/model_comparison/\")","category":"page"},{"location":"examples/hierarchical_trace/#Best-Practices","page":"Hierarchical Trace Analysis","title":"Best Practices","text":"","category":"section"},{"location":"examples/hierarchical_trace/","page":"Hierarchical Trace Analysis","title":"Hierarchical Trace Analysis","text":"Data Quality\nCheck for photobleaching\nVerify signal-to-noise ratio\nConsider background correction\nModel Selection\nStart with simple models\nUse model selection criteria\nValidate assumptions\nAnalysis Pipeline\nDocument preprocessing steps\nSave intermediate results\nVersion control your analysis","category":"page"},{"location":"examples/hierarchical_trace/#Common-Issues-and-Solutions","page":"Hierarchical Trace Analysis","title":"Common Issues and Solutions","text":"","category":"section"},{"location":"examples/hierarchical_trace/#Parameter-Identifiability","page":"Hierarchical Trace Analysis","title":"Parameter Identifiability","text":"","category":"section"},{"location":"examples/hierarchical_trace/","page":"Hierarchical Trace Analysis","title":"Hierarchical Trace Analysis","text":"# Check parameter identifiability\nidentifiability = check_identifiability(fits)\nplot_identifiability(identifiability, \"results/identifiability/\")","category":"page"},{"location":"examples/hierarchical_trace/#Convergence","page":"Hierarchical Trace Analysis","title":"Convergence","text":"","category":"section"},{"location":"examples/hierarchical_trace/","page":"Hierarchical Trace Analysis","title":"Hierarchical Trace Analysis","text":"# Check model convergence\nconvergence = check_convergence(fits)\nplot_convergence(convergence, \"results/convergence/\")\n\n# Analyze parameter correlations\ncorrelations = analyze_parameter_correlations(fits)\nplot_parameter_correlations(correlations, \"results/parameter_correlations/\")","category":"page"},{"location":"examples/hierarchical_trace/#Next-Steps","page":"Hierarchical Trace Analysis","title":"Next Steps","text":"","category":"section"},{"location":"examples/hierarchical_trace/","page":"Hierarchical Trace Analysis","title":"Hierarchical Trace Analysis","text":"Try different hierarchical structures\nExperiment with parameter priors\nCompare results across different genes","category":"page"},{"location":"examples/hierarchical_trace/","page":"Hierarchical Trace Analysis","title":"Hierarchical Trace Analysis","text":"For more advanced examples, see:","category":"page"},{"location":"examples/hierarchical_trace/","page":"Hierarchical Trace Analysis","title":"Hierarchical Trace Analysis","text":"Joint Analysis\nCoupled Models\nTime Series Analysis ","category":"page"},{"location":"api/fit/#fit-Function","page":"Model Fitting","title":"fit Function","text":"","category":"section"},{"location":"api/fit/","page":"Model Fitting","title":"Model Fitting","text":"Fit steady state or transient GM/GRSM model to RNA data for a single gene, write the result (through function finalize), and return fit results and diagnostics.","category":"page"},{"location":"api/fit/","page":"Model Fitting","title":"Model Fitting","text":"For coupled transcribing units, arguments transitions, G, R, S, insertstep, and trace become tuples of the single unit type, e.g. If two types of transcription models are desired with G=2 and G=3 then G = (2,3).","category":"page"},{"location":"api/fit/#Syntax","page":"Model Fitting","title":"Syntax","text":"","category":"section"},{"location":"api/fit/","page":"Model Fitting","title":"Model Fitting","text":"fits = fit(; kwargs...)","category":"page"},{"location":"api/fit/#Arguments","page":"Model Fitting","title":"Arguments","text":"","category":"section"},{"location":"api/fit/#Basic-Model-Parameters","page":"Model Fitting","title":"Basic Model Parameters","text":"","category":"section"},{"location":"api/fit/","page":"Model Fitting","title":"Model Fitting","text":"G::Int = 2: Number of gene states\nR::Int = 0: Number of pre-RNA steps\nS::Int = 0: Number of splice sites (must be ≤ R - insertstep + 1)\ninsertstep::Int = 1: Reporter insertion step\ntransitions::Tuple: Tuple of vectors specifying state transitions","category":"page"},{"location":"api/fit/#Data-Parameters","page":"Model Fitting","title":"Data Parameters","text":"","category":"section"},{"location":"api/fit/","page":"Model Fitting","title":"Model Fitting","text":"datatype::String = \"rna\": Data type:\n\"rna\": mRNA count distributions\n\"trace\": Intensity traces\n\"rnadwelltime\": Combined RNA and dwell time data\n\"tracejoint\": Simultaneous recorded traces\ndatapath::String = \"\": Path to data file or folder\ndatacond::String = \"\": Data condition identifier\ncell::String = \"\": Cell type\ngene::String = \"MYC\": Gene name\nnalleles::Int = 1: Number of alleles","category":"page"},{"location":"api/fit/#Fitting-Parameters","page":"Model Fitting","title":"Fitting Parameters","text":"","category":"section"},{"location":"api/fit/","page":"Model Fitting","title":"Model Fitting","text":"nchains::Int = 2: Number of MCMC chains\nmaxtime::Float64 = 60: Maximum wall time (minutes)\nsamplesteps::Int = 1000000: Number of MCMC sampling steps\nwarmupsteps::Int = 0: Number of warmup steps\npropcv::Float64 = 0.01: Proposal distribution coefficient of variation\nannealsteps::Int = 0: Number of annealing steps\ntemp::Float64 = 1.0: MCMC temperature","category":"page"},{"location":"api/fit/#Prior-Parameters","page":"Model Fitting","title":"Prior Parameters","text":"","category":"section"},{"location":"api/fit/","page":"Model Fitting","title":"Model Fitting","text":"priormean::Vector{Float64} = Float64[]: Mean rates for prior distribution\npriorcv::Float64 = 10.0: Prior distribution coefficient of variation\nnoisepriors::Vector = []: Observation noise priors\nfittedparams::Vector{Int} = Int[]: Indices of rates to fit\nfixedeffects::Tuple = tuple(): Fixed effects specification","category":"page"},{"location":"api/fit/#Trace-Parameters-(for-trace-data)","page":"Model Fitting","title":"Trace Parameters (for trace data)","text":"","category":"section"},{"location":"api/fit/","page":"Model Fitting","title":"Model Fitting","text":"traceinfo::Tuple = (1.0, 1., -1, 1.): Trace parameters:\nFrame interval (minutes)\nStarting frame time (minutes)\nEnding frame time (-1 for last)\nFraction of active traces\ndatacol::Int = 3: Data column index\nprobfn::Function = prob_Gaussian: Observation probability function\nnoiseparams::Int = 4: Number of noise parameters\nzeromedian::Bool = false: Subtract median from traces","category":"page"},{"location":"api/fit/#Output-Parameters","page":"Model Fitting","title":"Output Parameters","text":"","category":"section"},{"location":"api/fit/","page":"Model Fitting","title":"Model Fitting","text":"resultfolder::String = \"test\": Results output folder\nlabel::String = \"\": Output file label\ninfolder::String = \"\": Folder for initial parameters\ninlabel::String = \"\": Label of initial parameter files\nwritesamples::Bool = false: Write MCMC samples","category":"page"},{"location":"api/fit/#Returns","page":"Model Fitting","title":"Returns","text":"","category":"section"},{"location":"api/fit/","page":"Model Fitting","title":"Model Fitting","text":"fits: MCMC fit results containing:\nPosterior samples\nLog-likelihoods\nAcceptance rates","category":"page"},{"location":"api/fit/#Examples","page":"Model Fitting","title":"Examples","text":"","category":"section"},{"location":"api/fit/#Basic-RNA-Histogram-Fit","page":"Model Fitting","title":"Basic RNA Histogram Fit","text":"","category":"section"},{"location":"api/fit/","page":"Model Fitting","title":"Model Fitting","text":"fits = fit(\n    G = 2,\n    R = 0,\n    transitions = ([1,2], [2,1]),\n    datatype = \"rna\",\n    datapath = \"data/HCT116_testdata/\",\n    gene = \"MYC\",\n    datacond = \"MOCK\"\n)","category":"page"},{"location":"api/fit/#Trace-Data-Fit","page":"Model Fitting","title":"Trace Data Fit","text":"","category":"section"},{"location":"api/fit/","page":"Model Fitting","title":"Model Fitting","text":"fits = fit(\n    G = 3,\n    R = 2,\n    S = 2,\n    insertstep = 1,\n    transitions = ([1,2], [2,1], [2,3], [3,1]),\n    datatype = \"trace\",\n    datapath = \"data/testtraces\",\n    cell = \"TEST\",\n    gene = \"test\",\n    datacond = \"testtrace\",\n    traceinfo = (1.0, 1., -1, 1.),\n    noisepriors = [40., 20., 200., 10.],\n    nchains = 4\n)","category":"page"},{"location":"api/fit/#Notes","page":"Model Fitting","title":"Notes","text":"","category":"section"},{"location":"api/fit/","page":"Model Fitting","title":"Model Fitting","text":"Rate Order\nG transitions\nR transitions\nS transitions\nDecay\nNoise parameters\nMCMC Convergence\nR-hat should be close to 1 (ideally < 1.05)\nIncrease maxtime or samplesteps if R-hat is high\nUse warmupsteps to improve proposal distribution","category":"page"}]
}
